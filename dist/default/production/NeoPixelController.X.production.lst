

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Fri Apr 17 22:31:27 2020

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og9 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bitbssCOMRAM,global,bit,class=COMRAM,space=1,delta=1,noexec
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	bssBIGRAM,global,class=BIGRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    12                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    13                           	psect	text0,global,reloc=2,class=CODE,delta=1
    14                           	psect	text1,global,reloc=2,class=CODE,delta=1
    15                           	psect	text2,global,reloc=2,class=CODE,delta=1
    16                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=1
    17                           	psect	text4,global,reloc=2,class=CODE,delta=1
    18                           	psect	text5,global,reloc=2,class=CODE,delta=1
    19                           	psect	text6,global,reloc=2,class=CODE,delta=1
    20                           	psect	text7,global,reloc=2,class=CODE,delta=1
    21                           	psect	text8,global,reloc=2,class=CODE,delta=1
    22                           	psect	text9,global,reloc=2,class=CODE,delta=1
    23                           	psect	text10,global,reloc=2,class=CODE,delta=1
    24                           	psect	text11,global,reloc=2,class=CODE,delta=1
    25                           	psect	text12,global,reloc=2,class=CODE,delta=1
    26                           	psect	text13,global,reloc=2,class=CODE,delta=1
    27                           	psect	text14,global,reloc=2,class=CODE,delta=1
    28                           	psect	text15,global,reloc=2,class=CODE,delta=1
    29                           	psect	text16,global,reloc=2,class=CODE,delta=1
    30                           	psect	text17,global,reloc=2,class=CODE,delta=1
    31                           	psect	text18,global,reloc=2,class=CODE,delta=1
    32                           	psect	text19,global,reloc=2,class=CODE,delta=1
    33                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=1
    34                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=1
    35                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=1
    36                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=1
    37                           	psect	text24,global,reloc=2,class=CODE,delta=1
    38                           	psect	text25,global,reloc=2,class=CODE,delta=1
    39                           	psect	text26,global,reloc=2,class=CODE,delta=1
    40                           	psect	text27,global,reloc=2,class=CODE,delta=1
    41                           	psect	text28,global,reloc=2,class=CODE,delta=1,group=1
    42                           	psect	text29,global,reloc=2,class=CODE,delta=1
    43                           	psect	text30,global,reloc=2,class=CODE,delta=1,group=1
    44                           	psect	text31,global,reloc=2,class=CODE,delta=1,group=1
    45                           	psect	text32,global,reloc=2,class=CODE,delta=1
    46                           	psect	text33,global,reloc=2,class=CODE,delta=1
    47                           	psect	text34,global,reloc=2,class=CODE,delta=1
    48                           	psect	text35,global,reloc=2,class=CODE,delta=1
    49                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    50                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    51                           	psect	text37,global,reloc=2,class=CODE,delta=1
    52                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    53                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    54                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    55  0000                     
    56                           ; Version 2.10
    57                           ; Generated 31/07/2019 GMT
    58                           ; 
    59                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    60                           ; All rights reserved.
    61                           ; 
    62                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    63                           ; 
    64                           ; Redistribution and use in source and binary forms, with or without modification, are
    65                           ; permitted provided that the following conditions are met:
    66                           ; 
    67                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    68                           ;        conditions and the following disclaimer.
    69                           ; 
    70                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    71                           ;        of conditions and the following disclaimer in the documentation and/or other
    72                           ;        materials provided with the distribution.
    73                           ; 
    74                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    75                           ;        software without specific prior written permission.
    76                           ; 
    77                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    78                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    79                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    80                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    81                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    82                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    83                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    84                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    85                           ; 
    86                           ; 
    87                           ; Code-generator required, PIC18F4550 Definitions
    88                           ; 
    89                           ; SFR Addresses
    90  0000                     
    91                           	psect	smallconst
    92  000800                     __psmallconst:
    93                           	opt callstack 0
    94  000800  00                 	db	0
    95  000801  0002               	dw	2
    96  000803                     __end_of_bOffset:
    97                           	opt callstack 0
    98  000803  0001               	dw	1
    99  000805                     __end_of_gOffset:
   100                           	opt callstack 0
   101  000805  0000               	dw	0
   102  000807                     __end_of_rOffset:
   103                           	opt callstack 0
   104  000807  00D2               	dw	210
   105  000809                     __end_of_NeoNum:
   106                           	opt callstack 0
   107  0000                     _INTCONbits	set	4082
   108  0000                     _RCONbits	set	4048
   109  0000                     _PIE1bits	set	3997
   110  0000                     _BAUDCON	set	4024
   111  0000                     _RCSTA	set	4011
   112  0000                     _TXSTA	set	4012
   113  0000                     _SPBRGH	set	4016
   114  0000                     _SPBRG	set	4015
   115  0000                     _TRISCbits	set	3988
   116  0000                     _T1CON	set	4045
   117  0000                     _TMR1L	set	4046
   118  0000                     _TMR1H	set	4047
   119  0000                     _PORTE	set	3972
   120  0000                     _PORTD	set	3971
   121  0000                     _PORTC	set	3970
   122  0000                     _PORTB	set	3969
   123  0000                     _PORTA	set	3968
   124  0000                     _TRISE	set	3990
   125  0000                     _TRISD	set	3989
   126  0000                     _TRISC	set	3988
   127  0000                     _TRISB	set	3987
   128  0000                     _TRISA	set	3986
   129  0000                     _OSCCONbits	set	4051
   130  0000                     _RCREG	set	4014
   131  0000                     _PIR1bits	set	3998
   132                           
   133                           ; #config settings
   134  000809  00                 	db	0	; dummy byte at the end
   135  0000                     
   136                           	psect	cinit
   137  003B5E                     __pcinit:
   138                           	opt callstack 0
   139  003B5E                     start_initialization:
   140                           	opt callstack 0
   141  003B5E                     __initialization:
   142                           	opt callstack 0
   143                           
   144                           ; Clear objects allocated to BIGRAM (1260 bytes)
   145  003B5E  EE00  F06E         	lfsr	0,__pbssBIGRAM
   146  003B62  EE14 F0EC          	lfsr	1,1260
   147  003B66                     clear_0:
   148  003B66  6AEE               	clrf	postinc0,c
   149  003B68  50E5               	movf	postdec1,w,c
   150  003B6A  50E1               	movf	fsr1l,w,c
   151  003B6C  E1FC               	bnz	clear_0
   152  003B6E  50E2               	movf	fsr1h,w,c
   153  003B70  E1FA               	bnz	clear_0
   154                           
   155                           ; Clear objects allocated to BANK0 (12 bytes)
   156  003B72  EE00  F060         	lfsr	0,__pbssBANK0
   157  003B76  0E0C               	movlw	12
   158  003B78                     clear_1:
   159  003B78  6AEE               	clrf	postinc0,c
   160  003B7A  06E8               	decf	wreg,f,c
   161  003B7C  E1FD               	bnz	clear_1
   162                           
   163                           ; Clear objects allocated to BITCOMRAM (1 bytes)
   164  003B7E  6A5C               	clrf	(__pbitbssCOMRAM/(0+8))& (0+255),c
   165                           
   166                           ; Clear objects allocated to COMRAM (5 bytes)
   167  003B80  6A5B               	clrf	(__pbssCOMRAM+4)& (0+255),c
   168  003B82  6A5A               	clrf	(__pbssCOMRAM+3)& (0+255),c
   169  003B84  6A59               	clrf	(__pbssCOMRAM+2)& (0+255),c
   170  003B86  6A58               	clrf	(__pbssCOMRAM+1)& (0+255),c
   171  003B88  6A57               	clrf	__pbssCOMRAM& (0+255),c
   172  003B8A                     end_of_initialization:
   173                           	opt callstack 0
   174  003B8A                     __end_of__initialization:
   175                           	opt callstack 0
   176  003B8A  905D               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   177  003B8C  925D               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   178  003B8E  0E00               	movlw	low (__Lmediumconst shr (0+16))
   179  003B90  6EF8               	movwf	tblptru,c
   180  003B92  0100               	movlb	0
   181  003B94  EF9B  F019         	goto	_main	;jump to C main() function
   182                           
   183                           	psect	bitbssCOMRAM
   184  0002E0                     __pbitbssCOMRAM:
   185                           	opt callstack 0
   186  0002E0                     _BT_rainbow:
   187                           	opt callstack 0
   188  0002E0                     	ds	1
   189                           
   190                           	psect	bssCOMRAM
   191  000057                     __pbssCOMRAM:
   192                           	opt callstack 0
   193  000057                     _BT_RGB:
   194                           	opt callstack 0
   195  000057                     	ds	3
   196  00005A                     _BT_Tiempo:
   197                           	opt callstack 0
   198  00005A                     	ds	1
   199  00005B                     _BT_Patron:
   200                           	opt callstack 0
   201  00005B                     	ds	1
   202                           
   203                           	psect	bssBANK0
   204  000060                     __pbssBANK0:
   205                           	opt callstack 0
   206  000060                     _BT_RC:
   207                           	opt callstack 0
   208  000060                     	ds	5
   209  000065                     _BT_Buff:
   210                           	opt callstack 0
   211  000065                     	ds	1
   212  000066                     _ByteB:
   213                           	opt callstack 0
   214  000066                     	ds	1
   215  000067                     _ByteG:
   216                           	opt callstack 0
   217  000067                     	ds	1
   218  000068                     _ByteR:
   219                           	opt callstack 0
   220  000068                     	ds	1
   221  000069                     Wheel@c:
   222                           	opt callstack 0
   223  000069                     	ds	3
   224                           
   225                           	psect	bssBIGRAM
   226  00006E                     __pbssBIGRAM:
   227                           	opt callstack 0
   228  00006E                     _NumofBytes:
   229                           	opt callstack 0
   230  00006E                     	ds	1260
   231                           
   232                           	psect	cstackBANK0
   233  00006C                     __pcstackBANK0:
   234                           	opt callstack 0
   235  00006C                     ??_main:
   236                           
   237                           ; 1 bytes @ 0x0
   238  00006C                     	ds	2
   239                           
   240                           	psect	cstackCOMRAM
   241  000001                     __pcstackCOMRAM:
   242                           	opt callstack 0
   243  000001                     ??_ISR:
   244  000001                     
   245                           ; 2 bytes @ 0x0
   246  000001                     	ds	2
   247  000003                     ??_Show:
   248  000003                     ?___wmul:
   249                           	opt callstack 0
   250  000003                     ?___awmod:
   251                           	opt callstack 0
   252  000003                     ?___fltol:
   253                           	opt callstack 0
   254  000003                     ?___xxtofl:
   255                           	opt callstack 0
   256  000003                     ___lbdiv@divisor:
   257                           	opt callstack 0
   258  000003                     Time_Check@Time:
   259                           	opt callstack 0
   260  000003                     Delay_ms@time:
   261                           	opt callstack 0
   262  000003                     ___wmul@multiplier:
   263                           	opt callstack 0
   264  000003                     ___awmod@dividend:
   265                           	opt callstack 0
   266  000003                     ___fltol@f1:
   267                           	opt callstack 0
   268  000003                     ___xxtofl@val:
   269                           	opt callstack 0
   270                           
   271                           ; 4 bytes @ 0x2
   272  000003                     	ds	1
   273  000004                     ___lbdiv@dividend:
   274                           	opt callstack 0
   275  000004                     Show@i:
   276                           	opt callstack 0
   277                           
   278                           ; 2 bytes @ 0x3
   279  000004                     	ds	1
   280  000005                     ??_Delay_ms:
   281  000005                     ??_Time_Check:
   282  000005                     ___lbdiv@counter:
   283                           	opt callstack 0
   284  000005                     ___wmul@multiplicand:
   285                           	opt callstack 0
   286  000005                     ___awmod@divisor:
   287                           	opt callstack 0
   288                           
   289                           ; 2 bytes @ 0x4
   290  000005                     	ds	1
   291  000006                     ___lbdiv@quotient:
   292                           	opt callstack 0
   293  000006                     staticWheel@i:
   294                           	opt callstack 0
   295  000006                     Delay_ms@l:
   296                           	opt callstack 0
   297  000006                     Show@ptrInicial:
   298                           	opt callstack 0
   299                           
   300                           ; 2 bytes @ 0x5
   301  000006                     	ds	1
   302  000007                     ??___fltol:
   303  000007                     ??___xxtofl:
   304  000007                     ___awmod@counter:
   305                           	opt callstack 0
   306  000007                     ___wmul@product:
   307                           	opt callstack 0
   308                           
   309                           ; 2 bytes @ 0x6
   310  000007                     	ds	1
   311  000008                     ___awmod@sign:
   312                           	opt callstack 0
   313  000008                     staticWheel@temp:
   314                           	opt callstack 0
   315                           
   316                           ; 3 bytes @ 0x7
   317  000008                     	ds	1
   318  000009                     ?___awdiv:
   319                           	opt callstack 0
   320  000009                     ___awdiv@dividend:
   321                           	opt callstack 0
   322                           
   323                           ; 2 bytes @ 0x8
   324  000009                     	ds	2
   325  00000B                     ___fltol@sign1:
   326                           	opt callstack 0
   327  00000B                     ___xxtofl@sign:
   328                           	opt callstack 0
   329  00000B                     staticWheel@i_313:
   330                           	opt callstack 0
   331  00000B                     ___awdiv@divisor:
   332                           	opt callstack 0
   333                           
   334                           ; 2 bytes @ 0xA
   335  00000B                     	ds	1
   336  00000C                     ___fltol@exp1:
   337                           	opt callstack 0
   338  00000C                     ___xxtofl@exp:
   339                           	opt callstack 0
   340                           
   341                           ; 1 bytes @ 0xB
   342  00000C                     	ds	1
   343  00000D                     ___awdiv@counter:
   344                           	opt callstack 0
   345  00000D                     setPixel@n:
   346                           	opt callstack 0
   347  00000D                     ___xxtofl@arg:
   348                           	opt callstack 0
   349                           
   350                           ; 4 bytes @ 0xC
   351  00000D                     	ds	1
   352  00000E                     ___awdiv@sign:
   353                           	opt callstack 0
   354                           
   355                           ; 1 bytes @ 0xD
   356  00000E                     	ds	1
   357  00000F                     setPixel@red:
   358                           	opt callstack 0
   359  00000F                     ___awdiv@quotient:
   360                           	opt callstack 0
   361                           
   362                           ; 2 bytes @ 0xE
   363  00000F                     	ds	1
   364  000010                     setPixel@green:
   365                           	opt callstack 0
   366                           
   367                           ; 1 bytes @ 0xF
   368  000010                     	ds	1
   369  000011                     ?___fldiv:
   370                           	opt callstack 0
   371  000011                     setPixel@blue:
   372                           	opt callstack 0
   373  000011                     Wheel@WheelPos:
   374                           	opt callstack 0
   375  000011                     ___fldiv@b:
   376                           	opt callstack 0
   377                           
   378                           ; 4 bytes @ 0x10
   379  000011                     	ds	1
   380  000012                     ??_setPixel:
   381                           
   382                           ; 1 bytes @ 0x11
   383  000012                     	ds	1
   384  000013                     
   385                           ; 1 bytes @ 0x12
   386  000013                     	ds	1
   387  000014                     setPixel@ptr:
   388                           	opt callstack 0
   389                           
   390                           ; 2 bytes @ 0x13
   391  000014                     	ds	1
   392  000015                     ___fldiv@a:
   393                           	opt callstack 0
   394                           
   395                           ; 4 bytes @ 0x14
   396  000015                     	ds	1
   397  000016                     ??_colorWipeRainbow:
   398  000016                     ??_theaterChaseRainbow:
   399  000016                     ??_theaterChase:
   400  000016                     ??_RunningLightsRainbow:
   401  000016                     ??_RunningLights:
   402  000016                     setAll@Green:
   403                           	opt callstack 0
   404  000016                     colorWipe@i_243:
   405                           	opt callstack 0
   406  000016                     rainbowCycle@j:
   407                           	opt callstack 0
   408                           
   409                           ; 2 bytes @ 0x15
   410  000016                     	ds	1
   411  000017                     setAll@Blue:
   412                           	opt callstack 0
   413                           
   414                           ; 1 bytes @ 0x16
   415  000017                     	ds	1
   416  000018                     theaterChaseRainbow@j:
   417                           	opt callstack 0
   418  000018                     setAll@Red:
   419                           	opt callstack 0
   420  000018                     colorWipe@i_244:
   421                           	opt callstack 0
   422  000018                     colorWipeRainbow@i_253:
   423                           	opt callstack 0
   424  000018                     theaterChase@i:
   425                           	opt callstack 0
   426  000018                     rainbowCycle@i:
   427                           	opt callstack 0
   428                           
   429                           ; 2 bytes @ 0x17
   430  000018                     	ds	1
   431  000019                     ??___fldiv:
   432  000019                     theaterChaseRainbow@i_283:
   433                           	opt callstack 0
   434  000019                     RunningLightsRainbow@pixelOn:
   435                           	opt callstack 0
   436  000019                     setAll@i:
   437                           	opt callstack 0
   438                           
   439                           ; 2 bytes @ 0x18
   440  000019                     	ds	1
   441  00001A                     colorWipe@i:
   442                           	opt callstack 0
   443  00001A                     rainbowCycle@c:
   444                           	opt callstack 0
   445  00001A                     colorWipeRainbow@i_254:
   446                           	opt callstack 0
   447  00001A                     theaterChase@i_277:
   448                           	opt callstack 0
   449                           
   450                           ; 2 bytes @ 0x19
   451  00001A                     	ds	1
   452  00001B                     ??_RGBLoop:
   453  00001B                     ??_SetAllColor:
   454  00001B                     colorWipe@i_242:
   455                           	opt callstack 0
   456  00001B                     strobeallColors@c:
   457                           	opt callstack 0
   458  00001B                     theaterChaseRainbow@i:
   459                           	opt callstack 0
   460  00001B                     CylonBounce@EyeSize:
   461                           	opt callstack 0
   462  00001B                     CycloneBounceRainbow@EyeSize:
   463                           	opt callstack 0
   464  00001B                     RunningLights@pixelOn:
   465                           	opt callstack 0
   466  00001B                     RunningLightsRainbow@i:
   467                           	opt callstack 0
   468                           
   469                           ; 2 bytes @ 0x1A
   470  00001B                     	ds	1
   471  00001C                     theaterChase@q:
   472                           	opt callstack 0
   473  00001C                     colorWipe@i_245:
   474                           	opt callstack 0
   475  00001C                     colorWipeRainbow@i_256:
   476                           	opt callstack 0
   477  00001C                     strobeallColors@i:
   478                           	opt callstack 0
   479                           
   480                           ; 2 bytes @ 0x1B
   481  00001C                     	ds	1
   482  00001D                     ??_CycloneBounceRainbow:
   483  00001D                     ??_CylonBounce:
   484  00001D                     RGBLoop@j:
   485                           	opt callstack 0
   486  00001D                     theaterChaseRainbow@q:
   487                           	opt callstack 0
   488  00001D                     RunningLights@q:
   489                           	opt callstack 0
   490  00001D                     SetAllColor@i:
   491                           	opt callstack 0
   492  00001D                     SetAllcolors@j:
   493                           	opt callstack 0
   494  00001D                     RunningLightsRainbow@q:
   495                           	opt callstack 0
   496  00001D                     ___fldiv@rem:
   497                           	opt callstack 0
   498                           
   499                           ; 4 bytes @ 0x1C
   500  00001D                     	ds	1
   501  00001E                     theaterChaseRainbow@c:
   502                           	opt callstack 0
   503  00001E                     RGBLoop@k:
   504                           	opt callstack 0
   505  00001E                     colorWipe@i_246:
   506                           	opt callstack 0
   507  00001E                     colorWipeRainbow@i_258:
   508                           	opt callstack 0
   509  00001E                     RunningLights@i:
   510                           	opt callstack 0
   511                           
   512                           ; 2 bytes @ 0x1D
   513  00001E                     	ds	1
   514  00001F                     SetAllColor@counter:
   515                           	opt callstack 0
   516  00001F                     SetAllcolors@i:
   517                           	opt callstack 0
   518  00001F                     RunningLightsRainbow@i_342:
   519                           	opt callstack 0
   520                           
   521                           ; 2 bytes @ 0x1E
   522  00001F                     	ds	1
   523  000020                     colorWipeRainbow@i:
   524                           	opt callstack 0
   525  000020                     RGBLoop@k_239:
   526                           	opt callstack 0
   527  000020                     colorWipe@i_247:
   528                           	opt callstack 0
   529  000020                     RunningLights@i_336:
   530                           	opt callstack 0
   531                           
   532                           ; 2 bytes @ 0x1F
   533  000020                     	ds	1
   534  000021                     SetAllcolors@c:
   535                           	opt callstack 0
   536  000021                     ___fldiv@sign:
   537                           	opt callstack 0
   538  000021                     colorWipeRainbow@i_255:
   539                           	opt callstack 0
   540  000021                     SetAllColor@i_309:
   541                           	opt callstack 0
   542  000021                     RunningLightsRainbow@i_343:
   543                           	opt callstack 0
   544                           
   545                           ; 2 bytes @ 0x20
   546  000021                     	ds	1
   547  000022                     CylonBounce@i:
   548                           	opt callstack 0
   549  000022                     CycloneBounceRainbow@j_295:
   550                           	opt callstack 0
   551  000022                     colorWipe@i_248:
   552                           	opt callstack 0
   553  000022                     ___fldiv@new_exp:
   554                           	opt callstack 0
   555                           
   556                           ; 2 bytes @ 0x21
   557  000022                     	ds	1
   558  000023                     CylonBounce@j:
   559                           	opt callstack 0
   560  000023                     CycloneBounceRainbow@j_297:
   561                           	opt callstack 0
   562  000023                     RunningLightsRainbow@c:
   563                           	opt callstack 0
   564  000023                     colorWipeRainbow@i_257:
   565                           	opt callstack 0
   566  000023                     SetAllColor@flag:
   567                           	opt callstack 0
   568                           
   569                           ; 2 bytes @ 0x22
   570  000023                     	ds	1
   571  000024                     CylonBounce@j_289:
   572                           	opt callstack 0
   573  000024                     CycloneBounceRainbow@j:
   574                           	opt callstack 0
   575  000024                     ___fldiv@grs:
   576                           	opt callstack 0
   577                           
   578                           ; 4 bytes @ 0x23
   579  000024                     	ds	1
   580  000025                     colorWipeRainbow@j:
   581                           	opt callstack 0
   582  000025                     CylonBounce@i_288:
   583                           	opt callstack 0
   584  000025                     SetAllColor@i_307:
   585                           	opt callstack 0
   586                           
   587                           ; 2 bytes @ 0x24
   588  000025                     	ds	1
   589  000026                     colorWipeRainbow@c:
   590                           	opt callstack 0
   591  000026                     CycloneBounceRainbow@i:
   592                           	opt callstack 0
   593                           
   594                           ; 1 bytes @ 0x25
   595  000026                     	ds	1
   596  000027                     CycloneBounceRainbow@i_296:
   597                           	opt callstack 0
   598  000027                     SetAllColor@i_308:
   599                           	opt callstack 0
   600                           
   601                           ; 2 bytes @ 0x26
   602  000027                     	ds	1
   603  000028                     CycloneBounceRainbow@c:
   604                           	opt callstack 0
   605  000028                     ___fldiv@bexp:
   606                           	opt callstack 0
   607                           
   608                           ; 1 bytes @ 0x27
   609  000028                     	ds	1
   610  000029                     SetAllColor@newBT:
   611                           	opt callstack 0
   612  000029                     ___fldiv@aexp:
   613                           	opt callstack 0
   614                           
   615                           ; 1 bytes @ 0x28
   616  000029                     	ds	1
   617  00002A                     ?___flmul:
   618                           	opt callstack 0
   619  00002A                     ___flmul@b:
   620                           	opt callstack 0
   621                           
   622                           ; 4 bytes @ 0x29
   623  00002A                     	ds	4
   624  00002E                     ___flmul@a:
   625                           	opt callstack 0
   626                           
   627                           ; 4 bytes @ 0x2D
   628  00002E                     	ds	4
   629  000032                     ??___flmul:
   630                           
   631                           ; 1 bytes @ 0x31
   632  000032                     	ds	4
   633  000036                     ___flmul@sign:
   634                           	opt callstack 0
   635                           
   636                           ; 1 bytes @ 0x35
   637  000036                     	ds	1
   638  000037                     ___flmul@aexp:
   639                           	opt callstack 0
   640                           
   641                           ; 1 bytes @ 0x36
   642  000037                     	ds	1
   643  000038                     ___flmul@grs:
   644                           	opt callstack 0
   645                           
   646                           ; 4 bytes @ 0x37
   647  000038                     	ds	4
   648  00003C                     ___flmul@bexp:
   649                           	opt callstack 0
   650                           
   651                           ; 1 bytes @ 0x3B
   652  00003C                     	ds	1
   653  00003D                     ___flmul@prod:
   654                           	opt callstack 0
   655                           
   656                           ; 4 bytes @ 0x3C
   657  00003D                     	ds	4
   658  000041                     ___flmul@temp:
   659                           	opt callstack 0
   660                           
   661                           ; 2 bytes @ 0x40
   662  000041                     	ds	2
   663  000043                     ??_fadeInOutRainbow:
   664  000043                     ??_FadeAllcolors:
   665  000043                     FadeInOut@r:
   666                           	opt callstack 0
   667                           
   668                           ; 4 bytes @ 0x42
   669  000043                     	ds	1
   670  000044                     fadeInOutRainbow@r:
   671                           	opt callstack 0
   672  000044                     FadeAllcolors@r:
   673                           	opt callstack 0
   674                           
   675                           ; 4 bytes @ 0x43
   676  000044                     	ds	3
   677  000047                     FadeInOut@g:
   678                           	opt callstack 0
   679                           
   680                           ; 4 bytes @ 0x46
   681  000047                     	ds	1
   682  000048                     fadeInOutRainbow@g:
   683                           	opt callstack 0
   684  000048                     FadeAllcolors@g:
   685                           	opt callstack 0
   686                           
   687                           ; 4 bytes @ 0x47
   688  000048                     	ds	3
   689  00004B                     FadeInOut@b:
   690                           	opt callstack 0
   691                           
   692                           ; 4 bytes @ 0x4A
   693  00004B                     	ds	1
   694  00004C                     fadeInOutRainbow@b:
   695                           	opt callstack 0
   696  00004C                     FadeAllcolors@b:
   697                           	opt callstack 0
   698                           
   699                           ; 4 bytes @ 0x4B
   700  00004C                     	ds	3
   701  00004F                     FadeInOut@k:
   702                           	opt callstack 0
   703                           
   704                           ; 2 bytes @ 0x4E
   705  00004F                     	ds	1
   706  000050                     fadeInOutRainbow@i:
   707                           	opt callstack 0
   708  000050                     FadeAllcolors@j:
   709                           	opt callstack 0
   710                           
   711                           ; 2 bytes @ 0x4F
   712  000050                     	ds	1
   713  000051                     fadeInOutRainbow@i_273:
   714                           	opt callstack 0
   715  000051                     FadeInOut@k_264:
   716                           	opt callstack 0
   717                           
   718                           ; 2 bytes @ 0x50
   719  000051                     	ds	1
   720  000052                     fadeInOutRainbow@c:
   721                           	opt callstack 0
   722  000052                     FadeAllcolors@k:
   723                           	opt callstack 0
   724                           
   725                           ; 2 bytes @ 0x51
   726  000052                     	ds	1
   727  000053                     fadeInOutRainbow@j:
   728                           	opt callstack 0
   729                           
   730                           ; 1 bytes @ 0x52
   731  000053                     	ds	1
   732  000054                     fadeInOutRainbow@j_272:
   733                           	opt callstack 0
   734  000054                     FadeAllcolors@k_325:
   735                           	opt callstack 0
   736                           
   737                           ; 2 bytes @ 0x53
   738  000054                     	ds	2
   739  000056                     FadeAllcolors@c:
   740                           	opt callstack 0
   741                           
   742                           ; 1 bytes @ 0x55
   743  000056                     	ds	1
   744                           
   745 ;;
   746 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   747 ;;
   748 ;; *************** function _main *****************
   749 ;; Defined at:
   750 ;;		line 88 in file "Main.c"
   751 ;; Parameters:    Size  Location     Type
   752 ;;		None
   753 ;; Auto vars:     Size  Location     Type
   754 ;;		None
   755 ;; Return value:  Size  Location     Type
   756 ;;                  2  112[None  ] int 
   757 ;; Registers used:
   758 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+1, btemp+2, b
      +temp+3, btemp+4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+12, btemp+13, btemp+14, btemp+15
      +, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, btemp+24, btemp+25, btemp+26, btemp+27
      +, btemp+28, btemp+29, btemp+30, btemp+31, tosl, structret, tblptrl, tblptrh, tblptru, prodl, prodh, bsr, cstack
   759 ;; Tracked objects:
   760 ;;		On entry : 0/0
   761 ;;		On exit  : 3F/0
   762 ;;		Unchanged: 0/0
   763 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   764 ;;      Params:         0       0       0       0       0       0       0       0       0
   765 ;;      Locals:         0       0       0       0       0       0       0       0       0
   766 ;;      Temps:          0       2       0       0       0       0       0       0       0
   767 ;;      Totals:         0       2       0       0       0       0       0       0       0
   768 ;;Total ram usage:        2 bytes
   769 ;; Hardware stack levels required when called:    7
   770 ;; This function calls:
   771 ;;		_Config4550
   772 ;;		_CycloneBounceRainbow
   773 ;;		_CylonBounce
   774 ;;		_Delay_ms
   775 ;;		_FadeAllcolors
   776 ;;		_FadeInOut
   777 ;;		_RunningLights
   778 ;;		_RunningLightsRainbow
   779 ;;		_SetAllColor
   780 ;;		_SetAllcolors
   781 ;;		_Strobe
   782 ;;		_colorWipe
   783 ;;		_colorWipeRainbow
   784 ;;		_fadeInOutRainbow
   785 ;;		_initiateLeds
   786 ;;		_rainbowCycle
   787 ;;		_strobeallColors
   788 ;;		_theaterChase
   789 ;;		_theaterChaseRainbow
   790 ;;		_turnOff
   791 ;; This function is called by:
   792 ;;		Startup code after reset
   793 ;; This function uses a non-reentrant model
   794 ;;
   795                           
   796                           	psect	text0
   797  003336                     __ptext0:
   798                           	opt callstack 0
   799  003336                     _main:
   800                           	opt callstack 24
   801                           
   802                           ;Main.c: 90:     Config4550();
   803                           
   804                           ;incstack = 0
   805  003336  EC23  F01D         	call	_Config4550	;wreg free
   806                           
   807                           ;Main.c: 91:     Delay_ms(500);
   808  00333A  0E01               	movlw	1
   809  00333C  6E04               	movwf	(Delay_ms@time+1)^0,c
   810  00333E  0EF4               	movlw	244
   811  003340  6E03               	movwf	Delay_ms@time^0,c
   812  003342  EC51  F01D         	call	_Delay_ms	;wreg free
   813                           
   814                           ;Main.c: 92:     initiateLeds();
   815  003346  EC1A  F01E         	call	_initiateLeds	;wreg free
   816  00334A  D04A               	goto	l5460
   817  00334C                     l115:
   818                           
   819                           ; BSR set to: 0
   820                           ;Main.c: 96:                 if(BT_rainbow){
   821  00334C  A05C               	btfss	(_BT_rainbow/(0+8))^0,_BT_rainbow& (0+7),c	;volatile
   822  00334E  D003               	goto	l5424
   823                           
   824                           ; BSR set to: 0
   825                           ;Main.c: 97:                     colorWipeRainbow();
   826  003350  EC90  F00A         	call	_colorWipeRainbow	;wreg free
   827                           
   828                           ;Main.c: 98:                 }else{
   829  003354  D045               	goto	l5460
   830  003356                     l5424:
   831                           
   832                           ; BSR set to: 0
   833                           ;Main.c: 99:                   colorWipe();
   834  003356  EC89  F00F         	call	_colorWipe	;wreg free
   835  00335A  D042               	goto	l5460
   836  00335C                     l119:
   837                           
   838                           ; BSR set to: 0
   839                           ;Main.c: 103:                 if(BT_rainbow){
   840  00335C  A05C               	btfss	(_BT_rainbow/(0+8))^0,_BT_rainbow& (0+7),c	;volatile
   841  00335E  D003               	goto	l5428
   842                           
   843                           ; BSR set to: 0
   844                           ;Main.c: 104:                     fadeInOutRainbow();;
   845  003360  EC4C  F006         	call	_fadeInOutRainbow	;wreg free
   846                           
   847                           ;Main.c: 105:                 }else{
   848  003364  D03D               	goto	l5460
   849  003366                     l5428:
   850                           
   851                           ; BSR set to: 0
   852                           ;Main.c: 106:                   FadeInOut();
   853  003366  EC84  F008         	call	_FadeInOut	;wreg free
   854  00336A  D03A               	goto	l5460
   855  00336C                     l122:
   856                           
   857                           ; BSR set to: 0
   858                           ;Main.c: 110:                 if(BT_rainbow){
   859  00336C  A05C               	btfss	(_BT_rainbow/(0+8))^0,_BT_rainbow& (0+7),c	;volatile
   860  00336E  D003               	goto	l5432
   861                           
   862                           ; BSR set to: 0
   863                           ;Main.c: 111:                     theaterChaseRainbow();
   864  003370  EC46  F013         	call	_theaterChaseRainbow	;wreg free
   865                           
   866                           ;Main.c: 112:                 }else{
   867  003374  D035               	goto	l5460
   868  003376                     l5432:
   869                           
   870                           ; BSR set to: 0
   871                           ;Main.c: 113:                   theaterChase();
   872  003376  EC73  F017         	call	_theaterChase	;wreg free
   873  00337A  D032               	goto	l5460
   874  00337C                     l125:
   875                           
   876                           ; BSR set to: 0
   877                           ;Main.c: 117:                 if(BT_rainbow){
   878  00337C  A05C               	btfss	(_BT_rainbow/(0+8))^0,_BT_rainbow& (0+7),c	;volatile
   879  00337E  D007               	goto	l5436
   880                           
   881                           ; BSR set to: 0
   882                           ;Main.c: 118:                     CycloneBounceRainbow(6);
   883  003380  0E00               	movlw	0
   884  003382  6E1C               	movwf	(CycloneBounceRainbow@EyeSize+1)^0,c
   885  003384  0E06               	movlw	6
   886  003386  6E1B               	movwf	CycloneBounceRainbow@EyeSize^0,c
   887  003388  EC17  F00E         	call	_CycloneBounceRainbow	;wreg free
   888                           
   889                           ;Main.c: 119:                 }else{
   890  00338C  D029               	goto	l5460
   891  00338E                     l5436:
   892                           
   893                           ; BSR set to: 0
   894                           ;Main.c: 120:                    CylonBounce(6);
   895  00338E  0E00               	movlw	0
   896  003390  6E1C               	movwf	(CylonBounce@EyeSize+1)^0,c
   897  003392  0E06               	movlw	6
   898  003394  6E1B               	movwf	CylonBounce@EyeSize^0,c
   899  003396  EC8D  F018         	call	_CylonBounce	;wreg free
   900  00339A  D022               	goto	l5460
   901  00339C                     l128:
   902                           
   903                           ; BSR set to: 0
   904                           ;Main.c: 124:                 if(BT_rainbow){
   905  00339C  A05C               	btfss	(_BT_rainbow/(0+8))^0,_BT_rainbow& (0+7),c	;volatile
   906  00339E  D003               	goto	l5440
   907                           
   908                           ; BSR set to: 0
   909                           ;Main.c: 125:                     rainbowCycle();
   910  0033A0  EC18  F019         	call	_rainbowCycle	;wreg free
   911                           
   912                           ;Main.c: 126:                 }else{
   913  0033A4  D01D               	goto	l5460
   914  0033A6                     l5440:
   915                           
   916                           ; BSR set to: 0
   917                           ;Main.c: 127:                     SetAllColor();
   918  0033A6  EC1E  F012         	call	_SetAllColor	;wreg free
   919  0033AA  D01A               	goto	l5460
   920  0033AC                     l131:
   921                           
   922                           ; BSR set to: 0
   923                           ;Main.c: 131:                 if(BT_rainbow){
   924  0033AC  A05C               	btfss	(_BT_rainbow/(0+8))^0,_BT_rainbow& (0+7),c	;volatile
   925  0033AE  D003               	goto	l5444
   926                           
   927                           ; BSR set to: 0
   928                           ;Main.c: 132:                     strobeallColors();
   929  0033B0  ECB3  F01B         	call	_strobeallColors	;wreg free
   930                           
   931                           ;Main.c: 133:                 }
   932  0033B4  D015               	goto	l5460
   933  0033B6                     l5444:
   934                           
   935                           ; BSR set to: 0
   936                           ;Main.c: 135:                     Strobe();
   937  0033B6  ECF5  F01C         	call	_Strobe	;wreg free
   938  0033BA  D012               	goto	l5460
   939  0033BC                     l5446:
   940                           
   941                           ; BSR set to: 0
   942                           ;Main.c: 139:                 turnOff();
   943  0033BC  EC0C  F01E         	call	_turnOff	;wreg free
   944                           
   945                           ;Main.c: 140:                 break;
   946  0033C0  D00F               	goto	l5460
   947  0033C2                     l135:
   948                           
   949                           ; BSR set to: 0
   950                           ;Main.c: 142:                if(BT_rainbow){
   951  0033C2  A05C               	btfss	(_BT_rainbow/(0+8))^0,_BT_rainbow& (0+7),c	;volatile
   952  0033C4  D003               	goto	l5450
   953                           
   954                           ; BSR set to: 0
   955                           ;Main.c: 143:                    FadeAllcolors();
   956  0033C6  EC05  F004         	call	_FadeAllcolors	;wreg free
   957                           
   958                           ;Main.c: 144:                }
   959  0033CA  D00A               	goto	l5460
   960  0033CC                     l5450:
   961                           
   962                           ; BSR set to: 0
   963                           ;Main.c: 146:                     SetAllcolors();
   964  0033CC  EC85  F01A         	call	_SetAllcolors	;wreg free
   965  0033D0  D007               	goto	l5460
   966  0033D2                     l138:
   967                           
   968                           ; BSR set to: 0
   969                           ;Main.c: 150:                if(BT_rainbow){
   970  0033D2  A05C               	btfss	(_BT_rainbow/(0+8))^0,_BT_rainbow& (0+7),c	;volatile
   971  0033D4  D003               	goto	l5454
   972                           
   973                           ; BSR set to: 0
   974                           ;Main.c: 151:                    RunningLightsRainbow();
   975  0033D6  EC8F  F015         	call	_RunningLightsRainbow	;wreg free
   976                           
   977                           ;Main.c: 152:                }
   978  0033DA  D002               	goto	l5460
   979  0033DC                     l5454:
   980                           
   981                           ; BSR set to: 0
   982                           ;Main.c: 154:                    RunningLights();
   983  0033DC  ECF0  F01A         	call	_RunningLights	;wreg free
   984  0033E0                     l5460:
   985  0033E0  505B               	movf	_BT_Patron^0,w,c	;volatile
   986  0033E2  0100               	movlb	0	; () banked
   987  0033E4  6F6C               	movwf	??_main& (0+255),b
   988  0033E6  6B6D               	clrf	(??_main+1)& (0+255),b
   989                           
   990                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   991                           ; Switch size 1, requested type "simple"
   992                           ; Number of cases is 1, Range of values is 0 to 0
   993                           ; switch strategies available:
   994                           ; Name         Instructions Cycles
   995                           ; simple_byte            4     3 (average)
   996                           ;	Chosen strategy is simple_byte
   997  0033E8  516D               	movf	(??_main+1)& (0+255),w,b
   998  0033EA  0A00               	xorlw	0	; case 0
   999  0033EC  A4D8               	btfss	status,2,c
  1000  0033EE  D7E6               	goto	l5446
  1001                           
  1002                           ; BSR set to: 0
  1003                           ; Switch size 1, requested type "simple"
  1004                           ; Number of cases is 9, Range of values is 1 to 9
  1005                           ; switch strategies available:
  1006                           ; Name         Instructions Cycles
  1007                           ; simple_byte           28    15 (average)
  1008                           ;	Chosen strategy is simple_byte
  1009  0033F0  516C               	movf	??_main& (0+255),w,b
  1010  0033F2  0A01               	xorlw	1	; case 1
  1011  0033F4  B4D8               	btfsc	status,2,c
  1012  0033F6  D7AA               	goto	l115
  1013  0033F8  0A03               	xorlw	3	; case 2
  1014  0033FA  B4D8               	btfsc	status,2,c
  1015  0033FC  D7AF               	goto	l119
  1016  0033FE  0A01               	xorlw	1	; case 3
  1017  003400  B4D8               	btfsc	status,2,c
  1018  003402  D7B4               	goto	l122
  1019  003404  0A07               	xorlw	7	; case 4
  1020  003406  B4D8               	btfsc	status,2,c
  1021  003408  D7B9               	goto	l125
  1022  00340A  0A01               	xorlw	1	; case 5
  1023  00340C  B4D8               	btfsc	status,2,c
  1024  00340E  D7C6               	goto	l128
  1025  003410  0A03               	xorlw	3	; case 6
  1026  003412  B4D8               	btfsc	status,2,c
  1027  003414  D7CB               	goto	l131
  1028  003416  0A01               	xorlw	1	; case 7
  1029  003418  B4D8               	btfsc	status,2,c
  1030  00341A  D7D0               	goto	l5446
  1031  00341C  0A0F               	xorlw	15	; case 8
  1032  00341E  B4D8               	btfsc	status,2,c
  1033  003420  D7D0               	goto	l135
  1034  003422  0A01               	xorlw	1	; case 9
  1035  003424  B4D8               	btfsc	status,2,c
  1036  003426  D7D5               	goto	l138
  1037  003428  D7C9               	goto	l5446
  1038  00342A                     __end_of_main:
  1039                           	opt callstack 0
  1040                           
  1041 ;; *************** function _turnOff *****************
  1042 ;; Defined at:
  1043 ;;		line 72 in file "Main.c"
  1044 ;; Parameters:    Size  Location     Type
  1045 ;;		None
  1046 ;; Auto vars:     Size  Location     Type
  1047 ;;		None
  1048 ;; Return value:  Size  Location     Type
  1049 ;;                  1    wreg      void 
  1050 ;; Registers used:
  1051 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+1, btemp+2, b
      +temp+3, btemp+4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+12, btemp+13, btemp+14, btemp+15
      +, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, btemp+24, btemp+25, btemp+26, btemp+27
      +, btemp+28, btemp+29, btemp+30, btemp+31, tosl, structret, tblptrl, tblptrh, tblptru, prodl, prodh, bsr, cstack
  1052 ;; Tracked objects:
  1053 ;;		On entry : 0/0
  1054 ;;		On exit  : 0/0
  1055 ;;		Unchanged: 0/0
  1056 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1057 ;;      Params:         0       0       0       0       0       0       0       0       0
  1058 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1059 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1060 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1061 ;;Total ram usage:        0 bytes
  1062 ;; Hardware stack levels used:    1
  1063 ;; Hardware stack levels required when called:    5
  1064 ;; This function calls:
  1065 ;;		_setAll
  1066 ;; This function is called by:
  1067 ;;		_main
  1068 ;; This function uses a non-reentrant model
  1069 ;;
  1070                           
  1071                           	psect	text1
  1072  003C18                     __ptext1:
  1073                           	opt callstack 0
  1074  003C18                     _turnOff:
  1075                           	opt callstack 25
  1076                           
  1077                           ;Main.c: 73:     setAll(0,0,0);
  1078                           
  1079                           ; BSR set to: 0
  1080                           ;incstack = 0
  1081  003C18  0E00               	movlw	0
  1082  003C1A  6E16               	movwf	setAll@Green^0,c
  1083  003C1C  0E00               	movlw	0
  1084  003C1E  6E17               	movwf	setAll@Blue^0,c
  1085  003C20  0E00               	movlw	0
  1086  003C22  EC73  F01D         	call	_setAll
  1087                           
  1088                           ;Main.c: 74:     BT_Patron = 0;
  1089  003C26  0E00               	movlw	0
  1090  003C28  6E5B               	movwf	_BT_Patron^0,c	;volatile
  1091                           
  1092                           ;Main.c: 75:     _delay((unsigned long)((5)*(48000000/4000000.0)));
  1093  003C2A  0E14               	movlw	20
  1094  003C2C                     u5947:
  1095  003C2C  2EE8               	decfsz	wreg,f,c
  1096  003C2E  D7FE               	bra	u5947
  1097  003C30  0003               	sleep		;# 
  1098  003C32  0012               	return		;funcret
  1099  003C34                     __end_of_turnOff:
  1100                           	opt callstack 0
  1101                           
  1102 ;; *************** function _theaterChaseRainbow *****************
  1103 ;; Defined at:
  1104 ;;		line 242 in file "Patterns.c"
  1105 ;; Parameters:    Size  Location     Type
  1106 ;;		None
  1107 ;; Auto vars:     Size  Location     Type
  1108 ;;  i               2   24[COMRAM] int 
  1109 ;;  i               2   26[COMRAM] int 
  1110 ;;  q               1   28[COMRAM] unsigned char 
  1111 ;;  j               1   23[COMRAM] unsigned char 
  1112 ;;  c               1   29[COMRAM] PTR unsigned char 
  1113 ;;		 -> Wheel@c(3), 
  1114 ;; Return value:  Size  Location     Type
  1115 ;;                  1    wreg      void 
  1116 ;; Registers used:
  1117 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+1, btemp+2, b
      +temp+3, btemp+4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+12, btemp+13, btemp+14, btemp+15
      +, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, btemp+24, btemp+25, btemp+26, btemp+27
      +, btemp+28, btemp+29, btemp+30, btemp+31, tosl, structret, tblptrl, tblptrh, tblptru, prodl, prodh, bsr, cstack
  1118 ;; Tracked objects:
  1119 ;;		On entry : 0/0
  1120 ;;		On exit  : 0/0
  1121 ;;		Unchanged: 0/0
  1122 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1123 ;;      Params:         0       0       0       0       0       0       0       0       0
  1124 ;;      Locals:         7       0       0       0       0       0       0       0       0
  1125 ;;      Temps:          2       0       0       0       0       0       0       0       0
  1126 ;;      Totals:         9       0       0       0       0       0       0       0       0
  1127 ;;Total ram usage:        9 bytes
  1128 ;; Hardware stack levels used:    1
  1129 ;; Hardware stack levels required when called:    4
  1130 ;; This function calls:
  1131 ;;		_Delay_ms
  1132 ;;		_Show
  1133 ;;		_Time_Check
  1134 ;;		_Wheel
  1135 ;;		___awmod
  1136 ;;		_setPixel
  1137 ;; This function is called by:
  1138 ;;		_main
  1139 ;; This function uses a non-reentrant model
  1140 ;;
  1141                           
  1142                           	psect	text2
  1143  00268C                     __ptext2:
  1144                           	opt callstack 0
  1145  00268C                     _theaterChaseRainbow:
  1146                           	opt callstack 26
  1147                           
  1148                           ;Patterns.c: 243:     unsigned char *c;;Patterns.c: 244:     Time_Check(5);
  1149                           
  1150                           ;incstack = 0
  1151  00268C  0E00               	movlw	0
  1152  00268E  6E04               	movwf	(Time_Check@Time+1)^0,c
  1153  002690  0E05               	movlw	5
  1154  002692  6E03               	movwf	Time_Check@Time^0,c
  1155  002694  ECFC  F01D         	call	_Time_Check	;wreg free
  1156                           
  1157                           ;Patterns.c: 245:     for (unsigned char j=0; j < 255; j++) {
  1158  002698  0E00               	movlw	0
  1159  00269A  6E18               	movwf	theaterChaseRainbow@j^0,c
  1160  00269C                     l4672:
  1161                           
  1162                           ;Patterns.c: 246:       for (unsigned char q=0; q < 5; q++) {
  1163  00269C  0E00               	movlw	0
  1164  00269E  6E1D               	movwf	theaterChaseRainbow@q^0,c
  1165  0026A0                     l4678:
  1166  0026A0  0E00               	movlw	0
  1167  0026A2  6E1C               	movwf	(theaterChaseRainbow@i+1)^0,c
  1168  0026A4  0E69               	movlw	105
  1169  0026A6  6E1B               	movwf	theaterChaseRainbow@i^0,c
  1170  0026A8                     l4684:
  1171                           
  1172                           ;Patterns.c: 248:             c = Wheel( (i+j) % 255);
  1173  0026A8  5018               	movf	theaterChaseRainbow@j^0,w,c
  1174  0026AA  241B               	addwf	theaterChaseRainbow@i^0,w,c
  1175  0026AC  6E03               	movwf	___awmod@dividend^0,c
  1176  0026AE  0E00               	movlw	0
  1177  0026B0  201C               	addwfc	(theaterChaseRainbow@i+1)^0,w,c
  1178  0026B2  6E04               	movwf	(___awmod@dividend+1)^0,c
  1179  0026B4  0E00               	movlw	0
  1180  0026B6  6E06               	movwf	(___awmod@divisor+1)^0,c
  1181  0026B8  6805               	setf	___awmod@divisor^0,c
  1182  0026BA  EC85  F01C         	call	___awmod	;wreg free
  1183  0026BE  C003  F011         	movff	?___awmod,Wheel@WheelPos
  1184  0026C2  C004  F012         	movff	?___awmod+1,Wheel@WheelPos+1
  1185  0026C6  EC15  F01A         	call	_Wheel	;wreg free
  1186  0026CA  6E1E               	movwf	theaterChaseRainbow@c^0,c
  1187                           
  1188                           ; BSR set to: 0
  1189                           ;Patterns.c: 249:             setPixel(i+q, *c, *(c+1), *(c+2));
  1190  0026CC  501D               	movf	theaterChaseRainbow@q^0,w,c
  1191  0026CE  241B               	addwf	theaterChaseRainbow@i^0,w,c
  1192  0026D0  6E0D               	movwf	setPixel@n^0,c
  1193  0026D2  0E00               	movlw	0
  1194  0026D4  201C               	addwfc	(theaterChaseRainbow@i+1)^0,w,c
  1195  0026D6  6E0E               	movwf	(setPixel@n+1)^0,c
  1196  0026D8  501E               	movf	theaterChaseRainbow@c^0,w,c
  1197  0026DA  6ED9               	movwf	fsr2l,c
  1198  0026DC  6ADA               	clrf	fsr2h,c
  1199  0026DE  50DF               	movf	indf2,w,c
  1200  0026E0  6E0F               	movwf	setPixel@red^0,c
  1201  0026E2  501E               	movf	theaterChaseRainbow@c^0,w,c
  1202  0026E4  6ED9               	movwf	fsr2l,c
  1203  0026E6  6ADA               	clrf	fsr2h,c
  1204  0026E8  0E01               	movlw	1
  1205  0026EA  26D9               	addwf	fsr2l,f,c
  1206  0026EC  50DF               	movf	indf2,w,c
  1207  0026EE  6E10               	movwf	setPixel@green^0,c
  1208  0026F0  501E               	movf	theaterChaseRainbow@c^0,w,c
  1209  0026F2  6ED9               	movwf	fsr2l,c
  1210  0026F4  6ADA               	clrf	fsr2h,c
  1211  0026F6  0E02               	movlw	2
  1212  0026F8  26D9               	addwf	fsr2l,f,c
  1213  0026FA  50DF               	movf	indf2,w,c
  1214  0026FC  6E11               	movwf	setPixel@blue^0,c
  1215  0026FE  EC44  F01C         	call	_setPixel	;wreg free
  1216  002702  501D               	movf	theaterChaseRainbow@q^0,w,c
  1217  002704  C01B  F016         	movff	theaterChaseRainbow@i,??_theaterChaseRainbow
  1218  002708  C01C  F017         	movff	theaterChaseRainbow@i+1,??_theaterChaseRainbow+1
  1219  00270C  1E16               	comf	??_theaterChaseRainbow^0,f,c
  1220  00270E  1E17               	comf	(??_theaterChaseRainbow+1)^0,f,c
  1221  002710  4A16               	infsnz	??_theaterChaseRainbow^0,f,c
  1222  002712  2A17               	incf	(??_theaterChaseRainbow+1)^0,f,c
  1223  002714  5E16               	subwf	??_theaterChaseRainbow^0,f,c
  1224  002716  0E00               	movlw	0
  1225  002718  5A17               	subwfb	(??_theaterChaseRainbow+1)^0,f,c
  1226  00271A  0ED1               	movlw	209
  1227  00271C  2416               	addwf	??_theaterChaseRainbow^0,w,c
  1228  00271E  6E0D               	movwf	setPixel@n^0,c
  1229  002720  0E00               	movlw	0
  1230  002722  2017               	addwfc	(??_theaterChaseRainbow+1)^0,w,c
  1231  002724  6E0E               	movwf	(setPixel@n+1)^0,c
  1232  002726  501E               	movf	theaterChaseRainbow@c^0,w,c
  1233  002728  6ED9               	movwf	fsr2l,c
  1234  00272A  6ADA               	clrf	fsr2h,c
  1235  00272C  50DF               	movf	indf2,w,c
  1236  00272E  6E0F               	movwf	setPixel@red^0,c
  1237  002730  501E               	movf	theaterChaseRainbow@c^0,w,c
  1238  002732  6ED9               	movwf	fsr2l,c
  1239  002734  6ADA               	clrf	fsr2h,c
  1240  002736  0E01               	movlw	1
  1241  002738  26D9               	addwf	fsr2l,f,c
  1242  00273A  50DF               	movf	indf2,w,c
  1243  00273C  6E10               	movwf	setPixel@green^0,c
  1244  00273E  501E               	movf	theaterChaseRainbow@c^0,w,c
  1245  002740  6ED9               	movwf	fsr2l,c
  1246  002742  6ADA               	clrf	fsr2h,c
  1247  002744  0E02               	movlw	2
  1248  002746  26D9               	addwf	fsr2l,f,c
  1249  002748  50DF               	movf	indf2,w,c
  1250  00274A  6E11               	movwf	setPixel@blue^0,c
  1251  00274C  EC44  F01C         	call	_setPixel	;wreg free
  1252                           
  1253                           ;Patterns.c: 251:           }
  1254  002750  0EFB               	movlw	251
  1255  002752  241B               	addwf	theaterChaseRainbow@i^0,w,c
  1256  002754  6E1B               	movwf	theaterChaseRainbow@i^0,c
  1257  002756  0EFF               	movlw	255
  1258  002758  201C               	addwfc	(theaterChaseRainbow@i+1)^0,w,c
  1259  00275A  6E1C               	movwf	(theaterChaseRainbow@i+1)^0,c
  1260  00275C  AE1C               	btfss	(theaterChaseRainbow@i+1)^0,7,c
  1261  00275E  D7A4               	goto	l4684
  1262                           
  1263                           ;Patterns.c: 252:           if(BT_Patron != 3 || BT_rainbow != 1)return;
  1264  002760  0E03               	movlw	3
  1265  002762  185B               	xorwf	_BT_Patron^0,w,c	;volatile
  1266  002764  A4D8               	btfss	status,2,c
  1267  002766  0012               	return	
  1268  002768  A05C               	btfss	(_BT_rainbow/(0+8))^0,_BT_rainbow& (0+7),c	;volatile
  1269  00276A  0012               	return	
  1270  00276C  0E00               	movlw	0
  1271  00276E  6E0E               	movwf	(setPixel@n+1)^0,c
  1272  002770  0E69               	movlw	105
  1273  002772  6E0D               	movwf	setPixel@n^0,c
  1274  002774  501E               	movf	theaterChaseRainbow@c^0,w,c
  1275  002776  6ED9               	movwf	fsr2l,c
  1276  002778  6ADA               	clrf	fsr2h,c
  1277  00277A  50DF               	movf	indf2,w,c
  1278  00277C  6E0F               	movwf	setPixel@red^0,c
  1279  00277E  501E               	movf	theaterChaseRainbow@c^0,w,c
  1280  002780  6ED9               	movwf	fsr2l,c
  1281  002782  6ADA               	clrf	fsr2h,c
  1282  002784  0E01               	movlw	1
  1283  002786  26D9               	addwf	fsr2l,f,c
  1284  002788  50DF               	movf	indf2,w,c
  1285  00278A  6E10               	movwf	setPixel@green^0,c
  1286  00278C  501E               	movf	theaterChaseRainbow@c^0,w,c
  1287  00278E  6ED9               	movwf	fsr2l,c
  1288  002790  6ADA               	clrf	fsr2h,c
  1289  002792  0E02               	movlw	2
  1290  002794  26D9               	addwf	fsr2l,f,c
  1291  002796  50DF               	movf	indf2,w,c
  1292  002798  6E11               	movwf	setPixel@blue^0,c
  1293  00279A  EC44  F01C         	call	_setPixel	;wreg free
  1294                           
  1295                           ;Patterns.c: 254:           Show();
  1296  00279E  ECBD  F01C         	call	_Show	;wreg free
  1297                           
  1298                           ;Patterns.c: 255:           Delay_ms(BT_Tiempo);
  1299  0027A2  C05A  F003         	movff	_BT_Tiempo,Delay_ms@time	;volatile
  1300  0027A6  6A04               	clrf	(Delay_ms@time+1)^0,c
  1301  0027A8  EC51  F01D         	call	_Delay_ms	;wreg free
  1302  0027AC  0E00               	movlw	0
  1303  0027AE  6E1A               	movwf	(theaterChaseRainbow@i_283+1)^0,c
  1304  0027B0  0E69               	movlw	105
  1305  0027B2  6E19               	movwf	theaterChaseRainbow@i_283^0,c
  1306  0027B4                     l4710:
  1307                           
  1308                           ;Patterns.c: 257:             setPixel(i+q, 0,0,0);
  1309  0027B4  501D               	movf	theaterChaseRainbow@q^0,w,c
  1310  0027B6  2419               	addwf	theaterChaseRainbow@i_283^0,w,c
  1311  0027B8  6E0D               	movwf	setPixel@n^0,c
  1312  0027BA  0E00               	movlw	0
  1313  0027BC  201A               	addwfc	(theaterChaseRainbow@i_283+1)^0,w,c
  1314  0027BE  6E0E               	movwf	(setPixel@n+1)^0,c
  1315  0027C0  0E00               	movlw	0
  1316  0027C2  6E0F               	movwf	setPixel@red^0,c
  1317  0027C4  0E00               	movlw	0
  1318  0027C6  6E10               	movwf	setPixel@green^0,c
  1319  0027C8  0E00               	movlw	0
  1320  0027CA  6E11               	movwf	setPixel@blue^0,c
  1321  0027CC  EC44  F01C         	call	_setPixel	;wreg free
  1322  0027D0  501D               	movf	theaterChaseRainbow@q^0,w,c
  1323  0027D2  C019  F016         	movff	theaterChaseRainbow@i_283,??_theaterChaseRainbow
  1324  0027D6  C01A  F017         	movff	theaterChaseRainbow@i_283+1,??_theaterChaseRainbow+1
  1325  0027DA  1E16               	comf	??_theaterChaseRainbow^0,f,c
  1326  0027DC  1E17               	comf	(??_theaterChaseRainbow+1)^0,f,c
  1327  0027DE  4A16               	infsnz	??_theaterChaseRainbow^0,f,c
  1328  0027E0  2A17               	incf	(??_theaterChaseRainbow+1)^0,f,c
  1329  0027E2  5E16               	subwf	??_theaterChaseRainbow^0,f,c
  1330  0027E4  0E00               	movlw	0
  1331  0027E6  5A17               	subwfb	(??_theaterChaseRainbow+1)^0,f,c
  1332  0027E8  0ED1               	movlw	209
  1333  0027EA  2416               	addwf	??_theaterChaseRainbow^0,w,c
  1334  0027EC  6E0D               	movwf	setPixel@n^0,c
  1335  0027EE  0E00               	movlw	0
  1336  0027F0  2017               	addwfc	(??_theaterChaseRainbow+1)^0,w,c
  1337  0027F2  6E0E               	movwf	(setPixel@n+1)^0,c
  1338  0027F4  0E00               	movlw	0
  1339  0027F6  6E0F               	movwf	setPixel@red^0,c
  1340  0027F8  0E00               	movlw	0
  1341  0027FA  6E10               	movwf	setPixel@green^0,c
  1342  0027FC  0E00               	movlw	0
  1343  0027FE  6E11               	movwf	setPixel@blue^0,c
  1344  002800  EC44  F01C         	call	_setPixel	;wreg free
  1345                           
  1346                           ;Patterns.c: 259:           }
  1347  002804  0EFB               	movlw	251
  1348  002806  2419               	addwf	theaterChaseRainbow@i_283^0,w,c
  1349  002808  6E19               	movwf	theaterChaseRainbow@i_283^0,c
  1350  00280A  0EFF               	movlw	255
  1351  00280C  201A               	addwfc	(theaterChaseRainbow@i_283+1)^0,w,c
  1352  00280E  6E1A               	movwf	(theaterChaseRainbow@i_283+1)^0,c
  1353  002810  AE1A               	btfss	(theaterChaseRainbow@i_283+1)^0,7,c
  1354  002812  D7D0               	goto	l4710
  1355                           
  1356                           ;Patterns.c: 260:           if(BT_Patron != 3 || BT_rainbow != 1)return;
  1357  002814  0E03               	movlw	3
  1358  002816  185B               	xorwf	_BT_Patron^0,w,c	;volatile
  1359  002818  A4D8               	btfss	status,2,c
  1360  00281A  0012               	return	
  1361  00281C  A05C               	btfss	(_BT_rainbow/(0+8))^0,_BT_rainbow& (0+7),c	;volatile
  1362  00281E  0012               	return	
  1363                           
  1364                           ;Patterns.c: 261:       }
  1365  002820  2A1D               	incf	theaterChaseRainbow@q^0,f,c
  1366  002822  0E04               	movlw	4
  1367  002824  641D               	cpfsgt	theaterChaseRainbow@q^0,c
  1368  002826  D73C               	goto	l4678
  1369                           
  1370                           ;Patterns.c: 262:     }
  1371  002828  2A18               	incf	theaterChaseRainbow@j^0,f,c
  1372  00282A  2818               	incf	theaterChaseRainbow@j^0,w,c
  1373  00282C  B4D8               	btfsc	status,2,c
  1374  00282E  0012               	return	
  1375  002830  D735               	goto	l4672
  1376  002832                     __end_of_theaterChaseRainbow:
  1377                           	opt callstack 0
  1378                           
  1379 ;; *************** function ___awmod *****************
  1380 ;; Defined at:
  1381 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\awmod.c"
  1382 ;; Parameters:    Size  Location     Type
  1383 ;;  dividend        2    2[COMRAM] int 
  1384 ;;  divisor         2    4[COMRAM] int 
  1385 ;; Auto vars:     Size  Location     Type
  1386 ;;  sign            1    7[COMRAM] unsigned char 
  1387 ;;  counter         1    6[COMRAM] unsigned char 
  1388 ;; Return value:  Size  Location     Type
  1389 ;;                  2    2[COMRAM] int 
  1390 ;; Registers used:
  1391 ;;		wreg, status,2, status,0
  1392 ;; Tracked objects:
  1393 ;;		On entry : 0/0
  1394 ;;		On exit  : 0/0
  1395 ;;		Unchanged: 0/0
  1396 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1397 ;;      Params:         4       0       0       0       0       0       0       0       0
  1398 ;;      Locals:         2       0       0       0       0       0       0       0       0
  1399 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1400 ;;      Totals:         6       0       0       0       0       0       0       0       0
  1401 ;;Total ram usage:        6 bytes
  1402 ;; Hardware stack levels used:    1
  1403 ;; Hardware stack levels required when called:    2
  1404 ;; This function calls:
  1405 ;;		Nothing
  1406 ;; This function is called by:
  1407 ;;		_theaterChaseRainbow
  1408 ;; This function uses a non-reentrant model
  1409 ;;
  1410                           
  1411                           	psect	text3
  1412  00390A                     __ptext3:
  1413                           	opt callstack 0
  1414  00390A                     ___awmod:
  1415                           	opt callstack 27
  1416                           
  1417                           ;incstack = 0
  1418  00390A  0E00               	movlw	0
  1419  00390C  6E08               	movwf	___awmod@sign^0,c
  1420  00390E  AE04               	btfss	(___awmod@dividend+1)^0,7,c
  1421  003910  D006               	goto	l3946
  1422  003912  6C03               	negf	___awmod@dividend^0,c
  1423  003914  1E04               	comf	(___awmod@dividend+1)^0,f,c
  1424  003916  B0D8               	btfsc	status,0,c
  1425  003918  2A04               	incf	(___awmod@dividend+1)^0,f,c
  1426  00391A  0E01               	movlw	1
  1427  00391C  6E08               	movwf	___awmod@sign^0,c
  1428  00391E                     l3946:
  1429  00391E  AE06               	btfss	(___awmod@divisor+1)^0,7,c
  1430  003920  D004               	goto	l3950
  1431  003922  6C05               	negf	___awmod@divisor^0,c
  1432  003924  1E06               	comf	(___awmod@divisor+1)^0,f,c
  1433  003926  B0D8               	btfsc	status,0,c
  1434  003928  2A06               	incf	(___awmod@divisor+1)^0,f,c
  1435  00392A                     l3950:
  1436  00392A  5005               	movf	___awmod@divisor^0,w,c
  1437  00392C  1006               	iorwf	(___awmod@divisor+1)^0,w,c
  1438  00392E  B4D8               	btfsc	status,2,c
  1439  003930  D018               	goto	l3966
  1440  003932  0E01               	movlw	1
  1441  003934  6E07               	movwf	___awmod@counter^0,c
  1442  003936  D004               	goto	l3956
  1443  003938                     l3954:
  1444  003938  90D8               	bcf	status,0,c
  1445  00393A  3605               	rlcf	___awmod@divisor^0,f,c
  1446  00393C  3606               	rlcf	(___awmod@divisor+1)^0,f,c
  1447  00393E  2A07               	incf	___awmod@counter^0,f,c
  1448  003940                     l3956:
  1449  003940  AE06               	btfss	(___awmod@divisor+1)^0,7,c
  1450  003942  D7FA               	goto	l3954
  1451  003944                     u3720:
  1452  003944  5005               	movf	___awmod@divisor^0,w,c
  1453  003946  5C03               	subwf	___awmod@dividend^0,w,c
  1454  003948  5006               	movf	(___awmod@divisor+1)^0,w,c
  1455  00394A  5804               	subwfb	(___awmod@dividend+1)^0,w,c
  1456  00394C  A0D8               	btfss	status,0,c
  1457  00394E  D004               	goto	l3962
  1458  003950  5005               	movf	___awmod@divisor^0,w,c
  1459  003952  5E03               	subwf	___awmod@dividend^0,f,c
  1460  003954  5006               	movf	(___awmod@divisor+1)^0,w,c
  1461  003956  5A04               	subwfb	(___awmod@dividend+1)^0,f,c
  1462  003958                     l3962:
  1463  003958  90D8               	bcf	status,0,c
  1464  00395A  3206               	rrcf	(___awmod@divisor+1)^0,f,c
  1465  00395C  3205               	rrcf	___awmod@divisor^0,f,c
  1466  00395E  2E07               	decfsz	___awmod@counter^0,f,c
  1467  003960  D7F1               	goto	u3720
  1468  003962                     l3966:
  1469  003962  5008               	movf	___awmod@sign^0,w,c
  1470  003964  B4D8               	btfsc	status,2,c
  1471  003966  D004               	goto	l3970
  1472  003968  6C03               	negf	___awmod@dividend^0,c
  1473  00396A  1E04               	comf	(___awmod@dividend+1)^0,f,c
  1474  00396C  B0D8               	btfsc	status,0,c
  1475  00396E  2A04               	incf	(___awmod@dividend+1)^0,f,c
  1476  003970                     l3970:
  1477  003970  C003  F003         	movff	___awmod@dividend,?___awmod
  1478  003974  C004  F004         	movff	___awmod@dividend+1,?___awmod+1
  1479  003978  0012               	return		;funcret
  1480  00397A                     __end_of___awmod:
  1481                           	opt callstack 0
  1482                           
  1483 ;; *************** function _theaterChase *****************
  1484 ;; Defined at:
  1485 ;;		line 225 in file "Patterns.c"
  1486 ;; Parameters:    Size  Location     Type
  1487 ;;		None
  1488 ;; Auto vars:     Size  Location     Type
  1489 ;;  i               2   25[COMRAM] int 
  1490 ;;  i               2   23[COMRAM] int 
  1491 ;;  q               1   27[COMRAM] unsigned char 
  1492 ;; Return value:  Size  Location     Type
  1493 ;;                  1    wreg      void 
  1494 ;; Registers used:
  1495 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+1, btemp+2, b
      +temp+3, btemp+4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+12, btemp+13, btemp+14, btemp+15
      +, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, btemp+24, btemp+25, btemp+26, btemp+27
      +, btemp+28, btemp+29, btemp+30, btemp+31, tosl, structret, tblptrl, tblptrh, tblptru, prodl, prodh, bsr, cstack
  1496 ;; Tracked objects:
  1497 ;;		On entry : 0/0
  1498 ;;		On exit  : 0/0
  1499 ;;		Unchanged: 0/0
  1500 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1501 ;;      Params:         0       0       0       0       0       0       0       0       0
  1502 ;;      Locals:         5       0       0       0       0       0       0       0       0
  1503 ;;      Temps:          2       0       0       0       0       0       0       0       0
  1504 ;;      Totals:         7       0       0       0       0       0       0       0       0
  1505 ;;Total ram usage:        7 bytes
  1506 ;; Hardware stack levels used:    1
  1507 ;; Hardware stack levels required when called:    4
  1508 ;; This function calls:
  1509 ;;		_Delay_ms
  1510 ;;		_Show
  1511 ;;		_Time_Check
  1512 ;;		_setPixel
  1513 ;; This function is called by:
  1514 ;;		_main
  1515 ;; This function uses a non-reentrant model
  1516 ;;
  1517                           
  1518                           	psect	text4
  1519  002EE6                     __ptext4:
  1520                           	opt callstack 0
  1521  002EE6                     _theaterChase:
  1522                           	opt callstack 26
  1523                           
  1524                           ;Patterns.c: 226:     Time_Check(5);
  1525                           
  1526                           ;incstack = 0
  1527  002EE6  0E00               	movlw	0
  1528  002EE8  6E04               	movwf	(Time_Check@Time+1)^0,c
  1529  002EEA  0E05               	movlw	5
  1530  002EEC  6E03               	movwf	Time_Check@Time^0,c
  1531  002EEE  ECFC  F01D         	call	_Time_Check	;wreg free
  1532                           
  1533                           ;Patterns.c: 227:     for (unsigned char q=0; q < 5; q++) {
  1534  002EF2  0E00               	movlw	0
  1535  002EF4  6E1C               	movwf	theaterChase@q^0,c
  1536  002EF6                     l4736:
  1537  002EF6  0E00               	movlw	0
  1538  002EF8  6E19               	movwf	(theaterChase@i+1)^0,c
  1539  002EFA  0E69               	movlw	105
  1540  002EFC  6E18               	movwf	theaterChase@i^0,c
  1541  002EFE                     l4742:
  1542                           
  1543                           ;Patterns.c: 229:             setPixel(i+q, BT_RGB[0], BT_RGB[1], BT_RGB[2]);
  1544  002EFE  501C               	movf	theaterChase@q^0,w,c
  1545  002F00  2418               	addwf	theaterChase@i^0,w,c
  1546  002F02  6E0D               	movwf	setPixel@n^0,c
  1547  002F04  0E00               	movlw	0
  1548  002F06  2019               	addwfc	(theaterChase@i+1)^0,w,c
  1549  002F08  6E0E               	movwf	(setPixel@n+1)^0,c
  1550  002F0A  C057  F00F         	movff	_BT_RGB,setPixel@red	;volatile
  1551  002F0E  C058  F010         	movff	_BT_RGB+1,setPixel@green	;volatile
  1552  002F12  C059  F011         	movff	_BT_RGB+2,setPixel@blue	;volatile
  1553  002F16  EC44  F01C         	call	_setPixel	;wreg free
  1554  002F1A  501C               	movf	theaterChase@q^0,w,c
  1555  002F1C  C018  F016         	movff	theaterChase@i,??_theaterChase
  1556  002F20  C019  F017         	movff	theaterChase@i+1,??_theaterChase+1
  1557  002F24  1E16               	comf	??_theaterChase^0,f,c
  1558  002F26  1E17               	comf	(??_theaterChase+1)^0,f,c
  1559  002F28  4A16               	infsnz	??_theaterChase^0,f,c
  1560  002F2A  2A17               	incf	(??_theaterChase+1)^0,f,c
  1561  002F2C  5E16               	subwf	??_theaterChase^0,f,c
  1562  002F2E  0E00               	movlw	0
  1563  002F30  5A17               	subwfb	(??_theaterChase+1)^0,f,c
  1564  002F32  0ED1               	movlw	209
  1565  002F34  2416               	addwf	??_theaterChase^0,w,c
  1566  002F36  6E0D               	movwf	setPixel@n^0,c
  1567  002F38  0E00               	movlw	0
  1568  002F3A  2017               	addwfc	(??_theaterChase+1)^0,w,c
  1569  002F3C  6E0E               	movwf	(setPixel@n+1)^0,c
  1570  002F3E  C057  F00F         	movff	_BT_RGB,setPixel@red	;volatile
  1571  002F42  C058  F010         	movff	_BT_RGB+1,setPixel@green	;volatile
  1572  002F46  C059  F011         	movff	_BT_RGB+2,setPixel@blue	;volatile
  1573  002F4A  EC44  F01C         	call	_setPixel	;wreg free
  1574                           
  1575                           ;Patterns.c: 231:         }
  1576  002F4E  0EFB               	movlw	251
  1577  002F50  2418               	addwf	theaterChase@i^0,w,c
  1578  002F52  6E18               	movwf	theaterChase@i^0,c
  1579  002F54  0EFF               	movlw	255
  1580  002F56  2019               	addwfc	(theaterChase@i+1)^0,w,c
  1581  002F58  6E19               	movwf	(theaterChase@i+1)^0,c
  1582  002F5A  AE19               	btfss	(theaterChase@i+1)^0,7,c
  1583  002F5C  D7D0               	goto	l4742
  1584                           
  1585                           ;Patterns.c: 232:         if(BT_Patron != 3|| BT_rainbow != 0)return;
  1586  002F5E  0E03               	movlw	3
  1587  002F60  185B               	xorwf	_BT_Patron^0,w,c	;volatile
  1588  002F62  A4D8               	btfss	status,2,c
  1589  002F64  0012               	return	
  1590  002F66  B05C               	btfsc	(_BT_rainbow/(0+8))^0,_BT_rainbow& (0+7),c	;volatile
  1591  002F68  0012               	return	
  1592  002F6A  0E00               	movlw	0
  1593  002F6C  6E0E               	movwf	(setPixel@n+1)^0,c
  1594  002F6E  0E69               	movlw	105
  1595  002F70  6E0D               	movwf	setPixel@n^0,c
  1596  002F72  C057  F00F         	movff	_BT_RGB,setPixel@red	;volatile
  1597  002F76  C058  F010         	movff	_BT_RGB+1,setPixel@green	;volatile
  1598  002F7A  C059  F011         	movff	_BT_RGB+2,setPixel@blue	;volatile
  1599  002F7E  EC44  F01C         	call	_setPixel	;wreg free
  1600                           
  1601                           ;Patterns.c: 234:         Show();
  1602  002F82  ECBD  F01C         	call	_Show	;wreg free
  1603                           
  1604                           ;Patterns.c: 235:         Delay_ms(BT_Tiempo);
  1605  002F86  C05A  F003         	movff	_BT_Tiempo,Delay_ms@time	;volatile
  1606  002F8A  6A04               	clrf	(Delay_ms@time+1)^0,c
  1607  002F8C  EC51  F01D         	call	_Delay_ms	;wreg free
  1608  002F90  0E00               	movlw	0
  1609  002F92  6E1B               	movwf	(theaterChase@i_277+1)^0,c
  1610  002F94  0E69               	movlw	105
  1611  002F96  6E1A               	movwf	theaterChase@i_277^0,c
  1612  002F98                     l4764:
  1613                           
  1614                           ;Patterns.c: 237:             setPixel(i+q, 0,0,0);
  1615  002F98  501C               	movf	theaterChase@q^0,w,c
  1616  002F9A  241A               	addwf	theaterChase@i_277^0,w,c
  1617  002F9C  6E0D               	movwf	setPixel@n^0,c
  1618  002F9E  0E00               	movlw	0
  1619  002FA0  201B               	addwfc	(theaterChase@i_277+1)^0,w,c
  1620  002FA2  6E0E               	movwf	(setPixel@n+1)^0,c
  1621  002FA4  0E00               	movlw	0
  1622  002FA6  6E0F               	movwf	setPixel@red^0,c
  1623  002FA8  0E00               	movlw	0
  1624  002FAA  6E10               	movwf	setPixel@green^0,c
  1625  002FAC  0E00               	movlw	0
  1626  002FAE  6E11               	movwf	setPixel@blue^0,c
  1627  002FB0  EC44  F01C         	call	_setPixel	;wreg free
  1628  002FB4  501C               	movf	theaterChase@q^0,w,c
  1629  002FB6  C01A  F016         	movff	theaterChase@i_277,??_theaterChase
  1630  002FBA  C01B  F017         	movff	theaterChase@i_277+1,??_theaterChase+1
  1631  002FBE  1E16               	comf	??_theaterChase^0,f,c
  1632  002FC0  1E17               	comf	(??_theaterChase+1)^0,f,c
  1633  002FC2  4A16               	infsnz	??_theaterChase^0,f,c
  1634  002FC4  2A17               	incf	(??_theaterChase+1)^0,f,c
  1635  002FC6  5E16               	subwf	??_theaterChase^0,f,c
  1636  002FC8  0E00               	movlw	0
  1637  002FCA  5A17               	subwfb	(??_theaterChase+1)^0,f,c
  1638  002FCC  0ED1               	movlw	209
  1639  002FCE  2416               	addwf	??_theaterChase^0,w,c
  1640  002FD0  6E0D               	movwf	setPixel@n^0,c
  1641  002FD2  0E00               	movlw	0
  1642  002FD4  2017               	addwfc	(??_theaterChase+1)^0,w,c
  1643  002FD6  6E0E               	movwf	(setPixel@n+1)^0,c
  1644  002FD8  0E00               	movlw	0
  1645  002FDA  6E0F               	movwf	setPixel@red^0,c
  1646  002FDC  0E00               	movlw	0
  1647  002FDE  6E10               	movwf	setPixel@green^0,c
  1648  002FE0  0E00               	movlw	0
  1649  002FE2  6E11               	movwf	setPixel@blue^0,c
  1650  002FE4  EC44  F01C         	call	_setPixel	;wreg free
  1651                           
  1652                           ;Patterns.c: 239:         }
  1653  002FE8  0EFB               	movlw	251
  1654  002FEA  241A               	addwf	theaterChase@i_277^0,w,c
  1655  002FEC  6E1A               	movwf	theaterChase@i_277^0,c
  1656  002FEE  0EFF               	movlw	255
  1657  002FF0  201B               	addwfc	(theaterChase@i_277+1)^0,w,c
  1658  002FF2  6E1B               	movwf	(theaterChase@i_277+1)^0,c
  1659  002FF4  AE1B               	btfss	(theaterChase@i_277+1)^0,7,c
  1660  002FF6  D7D0               	goto	l4764
  1661                           
  1662                           ;Patterns.c: 240:     }
  1663  002FF8  2A1C               	incf	theaterChase@q^0,f,c
  1664  002FFA  0E04               	movlw	4
  1665  002FFC  641C               	cpfsgt	theaterChase@q^0,c
  1666  002FFE  D77B               	goto	l4736
  1667  003000  0012               	return	
  1668  003002                     __end_of_theaterChase:
  1669                           	opt callstack 0
  1670                           
  1671 ;; *************** function _strobeallColors *****************
  1672 ;; Defined at:
  1673 ;;		line 436 in file "Patterns.c"
  1674 ;; Parameters:    Size  Location     Type
  1675 ;;		None
  1676 ;; Auto vars:     Size  Location     Type
  1677 ;;  i               2   27[COMRAM] int 
  1678 ;;  c               1   26[COMRAM] PTR unsigned char 
  1679 ;;		 -> Wheel@c(3), 
  1680 ;; Return value:  Size  Location     Type
  1681 ;;                  1    wreg      void 
  1682 ;; Registers used:
  1683 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+1, btemp+2, b
      +temp+3, btemp+4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+12, btemp+13, btemp+14, btemp+15
      +, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, btemp+24, btemp+25, btemp+26, btemp+27
      +, btemp+28, btemp+29, btemp+30, btemp+31, tosl, structret, tblptrl, tblptrh, tblptru, prodl, prodh, bsr, cstack
  1684 ;; Tracked objects:
  1685 ;;		On entry : 0/0
  1686 ;;		On exit  : 0/0
  1687 ;;		Unchanged: 0/0
  1688 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1689 ;;      Params:         0       0       0       0       0       0       0       0       0
  1690 ;;      Locals:         3       0       0       0       0       0       0       0       0
  1691 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1692 ;;      Totals:         3       0       0       0       0       0       0       0       0
  1693 ;;Total ram usage:        3 bytes
  1694 ;; Hardware stack levels used:    1
  1695 ;; Hardware stack levels required when called:    5
  1696 ;; This function calls:
  1697 ;;		_Delay_ms
  1698 ;;		_Show
  1699 ;;		_Time_Check
  1700 ;;		_Wheel
  1701 ;;		_setAll
  1702 ;; This function is called by:
  1703 ;;		_main
  1704 ;; This function uses a non-reentrant model
  1705 ;;
  1706                           
  1707                           	psect	text5
  1708  003766                     __ptext5:
  1709                           	opt callstack 0
  1710  003766                     _strobeallColors:
  1711                           	opt callstack 25
  1712                           
  1713                           ;Patterns.c: 437:     unsigned char *c;;Patterns.c: 438:     Time_Check(1);
  1714                           
  1715                           ;incstack = 0
  1716  003766  0E00               	movlw	0
  1717  003768  6E04               	movwf	(Time_Check@Time+1)^0,c
  1718  00376A  0E01               	movlw	1
  1719  00376C  6E03               	movwf	Time_Check@Time^0,c
  1720  00376E  ECFC  F01D         	call	_Time_Check	;wreg free
  1721                           
  1722                           ;Patterns.c: 439:     for(int i=0;i<256;i=i+25){
  1723  003772  0E00               	movlw	0
  1724  003774  6E1D               	movwf	(strobeallColors@i+1)^0,c
  1725  003776  0E00               	movlw	0
  1726  003778  6E1C               	movwf	strobeallColors@i^0,c
  1727  00377A                     l5058:
  1728                           
  1729                           ;Patterns.c: 440:         c = Wheel(i);
  1730  00377A  C01C  F011         	movff	strobeallColors@i,Wheel@WheelPos
  1731  00377E  C01D  F012         	movff	strobeallColors@i+1,Wheel@WheelPos+1
  1732  003782  EC15  F01A         	call	_Wheel	;wreg free
  1733  003786  6E1B               	movwf	strobeallColors@c^0,c
  1734                           
  1735                           ; BSR set to: 0
  1736                           ;Patterns.c: 441:         setAll(*c,*(c+1),*(c+2));
  1737  003788  501B               	movf	strobeallColors@c^0,w,c
  1738  00378A  6ED9               	movwf	fsr2l,c
  1739  00378C  6ADA               	clrf	fsr2h,c
  1740  00378E  0E01               	movlw	1
  1741  003790  26D9               	addwf	fsr2l,f,c
  1742  003792  50DF               	movf	indf2,w,c
  1743  003794  6E16               	movwf	setAll@Green^0,c
  1744  003796  501B               	movf	strobeallColors@c^0,w,c
  1745  003798  6ED9               	movwf	fsr2l,c
  1746  00379A  6ADA               	clrf	fsr2h,c
  1747  00379C  0E02               	movlw	2
  1748  00379E  26D9               	addwf	fsr2l,f,c
  1749  0037A0  50DF               	movf	indf2,w,c
  1750  0037A2  6E17               	movwf	setAll@Blue^0,c
  1751  0037A4  501B               	movf	strobeallColors@c^0,w,c
  1752  0037A6  6ED9               	movwf	fsr2l,c
  1753  0037A8  6ADA               	clrf	fsr2h,c
  1754  0037AA  50DF               	movf	indf2,w,c
  1755  0037AC  EC73  F01D         	call	_setAll
  1756                           
  1757                           ;Patterns.c: 442:         Show();
  1758  0037B0  ECBD  F01C         	call	_Show	;wreg free
  1759                           
  1760                           ;Patterns.c: 443:         Delay_ms(BT_Tiempo);
  1761  0037B4  C05A  F003         	movff	_BT_Tiempo,Delay_ms@time	;volatile
  1762  0037B8  6A04               	clrf	(Delay_ms@time+1)^0,c
  1763  0037BA  EC51  F01D         	call	_Delay_ms	;wreg free
  1764                           
  1765                           ;Patterns.c: 444:         setAll(0,0,0);
  1766  0037BE  0E00               	movlw	0
  1767  0037C0  6E16               	movwf	setAll@Green^0,c
  1768  0037C2  0E00               	movlw	0
  1769  0037C4  6E17               	movwf	setAll@Blue^0,c
  1770  0037C6  0E00               	movlw	0
  1771  0037C8  EC73  F01D         	call	_setAll
  1772                           
  1773                           ;Patterns.c: 445:         Show();
  1774  0037CC  ECBD  F01C         	call	_Show	;wreg free
  1775                           
  1776                           ;Patterns.c: 446:         Delay_ms(BT_Tiempo);
  1777  0037D0  C05A  F003         	movff	_BT_Tiempo,Delay_ms@time	;volatile
  1778  0037D4  6A04               	clrf	(Delay_ms@time+1)^0,c
  1779  0037D6  EC51  F01D         	call	_Delay_ms	;wreg free
  1780                           
  1781                           ;Patterns.c: 447:     }
  1782  0037DA  0E19               	movlw	25
  1783  0037DC  241C               	addwf	strobeallColors@i^0,w,c
  1784  0037DE  6E1C               	movwf	strobeallColors@i^0,c
  1785  0037E0  0E00               	movlw	0
  1786  0037E2  201D               	addwfc	(strobeallColors@i+1)^0,w,c
  1787  0037E4  6E1D               	movwf	(strobeallColors@i+1)^0,c
  1788  0037E6  BE1D               	btfsc	(strobeallColors@i+1)^0,7,c
  1789  0037E8  D7C8               	goto	l5058
  1790  0037EA  041D               	decf	(strobeallColors@i+1)^0,w,c
  1791  0037EC  A0D8               	btfss	status,0,c
  1792  0037EE  D7C5               	goto	l5058
  1793                           
  1794                           ;Patterns.c: 448:     if(BT_Patron != 6)return;
  1795  0037F0  0E06               	movlw	6
  1796  0037F2  185B               	xorwf	_BT_Patron^0,w,c	;volatile
  1797  0037F4  A4D8               	btfss	status,2,c
  1798  0037F6  0012               	return	
  1799                           
  1800                           ;Patterns.c: 449:     Delay_ms(BT_Tiempo);
  1801  0037F8  C05A  F003         	movff	_BT_Tiempo,Delay_ms@time	;volatile
  1802  0037FC  6A04               	clrf	(Delay_ms@time+1)^0,c
  1803  0037FE  EC51  F01D         	call	_Delay_ms	;wreg free
  1804  003802  0012               	return		;funcret
  1805  003804                     __end_of_strobeallColors:
  1806                           	opt callstack 0
  1807                           
  1808 ;; *************** function _rainbowCycle *****************
  1809 ;; Defined at:
  1810 ;;		line 319 in file "Patterns.c"
  1811 ;; Parameters:    Size  Location     Type
  1812 ;;		None
  1813 ;; Auto vars:     Size  Location     Type
  1814 ;;  i               2   23[COMRAM] int 
  1815 ;;  j               2   21[COMRAM] int 
  1816 ;;  c               1   25[COMRAM] PTR unsigned char 
  1817 ;;		 -> Wheel@c(3), 
  1818 ;; Return value:  Size  Location     Type
  1819 ;;                  1    wreg      void 
  1820 ;; Registers used:
  1821 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+1, btemp+2, b
      +temp+3, btemp+4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+12, btemp+13, btemp+14, btemp+15
      +, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, btemp+24, btemp+25, btemp+26, btemp+27
      +, btemp+28, btemp+29, btemp+30, btemp+31, tosl, structret, tblptrl, tblptrh, tblptru, prodl, prodh, bsr, cstack
  1822 ;; Tracked objects:
  1823 ;;		On entry : 0/0
  1824 ;;		On exit  : 0/0
  1825 ;;		Unchanged: 0/0
  1826 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1827 ;;      Params:         0       0       0       0       0       0       0       0       0
  1828 ;;      Locals:         5       0       0       0       0       0       0       0       0
  1829 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1830 ;;      Totals:         5       0       0       0       0       0       0       0       0
  1831 ;;Total ram usage:        5 bytes
  1832 ;; Hardware stack levels used:    1
  1833 ;; Hardware stack levels required when called:    4
  1834 ;; This function calls:
  1835 ;;		_Delay_ms
  1836 ;;		_Show
  1837 ;;		_Time_Check
  1838 ;;		_Wheel
  1839 ;;		___awdiv
  1840 ;;		___wmul
  1841 ;;		_setPixel
  1842 ;; This function is called by:
  1843 ;;		_main
  1844 ;; This function uses a non-reentrant model
  1845 ;;
  1846                           
  1847                           	psect	text6
  1848  003230                     __ptext6:
  1849                           	opt callstack 0
  1850  003230                     _rainbowCycle:
  1851                           	opt callstack 26
  1852                           
  1853                           ;Patterns.c: 320:     unsigned char *c;;Patterns.c: 321:     Time_Check(5);
  1854                           
  1855                           ;incstack = 0
  1856  003230  0E00               	movlw	0
  1857  003232  6E04               	movwf	(Time_Check@Time+1)^0,c
  1858  003234  0E05               	movlw	5
  1859  003236  6E03               	movwf	Time_Check@Time^0,c
  1860  003238  ECFC  F01D         	call	_Time_Check	;wreg free
  1861                           
  1862                           ;Patterns.c: 332:     for(int j=0; j<255; j++) {
  1863  00323C  0E00               	movlw	0
  1864  00323E  6E17               	movwf	(rainbowCycle@j+1)^0,c
  1865  003240  0E00               	movlw	0
  1866  003242  6E16               	movwf	rainbowCycle@j^0,c
  1867  003244                     l4910:
  1868                           
  1869                           ;Patterns.c: 333:         for(int i=0; i < NeoNum; i++) {
  1870  003244  0E00               	movlw	0
  1871  003246  6E19               	movwf	(rainbowCycle@i+1)^0,c
  1872  003248  0E00               	movlw	0
  1873  00324A  6E18               	movwf	rainbowCycle@i^0,c
  1874  00324C                     l4916:
  1875  00324C  C018  F003         	movff	rainbowCycle@i,___wmul@multiplier
  1876  003250  C019  F004         	movff	rainbowCycle@i+1,___wmul@multiplier+1
  1877  003254  0E00               	movlw	0
  1878  003256  6E06               	movwf	(___wmul@multiplicand+1)^0,c
  1879  003258  6805               	setf	___wmul@multiplicand^0,c
  1880  00325A  ECE9  F01D         	call	___wmul	;wreg free
  1881  00325E  C003  F009         	movff	?___wmul,___awdiv@dividend
  1882  003262  C004  F00A         	movff	?___wmul+1,___awdiv@dividend+1
  1883  003266  0E00               	movlw	0
  1884  003268  6E0C               	movwf	(___awdiv@divisor+1)^0,c
  1885  00326A  0ED2               	movlw	210
  1886  00326C  6E0B               	movwf	___awdiv@divisor^0,c
  1887  00326E  EC02  F01C         	call	___awdiv	;wreg free
  1888  003272  5016               	movf	rainbowCycle@j^0,w,c
  1889  003274  2609               	addwf	?___awdiv^0,f,c
  1890  003276  5017               	movf	(rainbowCycle@j+1)^0,w,c
  1891  003278  220A               	addwfc	(?___awdiv+1)^0,f,c
  1892  00327A  5009               	movf	?___awdiv^0,w,c
  1893  00327C  6E11               	movwf	Wheel@WheelPos^0,c
  1894  00327E  6A12               	clrf	(Wheel@WheelPos+1)^0,c
  1895  003280  EC15  F01A         	call	_Wheel	;wreg free
  1896  003284  6E1A               	movwf	rainbowCycle@c^0,c
  1897                           
  1898                           ; BSR set to: 0
  1899  003286  5018               	movf	rainbowCycle@i^0,w,c
  1900  003288  08D2               	sublw	210
  1901  00328A  6E0D               	movwf	setPixel@n^0,c
  1902  00328C  5019               	movf	(rainbowCycle@i+1)^0,w,c
  1903  00328E  A0D8               	btfss	status,0,c
  1904  003290  2AE8               	incf	wreg,f,c
  1905  003292  0800               	sublw	0
  1906  003294  6E0E               	movwf	(setPixel@n+1)^0,c
  1907  003296  501A               	movf	rainbowCycle@c^0,w,c
  1908  003298  6ED9               	movwf	fsr2l,c
  1909  00329A  6ADA               	clrf	fsr2h,c
  1910  00329C  50DF               	movf	indf2,w,c
  1911  00329E  6E0F               	movwf	setPixel@red^0,c
  1912  0032A0  501A               	movf	rainbowCycle@c^0,w,c
  1913  0032A2  6ED9               	movwf	fsr2l,c
  1914  0032A4  6ADA               	clrf	fsr2h,c
  1915  0032A6  0E01               	movlw	1
  1916  0032A8  26D9               	addwf	fsr2l,f,c
  1917  0032AA  50DF               	movf	indf2,w,c
  1918  0032AC  6E10               	movwf	setPixel@green^0,c
  1919  0032AE  501A               	movf	rainbowCycle@c^0,w,c
  1920  0032B0  6ED9               	movwf	fsr2l,c
  1921  0032B2  6ADA               	clrf	fsr2h,c
  1922  0032B4  0E02               	movlw	2
  1923  0032B6  26D9               	addwf	fsr2l,f,c
  1924  0032B8  50DF               	movf	indf2,w,c
  1925  0032BA  6E11               	movwf	setPixel@blue^0,c
  1926  0032BC  EC44  F01C         	call	_setPixel	;wreg free
  1927                           
  1928                           ;Patterns.c: 336:           setPixel(i, *c, *(c+1), *(c+2));
  1929  0032C0  C018  F00D         	movff	rainbowCycle@i,setPixel@n
  1930  0032C4  C019  F00E         	movff	rainbowCycle@i+1,setPixel@n+1
  1931  0032C8  501A               	movf	rainbowCycle@c^0,w,c
  1932  0032CA  6ED9               	movwf	fsr2l,c
  1933  0032CC  6ADA               	clrf	fsr2h,c
  1934  0032CE  50DF               	movf	indf2,w,c
  1935  0032D0  6E0F               	movwf	setPixel@red^0,c
  1936  0032D2  501A               	movf	rainbowCycle@c^0,w,c
  1937  0032D4  6ED9               	movwf	fsr2l,c
  1938  0032D6  6ADA               	clrf	fsr2h,c
  1939  0032D8  0E01               	movlw	1
  1940  0032DA  26D9               	addwf	fsr2l,f,c
  1941  0032DC  50DF               	movf	indf2,w,c
  1942  0032DE  6E10               	movwf	setPixel@green^0,c
  1943  0032E0  501A               	movf	rainbowCycle@c^0,w,c
  1944  0032E2  6ED9               	movwf	fsr2l,c
  1945  0032E4  6ADA               	clrf	fsr2h,c
  1946  0032E6  0E02               	movlw	2
  1947  0032E8  26D9               	addwf	fsr2l,f,c
  1948  0032EA  50DF               	movf	indf2,w,c
  1949  0032EC  6E11               	movwf	setPixel@blue^0,c
  1950  0032EE  EC44  F01C         	call	_setPixel	;wreg free
  1951                           
  1952                           ;Patterns.c: 337:         }
  1953  0032F2  4A18               	infsnz	rainbowCycle@i^0,f,c
  1954  0032F4  2A19               	incf	(rainbowCycle@i+1)^0,f,c
  1955  0032F6  BE19               	btfsc	(rainbowCycle@i+1)^0,7,c
  1956  0032F8  D7A9               	goto	l4916
  1957  0032FA  5019               	movf	(rainbowCycle@i+1)^0,w,c
  1958  0032FC  E104               	bnz	u5260
  1959  0032FE  0ED2               	movlw	210
  1960  003300  5C18               	subwf	rainbowCycle@i^0,w,c
  1961  003302  A0D8               	btfss	status,0,c
  1962  003304  D7A3               	goto	l4916
  1963  003306                     u5260:
  1964                           
  1965                           ;Patterns.c: 338:     if( BT_Patron!= 5 || BT_rainbow != 1)return;
  1966  003306  0E05               	movlw	5
  1967  003308  185B               	xorwf	_BT_Patron^0,w,c	;volatile
  1968  00330A  A4D8               	btfss	status,2,c
  1969  00330C  0012               	return	
  1970  00330E  A05C               	btfss	(_BT_rainbow/(0+8))^0,_BT_rainbow& (0+7),c	;volatile
  1971  003310  0012               	return	
  1972                           
  1973                           ;Patterns.c: 339:     Show();
  1974  003312  ECBD  F01C         	call	_Show	;wreg free
  1975                           
  1976                           ;Patterns.c: 340:     Delay_ms(BT_Tiempo);
  1977  003316  C05A  F003         	movff	_BT_Tiempo,Delay_ms@time	;volatile
  1978  00331A  6A04               	clrf	(Delay_ms@time+1)^0,c
  1979  00331C  EC51  F01D         	call	_Delay_ms	;wreg free
  1980                           
  1981                           ;Patterns.c: 341:   }
  1982  003320  4A16               	infsnz	rainbowCycle@j^0,f,c
  1983  003322  2A17               	incf	(rainbowCycle@j+1)^0,f,c
  1984  003324  BE17               	btfsc	(rainbowCycle@j+1)^0,7,c
  1985  003326  D78E               	goto	l4910
  1986  003328  5017               	movf	(rainbowCycle@j+1)^0,w,c
  1987  00332A  E104               	bnz	u5290
  1988  00332C  2816               	incf	rainbowCycle@j^0,w,c
  1989  00332E  B0D8               	btfsc	status,0,c
  1990  003330  0012               	return	
  1991  003332  D788               	goto	l4910
  1992  003334                     u5290:
  1993  003334  0012               	return		;funcret
  1994  003336                     __end_of_rainbowCycle:
  1995                           	opt callstack 0
  1996                           
  1997 ;; *************** function _initiateLeds *****************
  1998 ;; Defined at:
  1999 ;;		line 79 in file "Main.c"
  2000 ;; Parameters:    Size  Location     Type
  2001 ;;		None
  2002 ;; Auto vars:     Size  Location     Type
  2003 ;;		None
  2004 ;; Return value:  Size  Location     Type
  2005 ;;                  1    wreg      void 
  2006 ;; Registers used:
  2007 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+1, btemp+2, b
      +temp+3, btemp+4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+12, btemp+13, btemp+14, btemp+15
      +, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, btemp+24, btemp+25, btemp+26, btemp+27
      +, btemp+28, btemp+29, btemp+30, btemp+31, tosl, structret, tblptrl, tblptrh, tblptru, prodl, prodh, bsr, cstack
  2008 ;; Tracked objects:
  2009 ;;		On entry : 0/0
  2010 ;;		On exit  : 0/0
  2011 ;;		Unchanged: 0/0
  2012 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2013 ;;      Params:         0       0       0       0       0       0       0       0       0
  2014 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2015 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2016 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2017 ;;Total ram usage:        0 bytes
  2018 ;; Hardware stack levels used:    1
  2019 ;; Hardware stack levels required when called:    6
  2020 ;; This function calls:
  2021 ;;		_RGBLoop
  2022 ;; This function is called by:
  2023 ;;		_main
  2024 ;; This function uses a non-reentrant model
  2025 ;;
  2026                           
  2027                           	psect	text7
  2028  003C34                     __ptext7:
  2029                           	opt callstack 0
  2030  003C34                     _initiateLeds:
  2031                           	opt callstack 24
  2032                           
  2033                           ;Main.c: 80:     BT_Patron = 2;
  2034                           
  2035                           ;incstack = 0
  2036  003C34  0E02               	movlw	2
  2037  003C36  6E5B               	movwf	_BT_Patron^0,c	;volatile
  2038                           
  2039                           ;Main.c: 81:     RGBLoop();
  2040  003C38  ECD6  F016         	call	_RGBLoop	;wreg free
  2041                           
  2042                           ;Main.c: 82:     BT_Patron = 8;
  2043  003C3C  0E08               	movlw	8
  2044  003C3E  6E5B               	movwf	_BT_Patron^0,c	;volatile
  2045                           
  2046                           ;Main.c: 83:     BT_rainbow = 0;
  2047  003C40  905C               	bcf	(_BT_rainbow/(0+8))^0,_BT_rainbow& (0+7),c	;volatile
  2048                           
  2049                           ;Main.c: 84:     BT_RGB[0] = 255;
  2050  003C42  6857               	setf	_BT_RGB^0,c	;volatile
  2051                           
  2052                           ;Main.c: 85:     BT_RGB[1] = 0;
  2053  003C44  0E00               	movlw	0
  2054  003C46  6E58               	movwf	(_BT_RGB+1)^0,c	;volatile
  2055                           
  2056                           ;Main.c: 86:     BT_RGB[2] = 0;
  2057  003C48  0E00               	movlw	0
  2058  003C4A  6E59               	movwf	(_BT_RGB+2)^0,c	;volatile
  2059  003C4C  0012               	return		;funcret
  2060  003C4E                     __end_of_initiateLeds:
  2061                           	opt callstack 0
  2062                           
  2063 ;; *************** function _RGBLoop *****************
  2064 ;; Defined at:
  2065 ;;		line 16 in file "Patterns.c"
  2066 ;; Parameters:    Size  Location     Type
  2067 ;;		None
  2068 ;; Auto vars:     Size  Location     Type
  2069 ;;  k               2   31[COMRAM] int 
  2070 ;;  k               2   29[COMRAM] int 
  2071 ;;  j               1   28[COMRAM] unsigned char 
  2072 ;; Return value:  Size  Location     Type
  2073 ;;                  1    wreg      void 
  2074 ;; Registers used:
  2075 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+1, btemp+2, b
      +temp+3, btemp+4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+12, btemp+13, btemp+14, btemp+15
      +, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, btemp+24, btemp+25, btemp+26, btemp+27
      +, btemp+28, btemp+29, btemp+30, btemp+31, tosl, structret, tblptrl, tblptrh, tblptru, prodl, prodh, bsr, cstack
  2076 ;; Tracked objects:
  2077 ;;		On entry : 0/0
  2078 ;;		On exit  : 0/0
  2079 ;;		Unchanged: 0/0
  2080 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2081 ;;      Params:         0       0       0       0       0       0       0       0       0
  2082 ;;      Locals:         5       0       0       0       0       0       0       0       0
  2083 ;;      Temps:          2       0       0       0       0       0       0       0       0
  2084 ;;      Totals:         7       0       0       0       0       0       0       0       0
  2085 ;;Total ram usage:        7 bytes
  2086 ;; Hardware stack levels used:    1
  2087 ;; Hardware stack levels required when called:    5
  2088 ;; This function calls:
  2089 ;;		_Delay_ms
  2090 ;;		_Time_Check
  2091 ;;		_setAll
  2092 ;; This function is called by:
  2093 ;;		_initiateLeds
  2094 ;; This function uses a non-reentrant model
  2095 ;;
  2096                           
  2097                           	psect	text8
  2098  002DAC                     __ptext8:
  2099                           	opt callstack 0
  2100  002DAC                     _RGBLoop:
  2101                           	opt callstack 24
  2102                           
  2103                           ;Patterns.c: 17:   Time_Check(1);
  2104                           
  2105                           ;incstack = 0
  2106  002DAC  0E00               	movlw	0
  2107  002DAE  6E04               	movwf	(Time_Check@Time+1)^0,c
  2108  002DB0  0E01               	movlw	1
  2109  002DB2  6E03               	movwf	Time_Check@Time^0,c
  2110  002DB4  ECFC  F01D         	call	_Time_Check	;wreg free
  2111                           
  2112                           ;Patterns.c: 18:   for(unsigned char j = 0; j < 3; j++ ) {
  2113  002DB8  0E00               	movlw	0
  2114  002DBA  6E1D               	movwf	RGBLoop@j^0,c
  2115  002DBC                     l3442:
  2116                           
  2117                           ;Patterns.c: 20:     for(int k = 0; k < 255; k++) {
  2118  002DBC  0E00               	movlw	0
  2119  002DBE  6E1F               	movwf	(RGBLoop@k+1)^0,c
  2120  002DC0  0E00               	movlw	0
  2121  002DC2  6E1E               	movwf	RGBLoop@k^0,c
  2122  002DC4  D018               	goto	l3456
  2123  002DC6                     l3448:
  2124  002DC6  0E00               	movlw	0
  2125  002DC8  6E16               	movwf	setAll@Green^0,c
  2126  002DCA  0E00               	movlw	0
  2127  002DCC  6E17               	movwf	setAll@Blue^0,c
  2128  002DCE  501E               	movf	RGBLoop@k^0,w,c
  2129  002DD0  EC73  F01D         	call	_setAll
  2130  002DD4  D021               	goto	l3458
  2131  002DD6                     l3450:
  2132  002DD6  C01E  F016         	movff	RGBLoop@k,setAll@Green
  2133  002DDA  0E00               	movlw	0
  2134  002DDC  6E17               	movwf	setAll@Blue^0,c
  2135  002DDE  0E00               	movlw	0
  2136  002DE0  EC73  F01D         	call	_setAll
  2137  002DE4  D019               	goto	l3458
  2138  002DE6                     l3452:
  2139  002DE6  0E00               	movlw	0
  2140  002DE8  6E16               	movwf	setAll@Green^0,c
  2141  002DEA  C01E  F017         	movff	RGBLoop@k,setAll@Blue
  2142  002DEE  0E00               	movlw	0
  2143  002DF0  EC73  F01D         	call	_setAll
  2144  002DF4  D011               	goto	l3458
  2145  002DF6                     l3456:
  2146  002DF6  501D               	movf	RGBLoop@j^0,w,c
  2147  002DF8  6E1B               	movwf	??_RGBLoop^0,c
  2148  002DFA  6A1C               	clrf	(??_RGBLoop+1)^0,c
  2149                           
  2150                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2151                           ; Switch size 1, requested type "simple"
  2152                           ; Number of cases is 1, Range of values is 0 to 0
  2153                           ; switch strategies available:
  2154                           ; Name         Instructions Cycles
  2155                           ; simple_byte            4     3 (average)
  2156                           ;	Chosen strategy is simple_byte
  2157  002DFC  501C               	movf	(??_RGBLoop+1)^0,w,c
  2158  002DFE  0A00               	xorlw	0	; case 0
  2159  002E00  A4D8               	btfss	status,2,c
  2160  002E02  D00A               	goto	l3458
  2161                           
  2162                           ; Switch size 1, requested type "simple"
  2163                           ; Number of cases is 3, Range of values is 0 to 2
  2164                           ; switch strategies available:
  2165                           ; Name         Instructions Cycles
  2166                           ; simple_byte           10     6 (average)
  2167                           ;	Chosen strategy is simple_byte
  2168  002E04  501B               	movf	??_RGBLoop^0,w,c
  2169  002E06  0A00               	xorlw	0	; case 0
  2170  002E08  B4D8               	btfsc	status,2,c
  2171  002E0A  D7DD               	goto	l3448
  2172  002E0C  0A01               	xorlw	1	; case 1
  2173  002E0E  B4D8               	btfsc	status,2,c
  2174  002E10  D7E2               	goto	l3450
  2175  002E12  0A03               	xorlw	3	; case 2
  2176  002E14  B4D8               	btfsc	status,2,c
  2177  002E16  D7E7               	goto	l3452
  2178  002E18                     l3458:
  2179                           
  2180                           ;Patterns.c: 26:         if(BT_Patron != 2){
  2181  002E18  0E02               	movlw	2
  2182  002E1A  185B               	xorwf	_BT_Patron^0,w,c	;volatile
  2183  002E1C  B4D8               	btfsc	status,2,c
  2184  002E1E  D008               	goto	l3464
  2185                           
  2186                           ;Patterns.c: 27:             setAll(0,0,0);
  2187  002E20  0E00               	movlw	0
  2188  002E22  6E16               	movwf	setAll@Green^0,c
  2189  002E24  0E00               	movlw	0
  2190  002E26  6E17               	movwf	setAll@Blue^0,c
  2191  002E28  0E00               	movlw	0
  2192  002E2A  EC73  F01D         	call	_setAll
  2193  002E2E  0012               	return	
  2194  002E30                     l3464:
  2195                           
  2196                           ;Patterns.c: 30:         Delay_ms(BT_Tiempo);
  2197  002E30  C05A  F003         	movff	_BT_Tiempo,Delay_ms@time	;volatile
  2198  002E34  6A04               	clrf	(Delay_ms@time+1)^0,c
  2199  002E36  EC51  F01D         	call	_Delay_ms	;wreg free
  2200                           
  2201                           ;Patterns.c: 31:         }
  2202  002E3A  4A1E               	infsnz	RGBLoop@k^0,f,c
  2203  002E3C  2A1F               	incf	(RGBLoop@k+1)^0,f,c
  2204  002E3E  BE1F               	btfsc	(RGBLoop@k+1)^0,7,c
  2205  002E40  D7DA               	goto	l3456
  2206  002E42  501F               	movf	(RGBLoop@k+1)^0,w,c
  2207  002E44  E103               	bnz	u3010
  2208  002E46  281E               	incf	RGBLoop@k^0,w,c
  2209  002E48  A0D8               	btfss	status,0,c
  2210  002E4A  D7D5               	goto	l3456
  2211  002E4C                     u3010:
  2212                           
  2213                           ;Patterns.c: 33:     for(int k = 255; k > 0; k--) {
  2214  002E4C  0E00               	movlw	0
  2215  002E4E  6E21               	movwf	(RGBLoop@k_239+1)^0,c
  2216  002E50  6820               	setf	RGBLoop@k_239^0,c
  2217  002E52  D018               	goto	l3484
  2218  002E54                     l3476:
  2219  002E54  0E00               	movlw	0
  2220  002E56  6E16               	movwf	setAll@Green^0,c
  2221  002E58  0E00               	movlw	0
  2222  002E5A  6E17               	movwf	setAll@Blue^0,c
  2223  002E5C  5020               	movf	RGBLoop@k_239^0,w,c
  2224  002E5E  EC73  F01D         	call	_setAll
  2225  002E62  D021               	goto	l3486
  2226  002E64                     l3478:
  2227  002E64  C020  F016         	movff	RGBLoop@k_239,setAll@Green
  2228  002E68  0E00               	movlw	0
  2229  002E6A  6E17               	movwf	setAll@Blue^0,c
  2230  002E6C  0E00               	movlw	0
  2231  002E6E  EC73  F01D         	call	_setAll
  2232  002E72  D019               	goto	l3486
  2233  002E74                     l3480:
  2234  002E74  0E00               	movlw	0
  2235  002E76  6E16               	movwf	setAll@Green^0,c
  2236  002E78  C020  F017         	movff	RGBLoop@k_239,setAll@Blue
  2237  002E7C  0E00               	movlw	0
  2238  002E7E  EC73  F01D         	call	_setAll
  2239  002E82  D011               	goto	l3486
  2240  002E84                     l3484:
  2241  002E84  501D               	movf	RGBLoop@j^0,w,c
  2242  002E86  6E1B               	movwf	??_RGBLoop^0,c
  2243  002E88  6A1C               	clrf	(??_RGBLoop+1)^0,c
  2244                           
  2245                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2246                           ; Switch size 1, requested type "simple"
  2247                           ; Number of cases is 1, Range of values is 0 to 0
  2248                           ; switch strategies available:
  2249                           ; Name         Instructions Cycles
  2250                           ; simple_byte            4     3 (average)
  2251                           ;	Chosen strategy is simple_byte
  2252  002E8A  501C               	movf	(??_RGBLoop+1)^0,w,c
  2253  002E8C  0A00               	xorlw	0	; case 0
  2254  002E8E  A4D8               	btfss	status,2,c
  2255  002E90  D00A               	goto	l3486
  2256                           
  2257                           ; Switch size 1, requested type "simple"
  2258                           ; Number of cases is 3, Range of values is 0 to 2
  2259                           ; switch strategies available:
  2260                           ; Name         Instructions Cycles
  2261                           ; simple_byte           10     6 (average)
  2262                           ;	Chosen strategy is simple_byte
  2263  002E92  501B               	movf	??_RGBLoop^0,w,c
  2264  002E94  0A00               	xorlw	0	; case 0
  2265  002E96  B4D8               	btfsc	status,2,c
  2266  002E98  D7DD               	goto	l3476
  2267  002E9A  0A01               	xorlw	1	; case 1
  2268  002E9C  B4D8               	btfsc	status,2,c
  2269  002E9E  D7E2               	goto	l3478
  2270  002EA0  0A03               	xorlw	3	; case 2
  2271  002EA2  B4D8               	btfsc	status,2,c
  2272  002EA4  D7E7               	goto	l3480
  2273  002EA6                     l3486:
  2274                           
  2275                           ;Patterns.c: 39:       if(BT_Patron != 2){
  2276  002EA6  0E02               	movlw	2
  2277  002EA8  185B               	xorwf	_BT_Patron^0,w,c	;volatile
  2278  002EAA  B4D8               	btfsc	status,2,c
  2279  002EAC  D008               	goto	l3492
  2280                           
  2281                           ;Patterns.c: 40:         setAll(0,0,0);
  2282  002EAE  0E00               	movlw	0
  2283  002EB0  6E16               	movwf	setAll@Green^0,c
  2284  002EB2  0E00               	movlw	0
  2285  002EB4  6E17               	movwf	setAll@Blue^0,c
  2286  002EB6  0E00               	movlw	0
  2287  002EB8  EC73  F01D         	call	_setAll
  2288  002EBC  0012               	return	
  2289  002EBE                     l3492:
  2290                           
  2291                           ;Patterns.c: 43:       Delay_ms(BT_Tiempo);
  2292  002EBE  C05A  F003         	movff	_BT_Tiempo,Delay_ms@time	;volatile
  2293  002EC2  6A04               	clrf	(Delay_ms@time+1)^0,c
  2294  002EC4  EC51  F01D         	call	_Delay_ms	;wreg free
  2295                           
  2296                           ;Patterns.c: 44:     }
  2297  002EC8  0620               	decf	RGBLoop@k_239^0,f,c
  2298  002ECA  A0D8               	btfss	status,0,c
  2299  002ECC  0621               	decf	(RGBLoop@k_239+1)^0,f,c
  2300  002ECE  BE21               	btfsc	(RGBLoop@k_239+1)^0,7,c
  2301  002ED0  D005               	goto	u3030
  2302  002ED2  5021               	movf	(RGBLoop@k_239+1)^0,w,c
  2303  002ED4  E1D7               	bnz	l3484
  2304  002ED6  0420               	decf	RGBLoop@k_239^0,w,c
  2305  002ED8  B0D8               	btfsc	status,0,c
  2306  002EDA  D7D4               	goto	l3484
  2307  002EDC                     u3030:
  2308                           
  2309                           ;Patterns.c: 45:   }
  2310  002EDC  2A1D               	incf	RGBLoop@j^0,f,c
  2311  002EDE  0E02               	movlw	2
  2312  002EE0  641D               	cpfsgt	RGBLoop@j^0,c
  2313  002EE2  D76C               	goto	l3442
  2314  002EE4  0012               	return	
  2315  002EE6                     __end_of_RGBLoop:
  2316                           	opt callstack 0
  2317                           
  2318 ;; *************** function _fadeInOutRainbow *****************
  2319 ;; Defined at:
  2320 ;;		line 197 in file "Patterns.c"
  2321 ;; Parameters:    Size  Location     Type
  2322 ;;		None
  2323 ;; Auto vars:     Size  Location     Type
  2324 ;;  i               1   80[COMRAM] unsigned char 
  2325 ;;  i               1   79[COMRAM] unsigned char 
  2326 ;;  j               1   83[COMRAM] unsigned char 
  2327 ;;  j               1   82[COMRAM] unsigned char 
  2328 ;;  b               4   75[COMRAM] float 
  2329 ;;  g               4   71[COMRAM] float 
  2330 ;;  r               4   67[COMRAM] float 
  2331 ;;  c               1   81[COMRAM] PTR unsigned char 
  2332 ;;		 -> Wheel@c(3), 
  2333 ;; Return value:  Size  Location     Type
  2334 ;;                  1    wreg      void 
  2335 ;; Registers used:
  2336 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+1, btemp+2, b
      +temp+3, btemp+4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+12, btemp+13, btemp+14, btemp+15
      +, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, btemp+24, btemp+25, btemp+26, btemp+27
      +, btemp+28, btemp+29, btemp+30, btemp+31, tosl, structret, tblptrl, tblptrh, tblptru, prodl, prodh, bsr, cstack
  2337 ;; Tracked objects:
  2338 ;;		On entry : 0/0
  2339 ;;		On exit  : 0/0
  2340 ;;		Unchanged: 0/0
  2341 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2342 ;;      Params:         0       0       0       0       0       0       0       0       0
  2343 ;;      Locals:        17       0       0       0       0       0       0       0       0
  2344 ;;      Temps:          1       0       0       0       0       0       0       0       0
  2345 ;;      Totals:        18       0       0       0       0       0       0       0       0
  2346 ;;Total ram usage:       18 bytes
  2347 ;; Hardware stack levels used:    1
  2348 ;; Hardware stack levels required when called:    4
  2349 ;; This function calls:
  2350 ;;		_Delay_ms
  2351 ;;		_Show
  2352 ;;		_Wheel
  2353 ;;		___awdiv
  2354 ;;		___fldiv
  2355 ;;		___flmul
  2356 ;;		___fltol
  2357 ;;		___xxtofl
  2358 ;;		_setPixel
  2359 ;; This function is called by:
  2360 ;;		_main
  2361 ;; This function uses a non-reentrant model
  2362 ;;
  2363                           
  2364                           	psect	text9
  2365  000C98                     __ptext9:
  2366                           	opt callstack 0
  2367  000C98                     _fadeInOutRainbow:
  2368                           	opt callstack 26
  2369                           
  2370                           ;Patterns.c: 198:   unsigned char *c;;Patterns.c: 199:   float r, g, b;;Patterns.c: 200:
      +                               for(unsigned char j = 0; j < 255; j++) {
  2371                           
  2372                           ;incstack = 0
  2373  000C98  0E00               	movlw	0
  2374  000C9A  6E53               	movwf	fadeInOutRainbow@j^0,c
  2375  000C9C                     l4550:
  2376                           
  2377                           ;Patterns.c: 201:         for(unsigned char i=0;i<NeoNum;i++){
  2378  000C9C  0E00               	movlw	0
  2379  000C9E  6E50               	movwf	fadeInOutRainbow@i^0,c
  2380  000CA0                     l4556:
  2381  000CA0  5050               	movf	fadeInOutRainbow@i^0,w,c
  2382  000CA2  6E0A               	movwf	(___awdiv@dividend+1)^0,c
  2383  000CA4  6A09               	clrf	___awdiv@dividend^0,c
  2384  000CA6  0E00               	movlw	0
  2385  000CA8  6E0C               	movwf	(___awdiv@divisor+1)^0,c
  2386  000CAA  0ED2               	movlw	210
  2387  000CAC  6E0B               	movwf	___awdiv@divisor^0,c
  2388  000CAE  EC02  F01C         	call	___awdiv	;wreg free
  2389  000CB2  5053               	movf	fadeInOutRainbow@j^0,w,c
  2390  000CB4  2609               	addwf	?___awdiv^0,f,c
  2391  000CB6  0E00               	movlw	0
  2392  000CB8  220A               	addwfc	(?___awdiv+1)^0,f,c
  2393  000CBA  5009               	movf	?___awdiv^0,w,c
  2394  000CBC  6E11               	movwf	Wheel@WheelPos^0,c
  2395  000CBE  6A12               	clrf	(Wheel@WheelPos+1)^0,c
  2396  000CC0  EC15  F01A         	call	_Wheel	;wreg free
  2397  000CC4  6E52               	movwf	fadeInOutRainbow@c^0,c
  2398                           
  2399                           ; BSR set to: 0
  2400                           ;Patterns.c: 203:             r = (j/255.0) * (*c);
  2401  000CC6  0E00               	movlw	0
  2402  000CC8  6E15               	movwf	___fldiv@a^0,c
  2403  000CCA  0E00               	movlw	0
  2404  000CCC  6E16               	movwf	(___fldiv@a+1)^0,c
  2405  000CCE  0E7F               	movlw	127
  2406  000CD0  6E17               	movwf	(___fldiv@a+2)^0,c
  2407  000CD2  0E43               	movlw	67
  2408  000CD4  6E18               	movwf	(___fldiv@a+3)^0,c
  2409  000CD6  5053               	movf	fadeInOutRainbow@j^0,w,c
  2410  000CD8  6E03               	movwf	___xxtofl@val^0,c
  2411  000CDA  6A04               	clrf	(___xxtofl@val+1)^0,c
  2412  000CDC  6A05               	clrf	(___xxtofl@val+2)^0,c
  2413  000CDE  6A06               	clrf	(___xxtofl@val+3)^0,c
  2414  000CE0  0E01               	movlw	1
  2415  000CE2  EC36  F016         	call	___xxtofl
  2416  000CE6  C003  F011         	movff	?___xxtofl,___fldiv@b
  2417  000CEA  C004  F012         	movff	?___xxtofl+1,___fldiv@b+1
  2418  000CEE  C005  F013         	movff	?___xxtofl+2,___fldiv@b+2
  2419  000CF2  C006  F014         	movff	?___xxtofl+3,___fldiv@b+3
  2420  000CF6  ECDA  F010         	call	___fldiv	;wreg free
  2421  000CFA  C011  F02A         	movff	?___fldiv,___flmul@b
  2422  000CFE  C012  F02B         	movff	?___fldiv+1,___flmul@b+1
  2423  000D02  C013  F02C         	movff	?___fldiv+2,___flmul@b+2
  2424  000D06  C014  F02D         	movff	?___fldiv+3,___flmul@b+3
  2425  000D0A  5052               	movf	fadeInOutRainbow@c^0,w,c
  2426  000D0C  6ED9               	movwf	fsr2l,c
  2427  000D0E  6ADA               	clrf	fsr2h,c
  2428  000D10  50DF               	movf	indf2,w,c
  2429  000D12  6E43               	movwf	??_fadeInOutRainbow^0,c
  2430  000D14  5043               	movf	??_fadeInOutRainbow^0,w,c
  2431  000D16  6E03               	movwf	___xxtofl@val^0,c
  2432  000D18  6A04               	clrf	(___xxtofl@val+1)^0,c
  2433  000D1A  6A05               	clrf	(___xxtofl@val+2)^0,c
  2434  000D1C  6A06               	clrf	(___xxtofl@val+3)^0,c
  2435  000D1E  0E01               	movlw	1
  2436  000D20  EC36  F016         	call	___xxtofl
  2437  000D24  C003  F02E         	movff	?___xxtofl,___flmul@a
  2438  000D28  C004  F02F         	movff	?___xxtofl+1,___flmul@a+1
  2439  000D2C  C005  F030         	movff	?___xxtofl+2,___flmul@a+2
  2440  000D30  C006  F031         	movff	?___xxtofl+3,___flmul@a+3
  2441  000D34  EC81  F00C         	call	___flmul	;wreg free
  2442  000D38  C02A  F044         	movff	?___flmul,fadeInOutRainbow@r
  2443  000D3C  C02B  F045         	movff	?___flmul+1,fadeInOutRainbow@r+1
  2444  000D40  C02C  F046         	movff	?___flmul+2,fadeInOutRainbow@r+2
  2445  000D44  C02D  F047         	movff	?___flmul+3,fadeInOutRainbow@r+3
  2446                           
  2447                           ;Patterns.c: 204:             g = (j/255.0) * (*(c+1));
  2448  000D48  0E00               	movlw	0
  2449  000D4A  6E15               	movwf	___fldiv@a^0,c
  2450  000D4C  0E00               	movlw	0
  2451  000D4E  6E16               	movwf	(___fldiv@a+1)^0,c
  2452  000D50  0E7F               	movlw	127
  2453  000D52  6E17               	movwf	(___fldiv@a+2)^0,c
  2454  000D54  0E43               	movlw	67
  2455  000D56  6E18               	movwf	(___fldiv@a+3)^0,c
  2456  000D58  5053               	movf	fadeInOutRainbow@j^0,w,c
  2457  000D5A  6E03               	movwf	___xxtofl@val^0,c
  2458  000D5C  6A04               	clrf	(___xxtofl@val+1)^0,c
  2459  000D5E  6A05               	clrf	(___xxtofl@val+2)^0,c
  2460  000D60  6A06               	clrf	(___xxtofl@val+3)^0,c
  2461  000D62  0E01               	movlw	1
  2462  000D64  EC36  F016         	call	___xxtofl
  2463  000D68  C003  F011         	movff	?___xxtofl,___fldiv@b
  2464  000D6C  C004  F012         	movff	?___xxtofl+1,___fldiv@b+1
  2465  000D70  C005  F013         	movff	?___xxtofl+2,___fldiv@b+2
  2466  000D74  C006  F014         	movff	?___xxtofl+3,___fldiv@b+3
  2467  000D78  ECDA  F010         	call	___fldiv	;wreg free
  2468  000D7C  C011  F02A         	movff	?___fldiv,___flmul@b
  2469  000D80  C012  F02B         	movff	?___fldiv+1,___flmul@b+1
  2470  000D84  C013  F02C         	movff	?___fldiv+2,___flmul@b+2
  2471  000D88  C014  F02D         	movff	?___fldiv+3,___flmul@b+3
  2472  000D8C  5052               	movf	fadeInOutRainbow@c^0,w,c
  2473  000D8E  6ED9               	movwf	fsr2l,c
  2474  000D90  6ADA               	clrf	fsr2h,c
  2475  000D92  0E01               	movlw	1
  2476  000D94  26D9               	addwf	fsr2l,f,c
  2477  000D96  50DF               	movf	indf2,w,c
  2478  000D98  6E43               	movwf	??_fadeInOutRainbow^0,c
  2479  000D9A  5043               	movf	??_fadeInOutRainbow^0,w,c
  2480  000D9C  6E03               	movwf	___xxtofl@val^0,c
  2481  000D9E  6A04               	clrf	(___xxtofl@val+1)^0,c
  2482  000DA0  6A05               	clrf	(___xxtofl@val+2)^0,c
  2483  000DA2  6A06               	clrf	(___xxtofl@val+3)^0,c
  2484  000DA4  0E01               	movlw	1
  2485  000DA6  EC36  F016         	call	___xxtofl
  2486  000DAA  C003  F02E         	movff	?___xxtofl,___flmul@a
  2487  000DAE  C004  F02F         	movff	?___xxtofl+1,___flmul@a+1
  2488  000DB2  C005  F030         	movff	?___xxtofl+2,___flmul@a+2
  2489  000DB6  C006  F031         	movff	?___xxtofl+3,___flmul@a+3
  2490  000DBA  EC81  F00C         	call	___flmul	;wreg free
  2491  000DBE  C02A  F048         	movff	?___flmul,fadeInOutRainbow@g
  2492  000DC2  C02B  F049         	movff	?___flmul+1,fadeInOutRainbow@g+1
  2493  000DC6  C02C  F04A         	movff	?___flmul+2,fadeInOutRainbow@g+2
  2494  000DCA  C02D  F04B         	movff	?___flmul+3,fadeInOutRainbow@g+3
  2495                           
  2496                           ;Patterns.c: 205:             b = (j/255.0) * (*(c+2));
  2497  000DCE  0E00               	movlw	0
  2498  000DD0  6E15               	movwf	___fldiv@a^0,c
  2499  000DD2  0E00               	movlw	0
  2500  000DD4  6E16               	movwf	(___fldiv@a+1)^0,c
  2501  000DD6  0E7F               	movlw	127
  2502  000DD8  6E17               	movwf	(___fldiv@a+2)^0,c
  2503  000DDA  0E43               	movlw	67
  2504  000DDC  6E18               	movwf	(___fldiv@a+3)^0,c
  2505  000DDE  5053               	movf	fadeInOutRainbow@j^0,w,c
  2506  000DE0  6E03               	movwf	___xxtofl@val^0,c
  2507  000DE2  6A04               	clrf	(___xxtofl@val+1)^0,c
  2508  000DE4  6A05               	clrf	(___xxtofl@val+2)^0,c
  2509  000DE6  6A06               	clrf	(___xxtofl@val+3)^0,c
  2510  000DE8  0E01               	movlw	1
  2511  000DEA  EC36  F016         	call	___xxtofl
  2512  000DEE  C003  F011         	movff	?___xxtofl,___fldiv@b
  2513  000DF2  C004  F012         	movff	?___xxtofl+1,___fldiv@b+1
  2514  000DF6  C005  F013         	movff	?___xxtofl+2,___fldiv@b+2
  2515  000DFA  C006  F014         	movff	?___xxtofl+3,___fldiv@b+3
  2516  000DFE  ECDA  F010         	call	___fldiv	;wreg free
  2517  000E02  C011  F02A         	movff	?___fldiv,___flmul@b
  2518  000E06  C012  F02B         	movff	?___fldiv+1,___flmul@b+1
  2519  000E0A  C013  F02C         	movff	?___fldiv+2,___flmul@b+2
  2520  000E0E  C014  F02D         	movff	?___fldiv+3,___flmul@b+3
  2521  000E12  5052               	movf	fadeInOutRainbow@c^0,w,c
  2522  000E14  6ED9               	movwf	fsr2l,c
  2523  000E16  6ADA               	clrf	fsr2h,c
  2524  000E18  0E02               	movlw	2
  2525  000E1A  26D9               	addwf	fsr2l,f,c
  2526  000E1C  50DF               	movf	indf2,w,c
  2527  000E1E  6E43               	movwf	??_fadeInOutRainbow^0,c
  2528  000E20  5043               	movf	??_fadeInOutRainbow^0,w,c
  2529  000E22  6E03               	movwf	___xxtofl@val^0,c
  2530  000E24  6A04               	clrf	(___xxtofl@val+1)^0,c
  2531  000E26  6A05               	clrf	(___xxtofl@val+2)^0,c
  2532  000E28  6A06               	clrf	(___xxtofl@val+3)^0,c
  2533  000E2A  0E01               	movlw	1
  2534  000E2C  EC36  F016         	call	___xxtofl
  2535  000E30  C003  F02E         	movff	?___xxtofl,___flmul@a
  2536  000E34  C004  F02F         	movff	?___xxtofl+1,___flmul@a+1
  2537  000E38  C005  F030         	movff	?___xxtofl+2,___flmul@a+2
  2538  000E3C  C006  F031         	movff	?___xxtofl+3,___flmul@a+3
  2539  000E40  EC81  F00C         	call	___flmul	;wreg free
  2540  000E44  C02A  F04C         	movff	?___flmul,fadeInOutRainbow@b
  2541  000E48  C02B  F04D         	movff	?___flmul+1,fadeInOutRainbow@b+1
  2542  000E4C  C02C  F04E         	movff	?___flmul+2,fadeInOutRainbow@b+2
  2543  000E50  C02D  F04F         	movff	?___flmul+3,fadeInOutRainbow@b+3
  2544                           
  2545                           ;Patterns.c: 206:             setPixel(i,r,g,b);
  2546  000E54  C050  F00D         	movff	fadeInOutRainbow@i,setPixel@n
  2547  000E58  6A0E               	clrf	(setPixel@n+1)^0,c
  2548  000E5A  C044  F003         	movff	fadeInOutRainbow@r,___fltol@f1
  2549  000E5E  C045  F004         	movff	fadeInOutRainbow@r+1,___fltol@f1+1
  2550  000E62  C046  F005         	movff	fadeInOutRainbow@r+2,___fltol@f1+2
  2551  000E66  C047  F006         	movff	fadeInOutRainbow@r+3,___fltol@f1+3
  2552  000E6A  EC56  F01B         	call	___fltol	;wreg free
  2553  000E6E  5003               	movf	?___fltol^0,w,c
  2554  000E70  6E0F               	movwf	setPixel@red^0,c
  2555  000E72  C048  F003         	movff	fadeInOutRainbow@g,___fltol@f1
  2556  000E76  C049  F004         	movff	fadeInOutRainbow@g+1,___fltol@f1+1
  2557  000E7A  C04A  F005         	movff	fadeInOutRainbow@g+2,___fltol@f1+2
  2558  000E7E  C04B  F006         	movff	fadeInOutRainbow@g+3,___fltol@f1+3
  2559  000E82  EC56  F01B         	call	___fltol	;wreg free
  2560  000E86  5003               	movf	?___fltol^0,w,c
  2561  000E88  6E10               	movwf	setPixel@green^0,c
  2562  000E8A  C04C  F003         	movff	fadeInOutRainbow@b,___fltol@f1
  2563  000E8E  C04D  F004         	movff	fadeInOutRainbow@b+1,___fltol@f1+1
  2564  000E92  C04E  F005         	movff	fadeInOutRainbow@b+2,___fltol@f1+2
  2565  000E96  C04F  F006         	movff	fadeInOutRainbow@b+3,___fltol@f1+3
  2566  000E9A  EC56  F01B         	call	___fltol	;wreg free
  2567  000E9E  5003               	movf	?___fltol^0,w,c
  2568  000EA0  6E11               	movwf	setPixel@blue^0,c
  2569  000EA2  EC44  F01C         	call	_setPixel	;wreg free
  2570                           
  2571                           ;Patterns.c: 207:         }
  2572  000EA6  2A50               	incf	fadeInOutRainbow@i^0,f,c
  2573  000EA8  0ED1               	movlw	209
  2574  000EAA  6450               	cpfsgt	fadeInOutRainbow@i^0,c
  2575  000EAC  D6F9               	goto	l4556
  2576                           
  2577                           ;Patterns.c: 208:         Show();
  2578  000EAE  ECBD  F01C         	call	_Show	;wreg free
  2579                           
  2580                           ;Patterns.c: 209:         if(BT_Patron!= 2 || BT_rainbow != 1)return;
  2581  000EB2  0E02               	movlw	2
  2582  000EB4  185B               	xorwf	_BT_Patron^0,w,c	;volatile
  2583  000EB6  A4D8               	btfss	status,2,c
  2584  000EB8  0012               	return	
  2585  000EBA  A05C               	btfss	(_BT_rainbow/(0+8))^0,_BT_rainbow& (0+7),c	;volatile
  2586  000EBC  0012               	return	
  2587                           
  2588                           ;Patterns.c: 210:         Delay_ms(BT_Tiempo);
  2589  000EBE  C05A  F003         	movff	_BT_Tiempo,Delay_ms@time	;volatile
  2590  000EC2  6A04               	clrf	(Delay_ms@time+1)^0,c
  2591  000EC4  EC51  F01D         	call	_Delay_ms	;wreg free
  2592                           
  2593                           ;Patterns.c: 211:       }
  2594  000EC8  2A53               	incf	fadeInOutRainbow@j^0,f,c
  2595  000ECA  2853               	incf	fadeInOutRainbow@j^0,w,c
  2596  000ECC  A4D8               	btfss	status,2,c
  2597  000ECE  D6E6               	goto	l4550
  2598                           
  2599                           ;Patterns.c: 212:     for(unsigned char j = 255; j > 0; j--) {
  2600  000ED0  6854               	setf	fadeInOutRainbow@j_272^0,c
  2601  000ED2                     l4586:
  2602                           
  2603                           ;Patterns.c: 213:         for(unsigned char i=0;i<NeoNum;i++){
  2604  000ED2  0E00               	movlw	0
  2605  000ED4  6E51               	movwf	fadeInOutRainbow@i_273^0,c
  2606  000ED6                     l4592:
  2607  000ED6  5051               	movf	fadeInOutRainbow@i_273^0,w,c
  2608  000ED8  6E0A               	movwf	(___awdiv@dividend+1)^0,c
  2609  000EDA  6A09               	clrf	___awdiv@dividend^0,c
  2610  000EDC  0E00               	movlw	0
  2611  000EDE  6E0C               	movwf	(___awdiv@divisor+1)^0,c
  2612  000EE0  0ED2               	movlw	210
  2613  000EE2  6E0B               	movwf	___awdiv@divisor^0,c
  2614  000EE4  EC02  F01C         	call	___awdiv	;wreg free
  2615  000EE8  5054               	movf	fadeInOutRainbow@j_272^0,w,c
  2616  000EEA  2609               	addwf	?___awdiv^0,f,c
  2617  000EEC  0E00               	movlw	0
  2618  000EEE  220A               	addwfc	(?___awdiv+1)^0,f,c
  2619  000EF0  5009               	movf	?___awdiv^0,w,c
  2620  000EF2  6E11               	movwf	Wheel@WheelPos^0,c
  2621  000EF4  6A12               	clrf	(Wheel@WheelPos+1)^0,c
  2622  000EF6  EC15  F01A         	call	_Wheel	;wreg free
  2623  000EFA  6E52               	movwf	fadeInOutRainbow@c^0,c
  2624                           
  2625                           ; BSR set to: 0
  2626                           ;Patterns.c: 215:               r = (j/255.0) * (*c);
  2627  000EFC  0E00               	movlw	0
  2628  000EFE  6E15               	movwf	___fldiv@a^0,c
  2629  000F00  0E00               	movlw	0
  2630  000F02  6E16               	movwf	(___fldiv@a+1)^0,c
  2631  000F04  0E7F               	movlw	127
  2632  000F06  6E17               	movwf	(___fldiv@a+2)^0,c
  2633  000F08  0E43               	movlw	67
  2634  000F0A  6E18               	movwf	(___fldiv@a+3)^0,c
  2635  000F0C  5054               	movf	fadeInOutRainbow@j_272^0,w,c
  2636  000F0E  6E03               	movwf	___xxtofl@val^0,c
  2637  000F10  6A04               	clrf	(___xxtofl@val+1)^0,c
  2638  000F12  6A05               	clrf	(___xxtofl@val+2)^0,c
  2639  000F14  6A06               	clrf	(___xxtofl@val+3)^0,c
  2640  000F16  0E01               	movlw	1
  2641  000F18  EC36  F016         	call	___xxtofl
  2642  000F1C  C003  F011         	movff	?___xxtofl,___fldiv@b
  2643  000F20  C004  F012         	movff	?___xxtofl+1,___fldiv@b+1
  2644  000F24  C005  F013         	movff	?___xxtofl+2,___fldiv@b+2
  2645  000F28  C006  F014         	movff	?___xxtofl+3,___fldiv@b+3
  2646  000F2C  ECDA  F010         	call	___fldiv	;wreg free
  2647  000F30  C011  F02A         	movff	?___fldiv,___flmul@b
  2648  000F34  C012  F02B         	movff	?___fldiv+1,___flmul@b+1
  2649  000F38  C013  F02C         	movff	?___fldiv+2,___flmul@b+2
  2650  000F3C  C014  F02D         	movff	?___fldiv+3,___flmul@b+3
  2651  000F40  5052               	movf	fadeInOutRainbow@c^0,w,c
  2652  000F42  6ED9               	movwf	fsr2l,c
  2653  000F44  6ADA               	clrf	fsr2h,c
  2654  000F46  50DF               	movf	indf2,w,c
  2655  000F48  6E43               	movwf	??_fadeInOutRainbow^0,c
  2656  000F4A  5043               	movf	??_fadeInOutRainbow^0,w,c
  2657  000F4C  6E03               	movwf	___xxtofl@val^0,c
  2658  000F4E  6A04               	clrf	(___xxtofl@val+1)^0,c
  2659  000F50  6A05               	clrf	(___xxtofl@val+2)^0,c
  2660  000F52  6A06               	clrf	(___xxtofl@val+3)^0,c
  2661  000F54  0E01               	movlw	1
  2662  000F56  EC36  F016         	call	___xxtofl
  2663  000F5A  C003  F02E         	movff	?___xxtofl,___flmul@a
  2664  000F5E  C004  F02F         	movff	?___xxtofl+1,___flmul@a+1
  2665  000F62  C005  F030         	movff	?___xxtofl+2,___flmul@a+2
  2666  000F66  C006  F031         	movff	?___xxtofl+3,___flmul@a+3
  2667  000F6A  EC81  F00C         	call	___flmul	;wreg free
  2668  000F6E  C02A  F044         	movff	?___flmul,fadeInOutRainbow@r
  2669  000F72  C02B  F045         	movff	?___flmul+1,fadeInOutRainbow@r+1
  2670  000F76  C02C  F046         	movff	?___flmul+2,fadeInOutRainbow@r+2
  2671  000F7A  C02D  F047         	movff	?___flmul+3,fadeInOutRainbow@r+3
  2672                           
  2673                           ;Patterns.c: 216:               g = (j/255.0) * (*(c+1));
  2674  000F7E  0E00               	movlw	0
  2675  000F80  6E15               	movwf	___fldiv@a^0,c
  2676  000F82  0E00               	movlw	0
  2677  000F84  6E16               	movwf	(___fldiv@a+1)^0,c
  2678  000F86  0E7F               	movlw	127
  2679  000F88  6E17               	movwf	(___fldiv@a+2)^0,c
  2680  000F8A  0E43               	movlw	67
  2681  000F8C  6E18               	movwf	(___fldiv@a+3)^0,c
  2682  000F8E  5054               	movf	fadeInOutRainbow@j_272^0,w,c
  2683  000F90  6E03               	movwf	___xxtofl@val^0,c
  2684  000F92  6A04               	clrf	(___xxtofl@val+1)^0,c
  2685  000F94  6A05               	clrf	(___xxtofl@val+2)^0,c
  2686  000F96  6A06               	clrf	(___xxtofl@val+3)^0,c
  2687  000F98  0E01               	movlw	1
  2688  000F9A  EC36  F016         	call	___xxtofl
  2689  000F9E  C003  F011         	movff	?___xxtofl,___fldiv@b
  2690  000FA2  C004  F012         	movff	?___xxtofl+1,___fldiv@b+1
  2691  000FA6  C005  F013         	movff	?___xxtofl+2,___fldiv@b+2
  2692  000FAA  C006  F014         	movff	?___xxtofl+3,___fldiv@b+3
  2693  000FAE  ECDA  F010         	call	___fldiv	;wreg free
  2694  000FB2  C011  F02A         	movff	?___fldiv,___flmul@b
  2695  000FB6  C012  F02B         	movff	?___fldiv+1,___flmul@b+1
  2696  000FBA  C013  F02C         	movff	?___fldiv+2,___flmul@b+2
  2697  000FBE  C014  F02D         	movff	?___fldiv+3,___flmul@b+3
  2698  000FC2  5052               	movf	fadeInOutRainbow@c^0,w,c
  2699  000FC4  6ED9               	movwf	fsr2l,c
  2700  000FC6  6ADA               	clrf	fsr2h,c
  2701  000FC8  0E01               	movlw	1
  2702  000FCA  26D9               	addwf	fsr2l,f,c
  2703  000FCC  50DF               	movf	indf2,w,c
  2704  000FCE  6E43               	movwf	??_fadeInOutRainbow^0,c
  2705  000FD0  5043               	movf	??_fadeInOutRainbow^0,w,c
  2706  000FD2  6E03               	movwf	___xxtofl@val^0,c
  2707  000FD4  6A04               	clrf	(___xxtofl@val+1)^0,c
  2708  000FD6  6A05               	clrf	(___xxtofl@val+2)^0,c
  2709  000FD8  6A06               	clrf	(___xxtofl@val+3)^0,c
  2710  000FDA  0E01               	movlw	1
  2711  000FDC  EC36  F016         	call	___xxtofl
  2712  000FE0  C003  F02E         	movff	?___xxtofl,___flmul@a
  2713  000FE4  C004  F02F         	movff	?___xxtofl+1,___flmul@a+1
  2714  000FE8  C005  F030         	movff	?___xxtofl+2,___flmul@a+2
  2715  000FEC  C006  F031         	movff	?___xxtofl+3,___flmul@a+3
  2716  000FF0  EC81  F00C         	call	___flmul	;wreg free
  2717  000FF4  C02A  F048         	movff	?___flmul,fadeInOutRainbow@g
  2718  000FF8  C02B  F049         	movff	?___flmul+1,fadeInOutRainbow@g+1
  2719  000FFC  C02C  F04A         	movff	?___flmul+2,fadeInOutRainbow@g+2
  2720  001000  C02D  F04B         	movff	?___flmul+3,fadeInOutRainbow@g+3
  2721                           
  2722                           ;Patterns.c: 217:               b = (j/255.0) * (*(c+2));
  2723  001004  0E00               	movlw	0
  2724  001006  6E15               	movwf	___fldiv@a^0,c
  2725  001008  0E00               	movlw	0
  2726  00100A  6E16               	movwf	(___fldiv@a+1)^0,c
  2727  00100C  0E7F               	movlw	127
  2728  00100E  6E17               	movwf	(___fldiv@a+2)^0,c
  2729  001010  0E43               	movlw	67
  2730  001012  6E18               	movwf	(___fldiv@a+3)^0,c
  2731  001014  5054               	movf	fadeInOutRainbow@j_272^0,w,c
  2732  001016  6E03               	movwf	___xxtofl@val^0,c
  2733  001018  6A04               	clrf	(___xxtofl@val+1)^0,c
  2734  00101A  6A05               	clrf	(___xxtofl@val+2)^0,c
  2735  00101C  6A06               	clrf	(___xxtofl@val+3)^0,c
  2736  00101E  0E01               	movlw	1
  2737  001020  EC36  F016         	call	___xxtofl
  2738  001024  C003  F011         	movff	?___xxtofl,___fldiv@b
  2739  001028  C004  F012         	movff	?___xxtofl+1,___fldiv@b+1
  2740  00102C  C005  F013         	movff	?___xxtofl+2,___fldiv@b+2
  2741  001030  C006  F014         	movff	?___xxtofl+3,___fldiv@b+3
  2742  001034  ECDA  F010         	call	___fldiv	;wreg free
  2743  001038  C011  F02A         	movff	?___fldiv,___flmul@b
  2744  00103C  C012  F02B         	movff	?___fldiv+1,___flmul@b+1
  2745  001040  C013  F02C         	movff	?___fldiv+2,___flmul@b+2
  2746  001044  C014  F02D         	movff	?___fldiv+3,___flmul@b+3
  2747  001048  5052               	movf	fadeInOutRainbow@c^0,w,c
  2748  00104A  6ED9               	movwf	fsr2l,c
  2749  00104C  6ADA               	clrf	fsr2h,c
  2750  00104E  0E02               	movlw	2
  2751  001050  26D9               	addwf	fsr2l,f,c
  2752  001052  50DF               	movf	indf2,w,c
  2753  001054  6E43               	movwf	??_fadeInOutRainbow^0,c
  2754  001056  5043               	movf	??_fadeInOutRainbow^0,w,c
  2755  001058  6E03               	movwf	___xxtofl@val^0,c
  2756  00105A  6A04               	clrf	(___xxtofl@val+1)^0,c
  2757  00105C  6A05               	clrf	(___xxtofl@val+2)^0,c
  2758  00105E  6A06               	clrf	(___xxtofl@val+3)^0,c
  2759  001060  0E01               	movlw	1
  2760  001062  EC36  F016         	call	___xxtofl
  2761  001066  C003  F02E         	movff	?___xxtofl,___flmul@a
  2762  00106A  C004  F02F         	movff	?___xxtofl+1,___flmul@a+1
  2763  00106E  C005  F030         	movff	?___xxtofl+2,___flmul@a+2
  2764  001072  C006  F031         	movff	?___xxtofl+3,___flmul@a+3
  2765  001076  EC81  F00C         	call	___flmul	;wreg free
  2766  00107A  C02A  F04C         	movff	?___flmul,fadeInOutRainbow@b
  2767  00107E  C02B  F04D         	movff	?___flmul+1,fadeInOutRainbow@b+1
  2768  001082  C02C  F04E         	movff	?___flmul+2,fadeInOutRainbow@b+2
  2769  001086  C02D  F04F         	movff	?___flmul+3,fadeInOutRainbow@b+3
  2770                           
  2771                           ;Patterns.c: 218:               setPixel(i,r,g,b);
  2772  00108A  C051  F00D         	movff	fadeInOutRainbow@i_273,setPixel@n
  2773  00108E  6A0E               	clrf	(setPixel@n+1)^0,c
  2774  001090  C044  F003         	movff	fadeInOutRainbow@r,___fltol@f1
  2775  001094  C045  F004         	movff	fadeInOutRainbow@r+1,___fltol@f1+1
  2776  001098  C046  F005         	movff	fadeInOutRainbow@r+2,___fltol@f1+2
  2777  00109C  C047  F006         	movff	fadeInOutRainbow@r+3,___fltol@f1+3
  2778  0010A0  EC56  F01B         	call	___fltol	;wreg free
  2779  0010A4  5003               	movf	?___fltol^0,w,c
  2780  0010A6  6E0F               	movwf	setPixel@red^0,c
  2781  0010A8  C048  F003         	movff	fadeInOutRainbow@g,___fltol@f1
  2782  0010AC  C049  F004         	movff	fadeInOutRainbow@g+1,___fltol@f1+1
  2783  0010B0  C04A  F005         	movff	fadeInOutRainbow@g+2,___fltol@f1+2
  2784  0010B4  C04B  F006         	movff	fadeInOutRainbow@g+3,___fltol@f1+3
  2785  0010B8  EC56  F01B         	call	___fltol	;wreg free
  2786  0010BC  5003               	movf	?___fltol^0,w,c
  2787  0010BE  6E10               	movwf	setPixel@green^0,c
  2788  0010C0  C04C  F003         	movff	fadeInOutRainbow@b,___fltol@f1
  2789  0010C4  C04D  F004         	movff	fadeInOutRainbow@b+1,___fltol@f1+1
  2790  0010C8  C04E  F005         	movff	fadeInOutRainbow@b+2,___fltol@f1+2
  2791  0010CC  C04F  F006         	movff	fadeInOutRainbow@b+3,___fltol@f1+3
  2792  0010D0  EC56  F01B         	call	___fltol	;wreg free
  2793  0010D4  5003               	movf	?___fltol^0,w,c
  2794  0010D6  6E11               	movwf	setPixel@blue^0,c
  2795  0010D8  EC44  F01C         	call	_setPixel	;wreg free
  2796                           
  2797                           ;Patterns.c: 219:           }
  2798  0010DC  2A51               	incf	fadeInOutRainbow@i_273^0,f,c
  2799  0010DE  0ED1               	movlw	209
  2800  0010E0  6451               	cpfsgt	fadeInOutRainbow@i_273^0,c
  2801  0010E2  D6F9               	goto	l4592
  2802                           
  2803                           ;Patterns.c: 220:         Show();
  2804  0010E4  ECBD  F01C         	call	_Show	;wreg free
  2805                           
  2806                           ;Patterns.c: 221:         if( BT_Patron!= 2 || BT_rainbow != 1)return;
  2807  0010E8  0E02               	movlw	2
  2808  0010EA  185B               	xorwf	_BT_Patron^0,w,c	;volatile
  2809  0010EC  A4D8               	btfss	status,2,c
  2810  0010EE  0012               	return	
  2811  0010F0  A05C               	btfss	(_BT_rainbow/(0+8))^0,_BT_rainbow& (0+7),c	;volatile
  2812  0010F2  0012               	return	
  2813                           
  2814                           ;Patterns.c: 222:         Delay_ms(BT_Tiempo);
  2815  0010F4  C05A  F003         	movff	_BT_Tiempo,Delay_ms@time	;volatile
  2816  0010F8  6A04               	clrf	(Delay_ms@time+1)^0,c
  2817  0010FA  EC51  F01D         	call	_Delay_ms	;wreg free
  2818                           
  2819                           ;Patterns.c: 223:     }
  2820  0010FE  0654               	decf	fadeInOutRainbow@j_272^0,f,c
  2821  001100  5054               	movf	fadeInOutRainbow@j_272^0,w,c
  2822  001102  B4D8               	btfsc	status,2,c
  2823  001104  0012               	return	
  2824  001106  D6E5               	goto	l4586
  2825  001108                     __end_of_fadeInOutRainbow:
  2826                           	opt callstack 0
  2827                           
  2828 ;; *************** function _colorWipeRainbow *****************
  2829 ;; Defined at:
  2830 ;;		line 106 in file "Patterns.c"
  2831 ;; Parameters:    Size  Location     Type
  2832 ;;		None
  2833 ;; Auto vars:     Size  Location     Type
  2834 ;;  i               2   29[COMRAM] int 
  2835 ;;  i               2   34[COMRAM] int 
  2836 ;;  i               2   27[COMRAM] int 
  2837 ;;  i               2   32[COMRAM] int 
  2838 ;;  i               2   25[COMRAM] int 
  2839 ;;  i               2   23[COMRAM] int 
  2840 ;;  i               1   31[COMRAM] unsigned char 
  2841 ;;  j               1   36[COMRAM] unsigned char 
  2842 ;;  c               1   37[COMRAM] PTR unsigned char 
  2843 ;;		 -> Wheel@c(3), 
  2844 ;; Return value:  Size  Location     Type
  2845 ;;                  1    wreg      void 
  2846 ;; Registers used:
  2847 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+1, btemp+2, b
      +temp+3, btemp+4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+12, btemp+13, btemp+14, btemp+15
      +, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, btemp+24, btemp+25, btemp+26, btemp+27
      +, btemp+28, btemp+29, btemp+30, btemp+31, tosl, structret, tblptrl, tblptrh, tblptru, prodl, prodh, bsr, cstack
  2848 ;; Tracked objects:
  2849 ;;		On entry : 0/0
  2850 ;;		On exit  : 0/0
  2851 ;;		Unchanged: 0/0
  2852 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2853 ;;      Params:         0       0       0       0       0       0       0       0       0
  2854 ;;      Locals:        15       0       0       0       0       0       0       0       0
  2855 ;;      Temps:          2       0       0       0       0       0       0       0       0
  2856 ;;      Totals:        17       0       0       0       0       0       0       0       0
  2857 ;;Total ram usage:       17 bytes
  2858 ;; Hardware stack levels used:    1
  2859 ;; Hardware stack levels required when called:    4
  2860 ;; This function calls:
  2861 ;;		_Delay_ms
  2862 ;;		_Show
  2863 ;;		_Time_Check
  2864 ;;		_Wheel
  2865 ;;		___awdiv
  2866 ;;		_setPixel
  2867 ;; This function is called by:
  2868 ;;		_main
  2869 ;; This function uses a non-reentrant model
  2870 ;;
  2871                           
  2872                           	psect	text10
  2873  001520                     __ptext10:
  2874                           	opt callstack 0
  2875  001520                     _colorWipeRainbow:
  2876                           	opt callstack 26
  2877                           
  2878                           ;Patterns.c: 107:     unsigned char *c;;Patterns.c: 108:     Time_Check(5);
  2879                           
  2880                           ;incstack = 0
  2881  001520  0E00               	movlw	0
  2882  001522  6E04               	movwf	(Time_Check@Time+1)^0,c
  2883  001524  0E05               	movlw	5
  2884  001526  6E03               	movwf	Time_Check@Time^0,c
  2885  001528  ECFC  F01D         	call	_Time_Check	;wreg free
  2886                           
  2887                           ;Patterns.c: 110:     for(unsigned char j=0; j<255;j++){
  2888  00152C  0E00               	movlw	0
  2889  00152E  6E25               	movwf	colorWipeRainbow@j^0,c
  2890  001530                     l4226:
  2891                           
  2892                           ;Patterns.c: 111:         for(unsigned char i=0;i<NeoNum;i++){
  2893  001530  0E00               	movlw	0
  2894  001532  6E20               	movwf	colorWipeRainbow@i^0,c
  2895  001534                     l4232:
  2896  001534  5020               	movf	colorWipeRainbow@i^0,w,c
  2897  001536  6E0A               	movwf	(___awdiv@dividend+1)^0,c
  2898  001538  6A09               	clrf	___awdiv@dividend^0,c
  2899  00153A  0E00               	movlw	0
  2900  00153C  6E0C               	movwf	(___awdiv@divisor+1)^0,c
  2901  00153E  0ED2               	movlw	210
  2902  001540  6E0B               	movwf	___awdiv@divisor^0,c
  2903  001542  EC02  F01C         	call	___awdiv	;wreg free
  2904  001546  5025               	movf	colorWipeRainbow@j^0,w,c
  2905  001548  2609               	addwf	?___awdiv^0,f,c
  2906  00154A  0E00               	movlw	0
  2907  00154C  220A               	addwfc	(?___awdiv+1)^0,f,c
  2908  00154E  5009               	movf	?___awdiv^0,w,c
  2909  001550  6E11               	movwf	Wheel@WheelPos^0,c
  2910  001552  6A12               	clrf	(Wheel@WheelPos+1)^0,c
  2911  001554  EC15  F01A         	call	_Wheel	;wreg free
  2912  001558  6E26               	movwf	colorWipeRainbow@c^0,c
  2913                           
  2914                           ; BSR set to: 0
  2915                           ;Patterns.c: 113:             setPixel(i, *c, *(c+1), *(c+2));
  2916  00155A  C020  F00D         	movff	colorWipeRainbow@i,setPixel@n
  2917  00155E  6A0E               	clrf	(setPixel@n+1)^0,c
  2918  001560  5026               	movf	colorWipeRainbow@c^0,w,c
  2919  001562  6ED9               	movwf	fsr2l,c
  2920  001564  6ADA               	clrf	fsr2h,c
  2921  001566  50DF               	movf	indf2,w,c
  2922  001568  6E0F               	movwf	setPixel@red^0,c
  2923  00156A  5026               	movf	colorWipeRainbow@c^0,w,c
  2924  00156C  6ED9               	movwf	fsr2l,c
  2925  00156E  6ADA               	clrf	fsr2h,c
  2926  001570  0E01               	movlw	1
  2927  001572  26D9               	addwf	fsr2l,f,c
  2928  001574  50DF               	movf	indf2,w,c
  2929  001576  6E10               	movwf	setPixel@green^0,c
  2930  001578  5026               	movf	colorWipeRainbow@c^0,w,c
  2931  00157A  6ED9               	movwf	fsr2l,c
  2932  00157C  6ADA               	clrf	fsr2h,c
  2933  00157E  0E02               	movlw	2
  2934  001580  26D9               	addwf	fsr2l,f,c
  2935  001582  50DF               	movf	indf2,w,c
  2936  001584  6E11               	movwf	setPixel@blue^0,c
  2937  001586  EC44  F01C         	call	_setPixel	;wreg free
  2938                           
  2939                           ;Patterns.c: 114:             if(BT_Patron != 1 || BT_rainbow != 1)return;
  2940  00158A  045B               	decf	_BT_Patron^0,w,c	;volatile
  2941  00158C  A4D8               	btfss	status,2,c
  2942  00158E  0012               	return	
  2943  001590  A05C               	btfss	(_BT_rainbow/(0+8))^0,_BT_rainbow& (0+7),c	;volatile
  2944  001592  0012               	return	
  2945                           
  2946                           ;Patterns.c: 115:             Show();
  2947  001594  ECBD  F01C         	call	_Show	;wreg free
  2948                           
  2949                           ;Patterns.c: 116:             Delay_ms(BT_Tiempo);
  2950  001598  C05A  F003         	movff	_BT_Tiempo,Delay_ms@time	;volatile
  2951  00159C  6A04               	clrf	(Delay_ms@time+1)^0,c
  2952  00159E  EC51  F01D         	call	_Delay_ms	;wreg free
  2953                           
  2954                           ;Patterns.c: 117:         }
  2955  0015A2  2A20               	incf	colorWipeRainbow@i^0,f,c
  2956  0015A4  0ED1               	movlw	209
  2957  0015A6  6420               	cpfsgt	colorWipeRainbow@i^0,c
  2958  0015A8  D7C5               	goto	l4232
  2959  0015AA  0E00               	movlw	0
  2960  0015AC  6E19               	movwf	(colorWipeRainbow@i_253+1)^0,c
  2961  0015AE  0ED2               	movlw	210
  2962  0015B0  6E18               	movwf	colorWipeRainbow@i_253^0,c
  2963  0015B2                     l4254:
  2964  0015B2  0ED2               	movlw	210
  2965  0015B4  6E16               	movwf	??_colorWipeRainbow^0,c
  2966  0015B6  0E00               	movlw	0
  2967  0015B8  6E17               	movwf	(??_colorWipeRainbow+1)^0,c
  2968  0015BA  5018               	movf	colorWipeRainbow@i_253^0,w,c
  2969  0015BC  5E16               	subwf	??_colorWipeRainbow^0,f,c
  2970  0015BE  5019               	movf	(colorWipeRainbow@i_253+1)^0,w,c
  2971  0015C0  5A17               	subwfb	(??_colorWipeRainbow+1)^0,f,c
  2972  0015C2  C016  F017         	movff	??_colorWipeRainbow,??_colorWipeRainbow+1
  2973  0015C6  6A16               	clrf	??_colorWipeRainbow^0,c
  2974  0015C8  C016  F009         	movff	??_colorWipeRainbow,___awdiv@dividend
  2975  0015CC  C017  F00A         	movff	??_colorWipeRainbow+1,___awdiv@dividend+1
  2976  0015D0  0E00               	movlw	0
  2977  0015D2  6E0C               	movwf	(___awdiv@divisor+1)^0,c
  2978  0015D4  0ED2               	movlw	210
  2979  0015D6  6E0B               	movwf	___awdiv@divisor^0,c
  2980  0015D8  EC02  F01C         	call	___awdiv	;wreg free
  2981  0015DC  5025               	movf	colorWipeRainbow@j^0,w,c
  2982  0015DE  2609               	addwf	?___awdiv^0,f,c
  2983  0015E0  0E00               	movlw	0
  2984  0015E2  220A               	addwfc	(?___awdiv+1)^0,f,c
  2985  0015E4  5009               	movf	?___awdiv^0,w,c
  2986  0015E6  6E11               	movwf	Wheel@WheelPos^0,c
  2987  0015E8  6A12               	clrf	(Wheel@WheelPos+1)^0,c
  2988  0015EA  EC15  F01A         	call	_Wheel	;wreg free
  2989  0015EE  6E26               	movwf	colorWipeRainbow@c^0,c
  2990                           
  2991                           ; BSR set to: 0
  2992                           ;Patterns.c: 130:             setPixel(i, *c, *(c+1), *(c+2));
  2993  0015F0  C018  F00D         	movff	colorWipeRainbow@i_253,setPixel@n
  2994  0015F4  C019  F00E         	movff	colorWipeRainbow@i_253+1,setPixel@n+1
  2995  0015F8  5026               	movf	colorWipeRainbow@c^0,w,c
  2996  0015FA  6ED9               	movwf	fsr2l,c
  2997  0015FC  6ADA               	clrf	fsr2h,c
  2998  0015FE  50DF               	movf	indf2,w,c
  2999  001600  6E0F               	movwf	setPixel@red^0,c
  3000  001602  5026               	movf	colorWipeRainbow@c^0,w,c
  3001  001604  6ED9               	movwf	fsr2l,c
  3002  001606  6ADA               	clrf	fsr2h,c
  3003  001608  0E01               	movlw	1
  3004  00160A  26D9               	addwf	fsr2l,f,c
  3005  00160C  50DF               	movf	indf2,w,c
  3006  00160E  6E10               	movwf	setPixel@green^0,c
  3007  001610  5026               	movf	colorWipeRainbow@c^0,w,c
  3008  001612  6ED9               	movwf	fsr2l,c
  3009  001614  6ADA               	clrf	fsr2h,c
  3010  001616  0E02               	movlw	2
  3011  001618  26D9               	addwf	fsr2l,f,c
  3012  00161A  50DF               	movf	indf2,w,c
  3013  00161C  6E11               	movwf	setPixel@blue^0,c
  3014  00161E  EC44  F01C         	call	_setPixel	;wreg free
  3015                           
  3016                           ;Patterns.c: 131:             if(BT_Patron != 1 || BT_rainbow != 1)return;
  3017  001622  045B               	decf	_BT_Patron^0,w,c	;volatile
  3018  001624  A4D8               	btfss	status,2,c
  3019  001626  0012               	return	
  3020  001628  A05C               	btfss	(_BT_rainbow/(0+8))^0,_BT_rainbow& (0+7),c	;volatile
  3021  00162A  0012               	return	
  3022                           
  3023                           ;Patterns.c: 132:             Show();
  3024  00162C  ECBD  F01C         	call	_Show	;wreg free
  3025                           
  3026                           ;Patterns.c: 133:             Delay_ms(BT_Tiempo);
  3027  001630  C05A  F003         	movff	_BT_Tiempo,Delay_ms@time	;volatile
  3028  001634  6A04               	clrf	(Delay_ms@time+1)^0,c
  3029  001636  EC51  F01D         	call	_Delay_ms	;wreg free
  3030                           
  3031                           ;Patterns.c: 134:         }
  3032  00163A  0618               	decf	colorWipeRainbow@i_253^0,f,c
  3033  00163C  A0D8               	btfss	status,0,c
  3034  00163E  0619               	decf	(colorWipeRainbow@i_253+1)^0,f,c
  3035  001640  AE19               	btfss	(colorWipeRainbow@i_253+1)^0,7,c
  3036  001642  D7B7               	goto	l4254
  3037  001644  0E00               	movlw	0
  3038  001646  6E1B               	movwf	(colorWipeRainbow@i_254+1)^0,c
  3039  001648  0E69               	movlw	105
  3040  00164A  6E1A               	movwf	colorWipeRainbow@i_254^0,c
  3041  00164C                     l4276:
  3042                           
  3043                           ;Patterns.c: 136:             setPixel(i,0,0,0);
  3044  00164C  C01A  F00D         	movff	colorWipeRainbow@i_254,setPixel@n
  3045  001650  C01B  F00E         	movff	colorWipeRainbow@i_254+1,setPixel@n+1
  3046  001654  0E00               	movlw	0
  3047  001656  6E0F               	movwf	setPixel@red^0,c
  3048  001658  0E00               	movlw	0
  3049  00165A  6E10               	movwf	setPixel@green^0,c
  3050  00165C  0E00               	movlw	0
  3051  00165E  6E11               	movwf	setPixel@blue^0,c
  3052  001660  EC44  F01C         	call	_setPixel	;wreg free
  3053  001664  501A               	movf	colorWipeRainbow@i_254^0,w,c
  3054  001666  08D2               	sublw	210
  3055  001668  6E0D               	movwf	setPixel@n^0,c
  3056  00166A  501B               	movf	(colorWipeRainbow@i_254+1)^0,w,c
  3057  00166C  A0D8               	btfss	status,0,c
  3058  00166E  2AE8               	incf	wreg,f,c
  3059  001670  0800               	sublw	0
  3060  001672  6E0E               	movwf	(setPixel@n+1)^0,c
  3061  001674  0E00               	movlw	0
  3062  001676  6E0F               	movwf	setPixel@red^0,c
  3063  001678  0E00               	movlw	0
  3064  00167A  6E10               	movwf	setPixel@green^0,c
  3065  00167C  0E00               	movlw	0
  3066  00167E  6E11               	movwf	setPixel@blue^0,c
  3067  001680  EC44  F01C         	call	_setPixel	;wreg free
  3068                           
  3069                           ;Patterns.c: 138:             if(BT_Patron != 1 || BT_rainbow != 1)return;
  3070  001684  045B               	decf	_BT_Patron^0,w,c	;volatile
  3071  001686  A4D8               	btfss	status,2,c
  3072  001688  0012               	return	
  3073  00168A  A05C               	btfss	(_BT_rainbow/(0+8))^0,_BT_rainbow& (0+7),c	;volatile
  3074  00168C  0012               	return	
  3075                           
  3076                           ;Patterns.c: 139:             Show();
  3077  00168E  ECBD  F01C         	call	_Show	;wreg free
  3078                           
  3079                           ;Patterns.c: 140:             Delay_ms(BT_Tiempo);
  3080  001692  C05A  F003         	movff	_BT_Tiempo,Delay_ms@time	;volatile
  3081  001696  6A04               	clrf	(Delay_ms@time+1)^0,c
  3082  001698  EC51  F01D         	call	_Delay_ms	;wreg free
  3083                           
  3084                           ;Patterns.c: 141:         }
  3085  00169C  061A               	decf	colorWipeRainbow@i_254^0,f,c
  3086  00169E  A0D8               	btfss	status,0,c
  3087  0016A0  061B               	decf	(colorWipeRainbow@i_254+1)^0,f,c
  3088  0016A2  AE1B               	btfss	(colorWipeRainbow@i_254+1)^0,7,c
  3089  0016A4  D7D3               	goto	l4276
  3090                           
  3091                           ;Patterns.c: 142:         for (int i = 0; i < NeoNum; i++){
  3092  0016A6  0E00               	movlw	0
  3093  0016A8  6E22               	movwf	(colorWipeRainbow@i_255+1)^0,c
  3094  0016AA  0E00               	movlw	0
  3095  0016AC  6E21               	movwf	colorWipeRainbow@i_255^0,c
  3096  0016AE                     l4296:
  3097  0016AE  5021               	movf	colorWipeRainbow@i_255^0,w,c
  3098  0016B0  6E0A               	movwf	(___awdiv@dividend+1)^0,c
  3099  0016B2  6A09               	clrf	___awdiv@dividend^0,c
  3100  0016B4  0E00               	movlw	0
  3101  0016B6  6E0C               	movwf	(___awdiv@divisor+1)^0,c
  3102  0016B8  0ED2               	movlw	210
  3103  0016BA  6E0B               	movwf	___awdiv@divisor^0,c
  3104  0016BC  EC02  F01C         	call	___awdiv	;wreg free
  3105  0016C0  5025               	movf	colorWipeRainbow@j^0,w,c
  3106  0016C2  2609               	addwf	?___awdiv^0,f,c
  3107  0016C4  0E00               	movlw	0
  3108  0016C6  220A               	addwfc	(?___awdiv+1)^0,f,c
  3109  0016C8  5009               	movf	?___awdiv^0,w,c
  3110  0016CA  6E11               	movwf	Wheel@WheelPos^0,c
  3111  0016CC  6A12               	clrf	(Wheel@WheelPos+1)^0,c
  3112  0016CE  EC15  F01A         	call	_Wheel	;wreg free
  3113  0016D2  6E26               	movwf	colorWipeRainbow@c^0,c
  3114                           
  3115                           ; BSR set to: 0
  3116                           ;Patterns.c: 144:             setPixel(i,*c, *(c+1), *(c+2));
  3117  0016D4  C021  F00D         	movff	colorWipeRainbow@i_255,setPixel@n
  3118  0016D8  C022  F00E         	movff	colorWipeRainbow@i_255+1,setPixel@n+1
  3119  0016DC  5026               	movf	colorWipeRainbow@c^0,w,c
  3120  0016DE  6ED9               	movwf	fsr2l,c
  3121  0016E0  6ADA               	clrf	fsr2h,c
  3122  0016E2  50DF               	movf	indf2,w,c
  3123  0016E4  6E0F               	movwf	setPixel@red^0,c
  3124  0016E6  5026               	movf	colorWipeRainbow@c^0,w,c
  3125  0016E8  6ED9               	movwf	fsr2l,c
  3126  0016EA  6ADA               	clrf	fsr2h,c
  3127  0016EC  0E01               	movlw	1
  3128  0016EE  26D9               	addwf	fsr2l,f,c
  3129  0016F0  50DF               	movf	indf2,w,c
  3130  0016F2  6E10               	movwf	setPixel@green^0,c
  3131  0016F4  5026               	movf	colorWipeRainbow@c^0,w,c
  3132  0016F6  6ED9               	movwf	fsr2l,c
  3133  0016F8  6ADA               	clrf	fsr2h,c
  3134  0016FA  0E02               	movlw	2
  3135  0016FC  26D9               	addwf	fsr2l,f,c
  3136  0016FE  50DF               	movf	indf2,w,c
  3137  001700  6E11               	movwf	setPixel@blue^0,c
  3138  001702  EC44  F01C         	call	_setPixel	;wreg free
  3139  001706  5021               	movf	colorWipeRainbow@i_255^0,w,c
  3140  001708  08D2               	sublw	210
  3141  00170A  6E0D               	movwf	setPixel@n^0,c
  3142  00170C  5022               	movf	(colorWipeRainbow@i_255+1)^0,w,c
  3143  00170E  A0D8               	btfss	status,0,c
  3144  001710  2AE8               	incf	wreg,f,c
  3145  001712  0800               	sublw	0
  3146  001714  6E0E               	movwf	(setPixel@n+1)^0,c
  3147  001716  5026               	movf	colorWipeRainbow@c^0,w,c
  3148  001718  6ED9               	movwf	fsr2l,c
  3149  00171A  6ADA               	clrf	fsr2h,c
  3150  00171C  50DF               	movf	indf2,w,c
  3151  00171E  6E0F               	movwf	setPixel@red^0,c
  3152  001720  5026               	movf	colorWipeRainbow@c^0,w,c
  3153  001722  6ED9               	movwf	fsr2l,c
  3154  001724  6ADA               	clrf	fsr2h,c
  3155  001726  0E01               	movlw	1
  3156  001728  26D9               	addwf	fsr2l,f,c
  3157  00172A  50DF               	movf	indf2,w,c
  3158  00172C  6E10               	movwf	setPixel@green^0,c
  3159  00172E  5026               	movf	colorWipeRainbow@c^0,w,c
  3160  001730  6ED9               	movwf	fsr2l,c
  3161  001732  6ADA               	clrf	fsr2h,c
  3162  001734  0E02               	movlw	2
  3163  001736  26D9               	addwf	fsr2l,f,c
  3164  001738  50DF               	movf	indf2,w,c
  3165  00173A  6E11               	movwf	setPixel@blue^0,c
  3166  00173C  EC44  F01C         	call	_setPixel	;wreg free
  3167                           
  3168                           ;Patterns.c: 146:             if(BT_Patron != 1 || BT_rainbow != 1)return;
  3169  001740  045B               	decf	_BT_Patron^0,w,c	;volatile
  3170  001742  A4D8               	btfss	status,2,c
  3171  001744  0012               	return	
  3172  001746  A05C               	btfss	(_BT_rainbow/(0+8))^0,_BT_rainbow& (0+7),c	;volatile
  3173  001748  0012               	return	
  3174                           
  3175                           ;Patterns.c: 147:             Show();
  3176  00174A  ECBD  F01C         	call	_Show	;wreg free
  3177                           
  3178                           ;Patterns.c: 148:             Delay_ms(BT_Tiempo);
  3179  00174E  C05A  F003         	movff	_BT_Tiempo,Delay_ms@time	;volatile
  3180  001752  6A04               	clrf	(Delay_ms@time+1)^0,c
  3181  001754  EC51  F01D         	call	_Delay_ms	;wreg free
  3182                           
  3183                           ;Patterns.c: 149:         }
  3184  001758  4A21               	infsnz	colorWipeRainbow@i_255^0,f,c
  3185  00175A  2A22               	incf	(colorWipeRainbow@i_255+1)^0,f,c
  3186  00175C  BE22               	btfsc	(colorWipeRainbow@i_255+1)^0,7,c
  3187  00175E  D7A7               	goto	l4296
  3188  001760  5022               	movf	(colorWipeRainbow@i_255+1)^0,w,c
  3189  001762  E104               	bnz	u4470
  3190  001764  0ED2               	movlw	210
  3191  001766  5C21               	subwf	colorWipeRainbow@i_255^0,w,c
  3192  001768  A0D8               	btfss	status,0,c
  3193  00176A  D7A1               	goto	l4296
  3194  00176C                     u4470:
  3195                           
  3196                           ;Patterns.c: 150:         for(int i = 0; i < NeoNum/2; i++){
  3197  00176C  0E00               	movlw	0
  3198  00176E  6E1D               	movwf	(colorWipeRainbow@i_256+1)^0,c
  3199  001770  0E00               	movlw	0
  3200  001772  6E1C               	movwf	colorWipeRainbow@i_256^0,c
  3201  001774                     l4320:
  3202                           
  3203                           ;Patterns.c: 151:             setPixel(i,0,0,0);
  3204  001774  C01C  F00D         	movff	colorWipeRainbow@i_256,setPixel@n
  3205  001778  C01D  F00E         	movff	colorWipeRainbow@i_256+1,setPixel@n+1
  3206  00177C  0E00               	movlw	0
  3207  00177E  6E0F               	movwf	setPixel@red^0,c
  3208  001780  0E00               	movlw	0
  3209  001782  6E10               	movwf	setPixel@green^0,c
  3210  001784  0E00               	movlw	0
  3211  001786  6E11               	movwf	setPixel@blue^0,c
  3212  001788  EC44  F01C         	call	_setPixel	;wreg free
  3213  00178C  501C               	movf	colorWipeRainbow@i_256^0,w,c
  3214  00178E  08D2               	sublw	210
  3215  001790  6E0D               	movwf	setPixel@n^0,c
  3216  001792  501D               	movf	(colorWipeRainbow@i_256+1)^0,w,c
  3217  001794  A0D8               	btfss	status,0,c
  3218  001796  2AE8               	incf	wreg,f,c
  3219  001798  0800               	sublw	0
  3220  00179A  6E0E               	movwf	(setPixel@n+1)^0,c
  3221  00179C  0E00               	movlw	0
  3222  00179E  6E0F               	movwf	setPixel@red^0,c
  3223  0017A0  0E00               	movlw	0
  3224  0017A2  6E10               	movwf	setPixel@green^0,c
  3225  0017A4  0E00               	movlw	0
  3226  0017A6  6E11               	movwf	setPixel@blue^0,c
  3227  0017A8  EC44  F01C         	call	_setPixel	;wreg free
  3228                           
  3229                           ;Patterns.c: 153:             if(BT_Patron != 1 || BT_rainbow != 1)return;
  3230  0017AC  045B               	decf	_BT_Patron^0,w,c	;volatile
  3231  0017AE  A4D8               	btfss	status,2,c
  3232  0017B0  0012               	return	
  3233  0017B2  A05C               	btfss	(_BT_rainbow/(0+8))^0,_BT_rainbow& (0+7),c	;volatile
  3234  0017B4  0012               	return	
  3235                           
  3236                           ;Patterns.c: 154:             Show();
  3237  0017B6  ECBD  F01C         	call	_Show	;wreg free
  3238                           
  3239                           ;Patterns.c: 155:             Delay_ms(BT_Tiempo);
  3240  0017BA  C05A  F003         	movff	_BT_Tiempo,Delay_ms@time	;volatile
  3241  0017BE  6A04               	clrf	(Delay_ms@time+1)^0,c
  3242  0017C0  EC51  F01D         	call	_Delay_ms	;wreg free
  3243                           
  3244                           ;Patterns.c: 156:         }
  3245  0017C4  4A1C               	infsnz	colorWipeRainbow@i_256^0,f,c
  3246  0017C6  2A1D               	incf	(colorWipeRainbow@i_256+1)^0,f,c
  3247  0017C8  BE1D               	btfsc	(colorWipeRainbow@i_256+1)^0,7,c
  3248  0017CA  D7D4               	goto	l4320
  3249  0017CC  501D               	movf	(colorWipeRainbow@i_256+1)^0,w,c
  3250  0017CE  E104               	bnz	u4500
  3251  0017D0  0E69               	movlw	105
  3252  0017D2  5C1C               	subwf	colorWipeRainbow@i_256^0,w,c
  3253  0017D4  A0D8               	btfss	status,0,c
  3254  0017D6  D7CE               	goto	l4320
  3255  0017D8                     u4500:
  3256  0017D8  0E00               	movlw	0
  3257  0017DA  6E24               	movwf	(colorWipeRainbow@i_257+1)^0,c
  3258  0017DC  0E69               	movlw	105
  3259  0017DE  6E23               	movwf	colorWipeRainbow@i_257^0,c
  3260  0017E0                     l4340:
  3261  0017E0  5023               	movf	colorWipeRainbow@i_257^0,w,c
  3262  0017E2  6E0A               	movwf	(___awdiv@dividend+1)^0,c
  3263  0017E4  6A09               	clrf	___awdiv@dividend^0,c
  3264  0017E6  0E00               	movlw	0
  3265  0017E8  6E0C               	movwf	(___awdiv@divisor+1)^0,c
  3266  0017EA  0ED2               	movlw	210
  3267  0017EC  6E0B               	movwf	___awdiv@divisor^0,c
  3268  0017EE  EC02  F01C         	call	___awdiv	;wreg free
  3269  0017F2  5025               	movf	colorWipeRainbow@j^0,w,c
  3270  0017F4  2609               	addwf	?___awdiv^0,f,c
  3271  0017F6  0E00               	movlw	0
  3272  0017F8  220A               	addwfc	(?___awdiv+1)^0,f,c
  3273  0017FA  5009               	movf	?___awdiv^0,w,c
  3274  0017FC  6E11               	movwf	Wheel@WheelPos^0,c
  3275  0017FE  6A12               	clrf	(Wheel@WheelPos+1)^0,c
  3276  001800  EC15  F01A         	call	_Wheel	;wreg free
  3277  001804  6E26               	movwf	colorWipeRainbow@c^0,c
  3278                           
  3279                           ; BSR set to: 0
  3280                           ;Patterns.c: 159:             setPixel(i,*c, *(c+1), *(c+2));
  3281  001806  C023  F00D         	movff	colorWipeRainbow@i_257,setPixel@n
  3282  00180A  C024  F00E         	movff	colorWipeRainbow@i_257+1,setPixel@n+1
  3283  00180E  5026               	movf	colorWipeRainbow@c^0,w,c
  3284  001810  6ED9               	movwf	fsr2l,c
  3285  001812  6ADA               	clrf	fsr2h,c
  3286  001814  50DF               	movf	indf2,w,c
  3287  001816  6E0F               	movwf	setPixel@red^0,c
  3288  001818  5026               	movf	colorWipeRainbow@c^0,w,c
  3289  00181A  6ED9               	movwf	fsr2l,c
  3290  00181C  6ADA               	clrf	fsr2h,c
  3291  00181E  0E01               	movlw	1
  3292  001820  26D9               	addwf	fsr2l,f,c
  3293  001822  50DF               	movf	indf2,w,c
  3294  001824  6E10               	movwf	setPixel@green^0,c
  3295  001826  5026               	movf	colorWipeRainbow@c^0,w,c
  3296  001828  6ED9               	movwf	fsr2l,c
  3297  00182A  6ADA               	clrf	fsr2h,c
  3298  00182C  0E02               	movlw	2
  3299  00182E  26D9               	addwf	fsr2l,f,c
  3300  001830  50DF               	movf	indf2,w,c
  3301  001832  6E11               	movwf	setPixel@blue^0,c
  3302  001834  EC44  F01C         	call	_setPixel	;wreg free
  3303  001838  5023               	movf	colorWipeRainbow@i_257^0,w,c
  3304  00183A  08D2               	sublw	210
  3305  00183C  6E0D               	movwf	setPixel@n^0,c
  3306  00183E  5024               	movf	(colorWipeRainbow@i_257+1)^0,w,c
  3307  001840  A0D8               	btfss	status,0,c
  3308  001842  2AE8               	incf	wreg,f,c
  3309  001844  0800               	sublw	0
  3310  001846  6E0E               	movwf	(setPixel@n+1)^0,c
  3311  001848  5026               	movf	colorWipeRainbow@c^0,w,c
  3312  00184A  6ED9               	movwf	fsr2l,c
  3313  00184C  6ADA               	clrf	fsr2h,c
  3314  00184E  50DF               	movf	indf2,w,c
  3315  001850  6E0F               	movwf	setPixel@red^0,c
  3316  001852  5026               	movf	colorWipeRainbow@c^0,w,c
  3317  001854  6ED9               	movwf	fsr2l,c
  3318  001856  6ADA               	clrf	fsr2h,c
  3319  001858  0E01               	movlw	1
  3320  00185A  26D9               	addwf	fsr2l,f,c
  3321  00185C  50DF               	movf	indf2,w,c
  3322  00185E  6E10               	movwf	setPixel@green^0,c
  3323  001860  5026               	movf	colorWipeRainbow@c^0,w,c
  3324  001862  6ED9               	movwf	fsr2l,c
  3325  001864  6ADA               	clrf	fsr2h,c
  3326  001866  0E02               	movlw	2
  3327  001868  26D9               	addwf	fsr2l,f,c
  3328  00186A  50DF               	movf	indf2,w,c
  3329  00186C  6E11               	movwf	setPixel@blue^0,c
  3330  00186E  EC44  F01C         	call	_setPixel	;wreg free
  3331                           
  3332                           ;Patterns.c: 161:             if(BT_Patron != 1 || BT_rainbow != 1)return;
  3333  001872  045B               	decf	_BT_Patron^0,w,c	;volatile
  3334  001874  A4D8               	btfss	status,2,c
  3335  001876  0012               	return	
  3336  001878  A05C               	btfss	(_BT_rainbow/(0+8))^0,_BT_rainbow& (0+7),c	;volatile
  3337  00187A  0012               	return	
  3338                           
  3339                           ;Patterns.c: 162:             Show();
  3340  00187C  ECBD  F01C         	call	_Show	;wreg free
  3341                           
  3342                           ;Patterns.c: 163:             Delay_ms(BT_Tiempo);
  3343  001880  C05A  F003         	movff	_BT_Tiempo,Delay_ms@time	;volatile
  3344  001884  6A04               	clrf	(Delay_ms@time+1)^0,c
  3345  001886  EC51  F01D         	call	_Delay_ms	;wreg free
  3346                           
  3347                           ;Patterns.c: 164:         }
  3348  00188A  0623               	decf	colorWipeRainbow@i_257^0,f,c
  3349  00188C  A0D8               	btfss	status,0,c
  3350  00188E  0624               	decf	(colorWipeRainbow@i_257+1)^0,f,c
  3351  001890  AE24               	btfss	(colorWipeRainbow@i_257+1)^0,7,c
  3352  001892  D7A6               	goto	l4340
  3353  001894  0E00               	movlw	0
  3354  001896  6E1F               	movwf	(colorWipeRainbow@i_258+1)^0,c
  3355  001898  0E69               	movlw	105
  3356  00189A  6E1E               	movwf	colorWipeRainbow@i_258^0,c
  3357  00189C                     l4360:
  3358  00189C  BE1F               	btfsc	(colorWipeRainbow@i_258+1)^0,7,c
  3359  00189E  D02C               	goto	l4378
  3360  0018A0  501E               	movf	colorWipeRainbow@i_258^0,w,c
  3361  0018A2  08D2               	sublw	210
  3362  0018A4  6E0D               	movwf	setPixel@n^0,c
  3363  0018A6  501F               	movf	(colorWipeRainbow@i_258+1)^0,w,c
  3364  0018A8  A0D8               	btfss	status,0,c
  3365  0018AA  2AE8               	incf	wreg,f,c
  3366  0018AC  0800               	sublw	0
  3367  0018AE  6E0E               	movwf	(setPixel@n+1)^0,c
  3368  0018B0  0E00               	movlw	0
  3369  0018B2  6E0F               	movwf	setPixel@red^0,c
  3370  0018B4  0E00               	movlw	0
  3371  0018B6  6E10               	movwf	setPixel@green^0,c
  3372  0018B8  0E00               	movlw	0
  3373  0018BA  6E11               	movwf	setPixel@blue^0,c
  3374  0018BC  EC44  F01C         	call	_setPixel	;wreg free
  3375                           
  3376                           ;Patterns.c: 167:             setPixel(i,0,0,0);
  3377  0018C0  C01E  F00D         	movff	colorWipeRainbow@i_258,setPixel@n
  3378  0018C4  C01F  F00E         	movff	colorWipeRainbow@i_258+1,setPixel@n+1
  3379  0018C8  0E00               	movlw	0
  3380  0018CA  6E0F               	movwf	setPixel@red^0,c
  3381  0018CC  0E00               	movlw	0
  3382  0018CE  6E10               	movwf	setPixel@green^0,c
  3383  0018D0  0E00               	movlw	0
  3384  0018D2  6E11               	movwf	setPixel@blue^0,c
  3385  0018D4  EC44  F01C         	call	_setPixel	;wreg free
  3386                           
  3387                           ;Patterns.c: 168:             if(BT_Patron != 1 || BT_rainbow != 1)return;
  3388  0018D8  045B               	decf	_BT_Patron^0,w,c	;volatile
  3389  0018DA  A4D8               	btfss	status,2,c
  3390  0018DC  0012               	return	
  3391  0018DE  A05C               	btfss	(_BT_rainbow/(0+8))^0,_BT_rainbow& (0+7),c	;volatile
  3392  0018E0  0012               	return	
  3393                           
  3394                           ;Patterns.c: 169:             Show();
  3395  0018E2  ECBD  F01C         	call	_Show	;wreg free
  3396                           
  3397                           ;Patterns.c: 170:             Delay_ms(BT_Tiempo);
  3398  0018E6  C05A  F003         	movff	_BT_Tiempo,Delay_ms@time	;volatile
  3399  0018EA  6A04               	clrf	(Delay_ms@time+1)^0,c
  3400  0018EC  EC51  F01D         	call	_Delay_ms	;wreg free
  3401                           
  3402                           ;Patterns.c: 171:         }
  3403  0018F0  061E               	decf	colorWipeRainbow@i_258^0,f,c
  3404  0018F2  A0D8               	btfss	status,0,c
  3405  0018F4  061F               	decf	(colorWipeRainbow@i_258+1)^0,f,c
  3406  0018F6  D7D2               	goto	l4360
  3407  0018F8                     l4378:
  3408                           
  3409                           ;Patterns.c: 172:     }
  3410  0018F8  2A25               	incf	colorWipeRainbow@j^0,f,c
  3411  0018FA  2825               	incf	colorWipeRainbow@j^0,w,c
  3412  0018FC  B4D8               	btfsc	status,2,c
  3413  0018FE  0012               	return	
  3414  001900  D617               	goto	l4226
  3415  001902                     __end_of_colorWipeRainbow:
  3416                           	opt callstack 0
  3417                           
  3418 ;; *************** function _colorWipe *****************
  3419 ;; Defined at:
  3420 ;;		line 47 in file "Patterns.c"
  3421 ;; Parameters:    Size  Location     Type
  3422 ;;		None
  3423 ;; Auto vars:     Size  Location     Type
  3424 ;;  i               2   33[COMRAM] int 
  3425 ;;  i               2   31[COMRAM] int 
  3426 ;;  i               2   29[COMRAM] int 
  3427 ;;  i               2   27[COMRAM] int 
  3428 ;;  i               2   23[COMRAM] int 
  3429 ;;  i               2   21[COMRAM] int 
  3430 ;;  i               1   26[COMRAM] unsigned char 
  3431 ;;  i               1   25[COMRAM] unsigned char 
  3432 ;; Return value:  Size  Location     Type
  3433 ;;                  1    wreg      void 
  3434 ;; Registers used:
  3435 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+1, btemp+2, b
      +temp+3, btemp+4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+12, btemp+13, btemp+14, btemp+15
      +, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, btemp+24, btemp+25, btemp+26, btemp+27
      +, btemp+28, btemp+29, btemp+30, btemp+31, tosl, structret, tblptrl, tblptrh, tblptru, prodl, prodh, bsr, cstack
  3436 ;; Tracked objects:
  3437 ;;		On entry : 0/0
  3438 ;;		On exit  : 0/0
  3439 ;;		Unchanged: 0/0
  3440 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3441 ;;      Params:         0       0       0       0       0       0       0       0       0
  3442 ;;      Locals:        14       0       0       0       0       0       0       0       0
  3443 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3444 ;;      Totals:        14       0       0       0       0       0       0       0       0
  3445 ;;Total ram usage:       14 bytes
  3446 ;; Hardware stack levels used:    1
  3447 ;; Hardware stack levels required when called:    4
  3448 ;; This function calls:
  3449 ;;		_Delay_ms
  3450 ;;		_Show
  3451 ;;		_Time_Check
  3452 ;;		_setPixel
  3453 ;; This function is called by:
  3454 ;;		_main
  3455 ;; This function uses a non-reentrant model
  3456 ;;
  3457                           
  3458                           	psect	text11
  3459  001F12                     __ptext11:
  3460                           	opt callstack 0
  3461  001F12                     _colorWipe:
  3462                           	opt callstack 26
  3463                           
  3464                           ;Patterns.c: 48:     Time_Check(10);
  3465                           
  3466                           ;incstack = 0
  3467  001F12  0E00               	movlw	0
  3468  001F14  6E04               	movwf	(Time_Check@Time+1)^0,c
  3469  001F16  0E0A               	movlw	10
  3470  001F18  6E03               	movwf	Time_Check@Time^0,c
  3471  001F1A  ECFC  F01D         	call	_Time_Check	;wreg free
  3472                           
  3473                           ;Patterns.c: 49:     for(unsigned char i=0; i<NeoNum; i++) {
  3474  001F1E  0E00               	movlw	0
  3475  001F20  6E1A               	movwf	colorWipe@i^0,c
  3476  001F22                     l4390:
  3477                           
  3478                           ;Patterns.c: 50:         setPixel(i, BT_RGB[0], BT_RGB[1], BT_RGB[2]);
  3479  001F22  C01A  F00D         	movff	colorWipe@i,setPixel@n
  3480  001F26  6A0E               	clrf	(setPixel@n+1)^0,c
  3481  001F28  C057  F00F         	movff	_BT_RGB,setPixel@red	;volatile
  3482  001F2C  C058  F010         	movff	_BT_RGB+1,setPixel@green	;volatile
  3483  001F30  C059  F011         	movff	_BT_RGB+2,setPixel@blue	;volatile
  3484  001F34  EC44  F01C         	call	_setPixel	;wreg free
  3485                           
  3486                           ;Patterns.c: 52:         if(BT_Patron != 1|| BT_rainbow != 0)return;
  3487  001F38  045B               	decf	_BT_Patron^0,w,c	;volatile
  3488  001F3A  A4D8               	btfss	status,2,c
  3489  001F3C  0012               	return	
  3490  001F3E  B05C               	btfsc	(_BT_rainbow/(0+8))^0,_BT_rainbow& (0+7),c	;volatile
  3491  001F40  0012               	return	
  3492                           
  3493                           ;Patterns.c: 53:         Show();
  3494  001F42  ECBD  F01C         	call	_Show	;wreg free
  3495                           
  3496                           ;Patterns.c: 54:         Delay_ms(BT_Tiempo);
  3497  001F46  C05A  F003         	movff	_BT_Tiempo,Delay_ms@time	;volatile
  3498  001F4A  6A04               	clrf	(Delay_ms@time+1)^0,c
  3499  001F4C  EC51  F01D         	call	_Delay_ms	;wreg free
  3500                           
  3501                           ;Patterns.c: 55:     }
  3502  001F50  2A1A               	incf	colorWipe@i^0,f,c
  3503  001F52  0ED1               	movlw	209
  3504  001F54  641A               	cpfsgt	colorWipe@i^0,c
  3505  001F56  D7E5               	goto	l4390
  3506                           
  3507                           ;Patterns.c: 56:     for(unsigned char i=0; i<NeoNum; i++) {
  3508  001F58  0E00               	movlw	0
  3509  001F5A  6E1B               	movwf	colorWipe@i_242^0,c
  3510  001F5C                     l4410:
  3511                           
  3512                           ;Patterns.c: 58:         setPixel(i,0,0,0);
  3513  001F5C  C01B  F00D         	movff	colorWipe@i_242,setPixel@n
  3514  001F60  6A0E               	clrf	(setPixel@n+1)^0,c
  3515  001F62  0E00               	movlw	0
  3516  001F64  6E0F               	movwf	setPixel@red^0,c
  3517  001F66  0E00               	movlw	0
  3518  001F68  6E10               	movwf	setPixel@green^0,c
  3519  001F6A  0E00               	movlw	0
  3520  001F6C  6E11               	movwf	setPixel@blue^0,c
  3521  001F6E  EC44  F01C         	call	_setPixel	;wreg free
  3522                           
  3523                           ;Patterns.c: 59:         if(BT_Patron != 1|| BT_rainbow != 0)return;
  3524  001F72  045B               	decf	_BT_Patron^0,w,c	;volatile
  3525  001F74  A4D8               	btfss	status,2,c
  3526  001F76  0012               	return	
  3527  001F78  B05C               	btfsc	(_BT_rainbow/(0+8))^0,_BT_rainbow& (0+7),c	;volatile
  3528  001F7A  0012               	return	
  3529                           
  3530                           ;Patterns.c: 60:         Show();
  3531  001F7C  ECBD  F01C         	call	_Show	;wreg free
  3532                           
  3533                           ;Patterns.c: 61:         Delay_ms(BT_Tiempo);
  3534  001F80  C05A  F003         	movff	_BT_Tiempo,Delay_ms@time	;volatile
  3535  001F84  6A04               	clrf	(Delay_ms@time+1)^0,c
  3536  001F86  EC51  F01D         	call	_Delay_ms	;wreg free
  3537                           
  3538                           ;Patterns.c: 62:     }
  3539  001F8A  2A1B               	incf	colorWipe@i_242^0,f,c
  3540  001F8C  0ED1               	movlw	209
  3541  001F8E  641B               	cpfsgt	colorWipe@i_242^0,c
  3542  001F90  D7E5               	goto	l4410
  3543  001F92  0E00               	movlw	0
  3544  001F94  6E17               	movwf	(colorWipe@i_243+1)^0,c
  3545  001F96  0ED2               	movlw	210
  3546  001F98  6E16               	movwf	colorWipe@i_243^0,c
  3547  001F9A                     l4430:
  3548                           
  3549                           ;Patterns.c: 64:         setPixel(i, BT_RGB[0], BT_RGB[1], BT_RGB[2]);
  3550  001F9A  C016  F00D         	movff	colorWipe@i_243,setPixel@n
  3551  001F9E  C017  F00E         	movff	colorWipe@i_243+1,setPixel@n+1
  3552  001FA2  C057  F00F         	movff	_BT_RGB,setPixel@red	;volatile
  3553  001FA6  C058  F010         	movff	_BT_RGB+1,setPixel@green	;volatile
  3554  001FAA  C059  F011         	movff	_BT_RGB+2,setPixel@blue	;volatile
  3555  001FAE  EC44  F01C         	call	_setPixel	;wreg free
  3556                           
  3557                           ;Patterns.c: 66:         if(BT_Patron != 1|| BT_rainbow != 0)return;
  3558  001FB2  045B               	decf	_BT_Patron^0,w,c	;volatile
  3559  001FB4  A4D8               	btfss	status,2,c
  3560  001FB6  0012               	return	
  3561  001FB8  B05C               	btfsc	(_BT_rainbow/(0+8))^0,_BT_rainbow& (0+7),c	;volatile
  3562  001FBA  0012               	return	
  3563                           
  3564                           ;Patterns.c: 67:         Show();
  3565  001FBC  ECBD  F01C         	call	_Show	;wreg free
  3566                           
  3567                           ;Patterns.c: 68:         Delay_ms(BT_Tiempo);
  3568  001FC0  C05A  F003         	movff	_BT_Tiempo,Delay_ms@time	;volatile
  3569  001FC4  6A04               	clrf	(Delay_ms@time+1)^0,c
  3570  001FC6  EC51  F01D         	call	_Delay_ms	;wreg free
  3571                           
  3572                           ;Patterns.c: 69:     }
  3573  001FCA  0616               	decf	colorWipe@i_243^0,f,c
  3574  001FCC  A0D8               	btfss	status,0,c
  3575  001FCE  0617               	decf	(colorWipe@i_243+1)^0,f,c
  3576  001FD0  AE17               	btfss	(colorWipe@i_243+1)^0,7,c
  3577  001FD2  D7E3               	goto	l4430
  3578  001FD4  0E00               	movlw	0
  3579  001FD6  6E19               	movwf	(colorWipe@i_244+1)^0,c
  3580  001FD8  0ED2               	movlw	210
  3581  001FDA  6E18               	movwf	colorWipe@i_244^0,c
  3582  001FDC                     l4450:
  3583                           
  3584                           ;Patterns.c: 72:         setPixel(i, 0, 0, 0);
  3585  001FDC  C018  F00D         	movff	colorWipe@i_244,setPixel@n
  3586  001FE0  C019  F00E         	movff	colorWipe@i_244+1,setPixel@n+1
  3587  001FE4  0E00               	movlw	0
  3588  001FE6  6E0F               	movwf	setPixel@red^0,c
  3589  001FE8  0E00               	movlw	0
  3590  001FEA  6E10               	movwf	setPixel@green^0,c
  3591  001FEC  0E00               	movlw	0
  3592  001FEE  6E11               	movwf	setPixel@blue^0,c
  3593  001FF0  EC44  F01C         	call	_setPixel	;wreg free
  3594                           
  3595                           ;Patterns.c: 73:         if(BT_Patron != 1|| BT_rainbow != 0)return;
  3596  001FF4  045B               	decf	_BT_Patron^0,w,c	;volatile
  3597  001FF6  A4D8               	btfss	status,2,c
  3598  001FF8  0012               	return	
  3599  001FFA  B05C               	btfsc	(_BT_rainbow/(0+8))^0,_BT_rainbow& (0+7),c	;volatile
  3600  001FFC  0012               	return	
  3601                           
  3602                           ;Patterns.c: 74:         Show();
  3603  001FFE  ECBD  F01C         	call	_Show	;wreg free
  3604                           
  3605                           ;Patterns.c: 75:         Delay_ms(BT_Tiempo);
  3606  002002  C05A  F003         	movff	_BT_Tiempo,Delay_ms@time	;volatile
  3607  002006  6A04               	clrf	(Delay_ms@time+1)^0,c
  3608  002008  EC51  F01D         	call	_Delay_ms	;wreg free
  3609                           
  3610                           ;Patterns.c: 76:     }
  3611  00200C  0618               	decf	colorWipe@i_244^0,f,c
  3612  00200E  A0D8               	btfss	status,0,c
  3613  002010  0619               	decf	(colorWipe@i_244+1)^0,f,c
  3614  002012  AE19               	btfss	(colorWipe@i_244+1)^0,7,c
  3615  002014  D7E3               	goto	l4450
  3616                           
  3617                           ;Patterns.c: 77:     for (int i = 0; i < NeoNum; i++) {
  3618  002016  0E00               	movlw	0
  3619  002018  6E1D               	movwf	(colorWipe@i_245+1)^0,c
  3620  00201A  0E00               	movlw	0
  3621  00201C  6E1C               	movwf	colorWipe@i_245^0,c
  3622  00201E                     l4470:
  3623                           
  3624                           ;Patterns.c: 78:         setPixel(i,BT_RGB[0], BT_RGB[1], BT_RGB[2]);
  3625  00201E  C01C  F00D         	movff	colorWipe@i_245,setPixel@n
  3626  002022  C01D  F00E         	movff	colorWipe@i_245+1,setPixel@n+1
  3627  002026  C057  F00F         	movff	_BT_RGB,setPixel@red	;volatile
  3628  00202A  C058  F010         	movff	_BT_RGB+1,setPixel@green	;volatile
  3629  00202E  C059  F011         	movff	_BT_RGB+2,setPixel@blue	;volatile
  3630  002032  EC44  F01C         	call	_setPixel	;wreg free
  3631  002036  501C               	movf	colorWipe@i_245^0,w,c
  3632  002038  08D2               	sublw	210
  3633  00203A  6E0D               	movwf	setPixel@n^0,c
  3634  00203C  501D               	movf	(colorWipe@i_245+1)^0,w,c
  3635  00203E  A0D8               	btfss	status,0,c
  3636  002040  2AE8               	incf	wreg,f,c
  3637  002042  0800               	sublw	0
  3638  002044  6E0E               	movwf	(setPixel@n+1)^0,c
  3639  002046  C057  F00F         	movff	_BT_RGB,setPixel@red	;volatile
  3640  00204A  C058  F010         	movff	_BT_RGB+1,setPixel@green	;volatile
  3641  00204E  C059  F011         	movff	_BT_RGB+2,setPixel@blue	;volatile
  3642  002052  EC44  F01C         	call	_setPixel	;wreg free
  3643                           
  3644                           ;Patterns.c: 80:         if(BT_Patron != 1|| BT_rainbow != 0)return;
  3645  002056  045B               	decf	_BT_Patron^0,w,c	;volatile
  3646  002058  A4D8               	btfss	status,2,c
  3647  00205A  0012               	return	
  3648  00205C  B05C               	btfsc	(_BT_rainbow/(0+8))^0,_BT_rainbow& (0+7),c	;volatile
  3649  00205E  0012               	return	
  3650                           
  3651                           ;Patterns.c: 81:         Show();
  3652  002060  ECBD  F01C         	call	_Show	;wreg free
  3653                           
  3654                           ;Patterns.c: 82:         Delay_ms(BT_Tiempo);
  3655  002064  C05A  F003         	movff	_BT_Tiempo,Delay_ms@time	;volatile
  3656  002068  6A04               	clrf	(Delay_ms@time+1)^0,c
  3657  00206A  EC51  F01D         	call	_Delay_ms	;wreg free
  3658                           
  3659                           ;Patterns.c: 83:     }
  3660  00206E  4A1C               	infsnz	colorWipe@i_245^0,f,c
  3661  002070  2A1D               	incf	(colorWipe@i_245+1)^0,f,c
  3662  002072  BE1D               	btfsc	(colorWipe@i_245+1)^0,7,c
  3663  002074  D7D4               	goto	l4470
  3664  002076  501D               	movf	(colorWipe@i_245+1)^0,w,c
  3665  002078  E104               	bnz	u4720
  3666  00207A  0ED2               	movlw	210
  3667  00207C  5C1C               	subwf	colorWipe@i_245^0,w,c
  3668  00207E  A0D8               	btfss	status,0,c
  3669  002080  D7CE               	goto	l4470
  3670  002082                     u4720:
  3671                           
  3672                           ;Patterns.c: 84:     for(int i = 0; i < NeoNum; i++){
  3673  002082  0E00               	movlw	0
  3674  002084  6E1F               	movwf	(colorWipe@i_246+1)^0,c
  3675  002086  0E00               	movlw	0
  3676  002088  6E1E               	movwf	colorWipe@i_246^0,c
  3677  00208A                     l4490:
  3678                           
  3679                           ;Patterns.c: 85:         setPixel(i,0,0,0);
  3680  00208A  C01E  F00D         	movff	colorWipe@i_246,setPixel@n
  3681  00208E  C01F  F00E         	movff	colorWipe@i_246+1,setPixel@n+1
  3682  002092  0E00               	movlw	0
  3683  002094  6E0F               	movwf	setPixel@red^0,c
  3684  002096  0E00               	movlw	0
  3685  002098  6E10               	movwf	setPixel@green^0,c
  3686  00209A  0E00               	movlw	0
  3687  00209C  6E11               	movwf	setPixel@blue^0,c
  3688  00209E  EC44  F01C         	call	_setPixel	;wreg free
  3689  0020A2  501E               	movf	colorWipe@i_246^0,w,c
  3690  0020A4  08D2               	sublw	210
  3691  0020A6  6E0D               	movwf	setPixel@n^0,c
  3692  0020A8  501F               	movf	(colorWipe@i_246+1)^0,w,c
  3693  0020AA  A0D8               	btfss	status,0,c
  3694  0020AC  2AE8               	incf	wreg,f,c
  3695  0020AE  0800               	sublw	0
  3696  0020B0  6E0E               	movwf	(setPixel@n+1)^0,c
  3697  0020B2  0E00               	movlw	0
  3698  0020B4  6E0F               	movwf	setPixel@red^0,c
  3699  0020B6  0E00               	movlw	0
  3700  0020B8  6E10               	movwf	setPixel@green^0,c
  3701  0020BA  0E00               	movlw	0
  3702  0020BC  6E11               	movwf	setPixel@blue^0,c
  3703  0020BE  EC44  F01C         	call	_setPixel	;wreg free
  3704                           
  3705                           ;Patterns.c: 87:         if(BT_Patron != 1|| BT_rainbow != 0)return;
  3706  0020C2  045B               	decf	_BT_Patron^0,w,c	;volatile
  3707  0020C4  A4D8               	btfss	status,2,c
  3708  0020C6  0012               	return	
  3709  0020C8  B05C               	btfsc	(_BT_rainbow/(0+8))^0,_BT_rainbow& (0+7),c	;volatile
  3710  0020CA  0012               	return	
  3711                           
  3712                           ;Patterns.c: 88:         Show();
  3713  0020CC  ECBD  F01C         	call	_Show	;wreg free
  3714                           
  3715                           ;Patterns.c: 89:         Delay_ms(BT_Tiempo);
  3716  0020D0  C05A  F003         	movff	_BT_Tiempo,Delay_ms@time	;volatile
  3717  0020D4  6A04               	clrf	(Delay_ms@time+1)^0,c
  3718  0020D6  EC51  F01D         	call	_Delay_ms	;wreg free
  3719                           
  3720                           ;Patterns.c: 90:     }
  3721  0020DA  4A1E               	infsnz	colorWipe@i_246^0,f,c
  3722  0020DC  2A1F               	incf	(colorWipe@i_246+1)^0,f,c
  3723  0020DE  BE1F               	btfsc	(colorWipe@i_246+1)^0,7,c
  3724  0020E0  D7D4               	goto	l4490
  3725  0020E2  501F               	movf	(colorWipe@i_246+1)^0,w,c
  3726  0020E4  E104               	bnz	u4750
  3727  0020E6  0ED2               	movlw	210
  3728  0020E8  5C1E               	subwf	colorWipe@i_246^0,w,c
  3729  0020EA  A0D8               	btfss	status,0,c
  3730  0020EC  D7CE               	goto	l4490
  3731  0020EE                     u4750:
  3732  0020EE  0E00               	movlw	0
  3733  0020F0  6E21               	movwf	(colorWipe@i_247+1)^0,c
  3734  0020F2  0E69               	movlw	105
  3735  0020F4  6E20               	movwf	colorWipe@i_247^0,c
  3736  0020F6                     l4510:
  3737  0020F6  5020               	movf	colorWipe@i_247^0,w,c
  3738  0020F8  08D2               	sublw	210
  3739  0020FA  6E0D               	movwf	setPixel@n^0,c
  3740  0020FC  5021               	movf	(colorWipe@i_247+1)^0,w,c
  3741  0020FE  A0D8               	btfss	status,0,c
  3742  002100  2AE8               	incf	wreg,f,c
  3743  002102  0800               	sublw	0
  3744  002104  6E0E               	movwf	(setPixel@n+1)^0,c
  3745  002106  C057  F00F         	movff	_BT_RGB,setPixel@red	;volatile
  3746  00210A  C058  F010         	movff	_BT_RGB+1,setPixel@green	;volatile
  3747  00210E  C059  F011         	movff	_BT_RGB+2,setPixel@blue	;volatile
  3748  002112  EC44  F01C         	call	_setPixel	;wreg free
  3749                           
  3750                           ;Patterns.c: 93:         setPixel(i,BT_RGB[0], BT_RGB[1], BT_RGB[2]);
  3751  002116  C020  F00D         	movff	colorWipe@i_247,setPixel@n
  3752  00211A  C021  F00E         	movff	colorWipe@i_247+1,setPixel@n+1
  3753  00211E  C057  F00F         	movff	_BT_RGB,setPixel@red	;volatile
  3754  002122  C058  F010         	movff	_BT_RGB+1,setPixel@green	;volatile
  3755  002126  C059  F011         	movff	_BT_RGB+2,setPixel@blue	;volatile
  3756  00212A  EC44  F01C         	call	_setPixel	;wreg free
  3757                           
  3758                           ;Patterns.c: 94:         if(BT_Patron != 1|| BT_rainbow != 0)return;
  3759  00212E  045B               	decf	_BT_Patron^0,w,c	;volatile
  3760  002130  A4D8               	btfss	status,2,c
  3761  002132  0012               	return	
  3762  002134  B05C               	btfsc	(_BT_rainbow/(0+8))^0,_BT_rainbow& (0+7),c	;volatile
  3763  002136  0012               	return	
  3764                           
  3765                           ;Patterns.c: 95:         Show();
  3766  002138  ECBD  F01C         	call	_Show	;wreg free
  3767                           
  3768                           ;Patterns.c: 96:         Delay_ms(BT_Tiempo);
  3769  00213C  C05A  F003         	movff	_BT_Tiempo,Delay_ms@time	;volatile
  3770  002140  6A04               	clrf	(Delay_ms@time+1)^0,c
  3771  002142  EC51  F01D         	call	_Delay_ms	;wreg free
  3772                           
  3773                           ;Patterns.c: 97:     }
  3774  002146  0620               	decf	colorWipe@i_247^0,f,c
  3775  002148  A0D8               	btfss	status,0,c
  3776  00214A  0621               	decf	(colorWipe@i_247+1)^0,f,c
  3777  00214C  AE21               	btfss	(colorWipe@i_247+1)^0,7,c
  3778  00214E  D7D3               	goto	l4510
  3779  002150  0E00               	movlw	0
  3780  002152  6E23               	movwf	(colorWipe@i_248+1)^0,c
  3781  002154  0E69               	movlw	105
  3782  002156  6E22               	movwf	colorWipe@i_248^0,c
  3783  002158                     l4530:
  3784  002158  5022               	movf	colorWipe@i_248^0,w,c
  3785  00215A  08D2               	sublw	210
  3786  00215C  6E0D               	movwf	setPixel@n^0,c
  3787  00215E  5023               	movf	(colorWipe@i_248+1)^0,w,c
  3788  002160  A0D8               	btfss	status,0,c
  3789  002162  2AE8               	incf	wreg,f,c
  3790  002164  0800               	sublw	0
  3791  002166  6E0E               	movwf	(setPixel@n+1)^0,c
  3792  002168  0E00               	movlw	0
  3793  00216A  6E0F               	movwf	setPixel@red^0,c
  3794  00216C  0E00               	movlw	0
  3795  00216E  6E10               	movwf	setPixel@green^0,c
  3796  002170  0E00               	movlw	0
  3797  002172  6E11               	movwf	setPixel@blue^0,c
  3798  002174  EC44  F01C         	call	_setPixel	;wreg free
  3799                           
  3800                           ;Patterns.c: 100:         setPixel(i,0,0,0);
  3801  002178  C022  F00D         	movff	colorWipe@i_248,setPixel@n
  3802  00217C  C023  F00E         	movff	colorWipe@i_248+1,setPixel@n+1
  3803  002180  0E00               	movlw	0
  3804  002182  6E0F               	movwf	setPixel@red^0,c
  3805  002184  0E00               	movlw	0
  3806  002186  6E10               	movwf	setPixel@green^0,c
  3807  002188  0E00               	movlw	0
  3808  00218A  6E11               	movwf	setPixel@blue^0,c
  3809  00218C  EC44  F01C         	call	_setPixel	;wreg free
  3810                           
  3811                           ;Patterns.c: 101:         if(BT_Patron != 1|| BT_rainbow != 0)return;
  3812  002190  045B               	decf	_BT_Patron^0,w,c	;volatile
  3813  002192  A4D8               	btfss	status,2,c
  3814  002194  0012               	return	
  3815  002196  B05C               	btfsc	(_BT_rainbow/(0+8))^0,_BT_rainbow& (0+7),c	;volatile
  3816  002198  0012               	return	
  3817                           
  3818                           ;Patterns.c: 102:         Show();
  3819  00219A  ECBD  F01C         	call	_Show	;wreg free
  3820                           
  3821                           ;Patterns.c: 103:         Delay_ms(BT_Tiempo);
  3822  00219E  C05A  F003         	movff	_BT_Tiempo,Delay_ms@time	;volatile
  3823  0021A2  6A04               	clrf	(Delay_ms@time+1)^0,c
  3824  0021A4  EC51  F01D         	call	_Delay_ms	;wreg free
  3825                           
  3826                           ;Patterns.c: 104:     }
  3827  0021A8  0622               	decf	colorWipe@i_248^0,f,c
  3828  0021AA  A0D8               	btfss	status,0,c
  3829  0021AC  0623               	decf	(colorWipe@i_248+1)^0,f,c
  3830  0021AE  BE23               	btfsc	(colorWipe@i_248+1)^0,7,c
  3831  0021B0  0012               	return	
  3832  0021B2  D7D2               	goto	l4530
  3833  0021B4                     __end_of_colorWipe:
  3834                           	opt callstack 0
  3835                           
  3836 ;; *************** function _Strobe *****************
  3837 ;; Defined at:
  3838 ;;		line 425 in file "Patterns.c"
  3839 ;; Parameters:    Size  Location     Type
  3840 ;;		None
  3841 ;; Auto vars:     Size  Location     Type
  3842 ;;		None
  3843 ;; Return value:  Size  Location     Type
  3844 ;;                  1    wreg      void 
  3845 ;; Registers used:
  3846 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+1, btemp+2, b
      +temp+3, btemp+4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+12, btemp+13, btemp+14, btemp+15
      +, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, btemp+24, btemp+25, btemp+26, btemp+27
      +, btemp+28, btemp+29, btemp+30, btemp+31, tosl, structret, tblptrl, tblptrh, tblptru, prodl, prodh, bsr, cstack
  3847 ;; Tracked objects:
  3848 ;;		On entry : 0/0
  3849 ;;		On exit  : 0/0
  3850 ;;		Unchanged: 0/0
  3851 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3852 ;;      Params:         0       0       0       0       0       0       0       0       0
  3853 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3854 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3855 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3856 ;;Total ram usage:        0 bytes
  3857 ;; Hardware stack levels used:    1
  3858 ;; Hardware stack levels required when called:    5
  3859 ;; This function calls:
  3860 ;;		_Delay_ms
  3861 ;;		_Show
  3862 ;;		_Time_Check
  3863 ;;		_setAll
  3864 ;; This function is called by:
  3865 ;;		_main
  3866 ;; This function uses a non-reentrant model
  3867 ;;
  3868                           
  3869                           	psect	text12
  3870  0039EA                     __ptext12:
  3871                           	opt callstack 0
  3872  0039EA                     _Strobe:
  3873                           	opt callstack 25
  3874                           
  3875                           ;Patterns.c: 426:     Time_Check(1);
  3876                           
  3877                           ;incstack = 0
  3878  0039EA  0E00               	movlw	0
  3879  0039EC  6E04               	movwf	(Time_Check@Time+1)^0,c
  3880  0039EE  0E01               	movlw	1
  3881  0039F0  6E03               	movwf	Time_Check@Time^0,c
  3882  0039F2  ECFC  F01D         	call	_Time_Check	;wreg free
  3883                           
  3884                           ;Patterns.c: 427:     setAll(BT_RGB[0],BT_RGB[1],BT_RGB[2]);
  3885  0039F6  C058  F016         	movff	_BT_RGB+1,setAll@Green	;volatile
  3886  0039FA  C059  F017         	movff	_BT_RGB+2,setAll@Blue	;volatile
  3887  0039FE  5057               	movf	_BT_RGB^0,w,c	;volatile
  3888  003A00  EC73  F01D         	call	_setAll
  3889                           
  3890                           ;Patterns.c: 428:     Show();
  3891  003A04  ECBD  F01C         	call	_Show	;wreg free
  3892                           
  3893                           ;Patterns.c: 429:     Delay_ms(BT_Tiempo);
  3894  003A08  C05A  F003         	movff	_BT_Tiempo,Delay_ms@time	;volatile
  3895  003A0C  6A04               	clrf	(Delay_ms@time+1)^0,c
  3896  003A0E  EC51  F01D         	call	_Delay_ms	;wreg free
  3897                           
  3898                           ;Patterns.c: 430:     setAll(0,0,0);
  3899  003A12  0E00               	movlw	0
  3900  003A14  6E16               	movwf	setAll@Green^0,c
  3901  003A16  0E00               	movlw	0
  3902  003A18  6E17               	movwf	setAll@Blue^0,c
  3903  003A1A  0E00               	movlw	0
  3904  003A1C  EC73  F01D         	call	_setAll
  3905                           
  3906                           ;Patterns.c: 431:     Show();
  3907  003A20  ECBD  F01C         	call	_Show	;wreg free
  3908                           
  3909                           ;Patterns.c: 432:     Delay_ms(BT_Tiempo);
  3910  003A24  C05A  F003         	movff	_BT_Tiempo,Delay_ms@time	;volatile
  3911  003A28  6A04               	clrf	(Delay_ms@time+1)^0,c
  3912  003A2A  EC51  F01D         	call	_Delay_ms	;wreg free
  3913                           
  3914                           ;Patterns.c: 433:     if(BT_Patron != 6|| BT_rainbow != 0)return;
  3915  003A2E  0E06               	movlw	6
  3916  003A30  185B               	xorwf	_BT_Patron^0,w,c	;volatile
  3917  003A32  A4D8               	btfss	status,2,c
  3918  003A34  0012               	return	
  3919  003A36  B05C               	btfsc	(_BT_rainbow/(0+8))^0,_BT_rainbow& (0+7),c	;volatile
  3920  003A38  0012               	return	
  3921                           
  3922                           ;Patterns.c: 434:     Delay_ms(BT_Tiempo);
  3923  003A3A  C05A  F003         	movff	_BT_Tiempo,Delay_ms@time	;volatile
  3924  003A3E  6A04               	clrf	(Delay_ms@time+1)^0,c
  3925  003A40  EC51  F01D         	call	_Delay_ms	;wreg free
  3926  003A44  0012               	return		;funcret
  3927  003A46                     __end_of_Strobe:
  3928                           	opt callstack 0
  3929                           
  3930 ;; *************** function _SetAllcolors *****************
  3931 ;; Defined at:
  3932 ;;		line 475 in file "Patterns.c"
  3933 ;; Parameters:    Size  Location     Type
  3934 ;;		None
  3935 ;; Auto vars:     Size  Location     Type
  3936 ;;  i               2   30[COMRAM] int 
  3937 ;;  j               2   28[COMRAM] int 
  3938 ;;  flag            2    0        int 
  3939 ;;  c               1   32[COMRAM] PTR unsigned char 
  3940 ;;		 -> Wheel@c(3), 
  3941 ;; Return value:  Size  Location     Type
  3942 ;;                  1    wreg      void 
  3943 ;; Registers used:
  3944 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+1, btemp+2, b
      +temp+3, btemp+4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+12, btemp+13, btemp+14, btemp+15
      +, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, btemp+24, btemp+25, btemp+26, btemp+27
      +, btemp+28, btemp+29, btemp+30, btemp+31, tosl, structret, tblptrl, tblptrh, tblptru, prodl, prodh, bsr, cstack
  3945 ;; Tracked objects:
  3946 ;;		On entry : 0/0
  3947 ;;		On exit  : 0/0
  3948 ;;		Unchanged: 0/0
  3949 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3950 ;;      Params:         0       0       0       0       0       0       0       0       0
  3951 ;;      Locals:         7       0       0       0       0       0       0       0       0
  3952 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3953 ;;      Totals:         7       0       0       0       0       0       0       0       0
  3954 ;;Total ram usage:        7 bytes
  3955 ;; Hardware stack levels used:    1
  3956 ;; Hardware stack levels required when called:    5
  3957 ;; This function calls:
  3958 ;;		_Delay_ms
  3959 ;;		_Show
  3960 ;;		_Time_Check
  3961 ;;		_Wheel
  3962 ;;		_setAll
  3963 ;;		_setPixel
  3964 ;; This function is called by:
  3965 ;;		_main
  3966 ;; This function uses a non-reentrant model
  3967 ;;
  3968                           
  3969                           	psect	text13
  3970  00350A                     __ptext13:
  3971                           	opt callstack 0
  3972  00350A                     _SetAllcolors:
  3973                           	opt callstack 25
  3974                           
  3975                           ;Patterns.c: 478:     Time_Check(5);
  3976                           
  3977                           ;incstack = 0
  3978  00350A  0E00               	movlw	0
  3979  00350C  6E04               	movwf	(Time_Check@Time+1)^0,c
  3980  00350E  0E05               	movlw	5
  3981  003510  6E03               	movwf	Time_Check@Time^0,c
  3982  003512  ECFC  F01D         	call	_Time_Check	;wreg free
  3983                           
  3984                           ;Patterns.c: 479:     for(int j=0;j<255;j+=5){
  3985  003516  0E00               	movlw	0
  3986  003518  6E1E               	movwf	(SetAllcolors@j+1)^0,c
  3987  00351A  0E00               	movlw	0
  3988  00351C  6E1D               	movwf	SetAllcolors@j^0,c
  3989  00351E                     l5160:
  3990                           
  3991                           ;Patterns.c: 480:         setAll( *c, *(c+1), *(c+2));
  3992  00351E  5021               	movf	SetAllcolors@c^0,w,c
  3993  003520  6ED9               	movwf	fsr2l,c
  3994  003522  6ADA               	clrf	fsr2h,c
  3995  003524  0E01               	movlw	1
  3996  003526  26D9               	addwf	fsr2l,f,c
  3997  003528  50DF               	movf	indf2,w,c
  3998  00352A  6E16               	movwf	setAll@Green^0,c
  3999  00352C  5021               	movf	SetAllcolors@c^0,w,c
  4000  00352E  6ED9               	movwf	fsr2l,c
  4001  003530  6ADA               	clrf	fsr2h,c
  4002  003532  0E02               	movlw	2
  4003  003534  26D9               	addwf	fsr2l,f,c
  4004  003536  50DF               	movf	indf2,w,c
  4005  003538  6E17               	movwf	setAll@Blue^0,c
  4006  00353A  5021               	movf	SetAllcolors@c^0,w,c
  4007  00353C  6ED9               	movwf	fsr2l,c
  4008  00353E  6ADA               	clrf	fsr2h,c
  4009  003540  50DF               	movf	indf2,w,c
  4010  003542  EC73  F01D         	call	_setAll
  4011                           
  4012                           ;Patterns.c: 481:         for(int i = 0; i < NeoNum; i++){
  4013  003546  0E00               	movlw	0
  4014  003548  6E20               	movwf	(SetAllcolors@i+1)^0,c
  4015  00354A  0E00               	movlw	0
  4016  00354C  6E1F               	movwf	SetAllcolors@i^0,c
  4017  00354E                     l5168:
  4018                           
  4019                           ;Patterns.c: 482:             c = Wheel(j);
  4020  00354E  C01D  F011         	movff	SetAllcolors@j,Wheel@WheelPos
  4021  003552  C01E  F012         	movff	SetAllcolors@j+1,Wheel@WheelPos+1
  4022  003556  EC15  F01A         	call	_Wheel	;wreg free
  4023  00355A  6E21               	movwf	SetAllcolors@c^0,c
  4024                           
  4025                           ; BSR set to: 0
  4026                           ;Patterns.c: 483:             setPixel(i, *c, *(c+1), *(c+2));
  4027  00355C  C01F  F00D         	movff	SetAllcolors@i,setPixel@n
  4028  003560  C020  F00E         	movff	SetAllcolors@i+1,setPixel@n+1
  4029  003564  5021               	movf	SetAllcolors@c^0,w,c
  4030  003566  6ED9               	movwf	fsr2l,c
  4031  003568  6ADA               	clrf	fsr2h,c
  4032  00356A  50DF               	movf	indf2,w,c
  4033  00356C  6E0F               	movwf	setPixel@red^0,c
  4034  00356E  5021               	movf	SetAllcolors@c^0,w,c
  4035  003570  6ED9               	movwf	fsr2l,c
  4036  003572  6ADA               	clrf	fsr2h,c
  4037  003574  0E01               	movlw	1
  4038  003576  26D9               	addwf	fsr2l,f,c
  4039  003578  50DF               	movf	indf2,w,c
  4040  00357A  6E10               	movwf	setPixel@green^0,c
  4041  00357C  5021               	movf	SetAllcolors@c^0,w,c
  4042  00357E  6ED9               	movwf	fsr2l,c
  4043  003580  6ADA               	clrf	fsr2h,c
  4044  003582  0E02               	movlw	2
  4045  003584  26D9               	addwf	fsr2l,f,c
  4046  003586  50DF               	movf	indf2,w,c
  4047  003588  6E11               	movwf	setPixel@blue^0,c
  4048  00358A  EC44  F01C         	call	_setPixel	;wreg free
  4049                           
  4050                           ;Patterns.c: 484:             Show();
  4051  00358E  ECBD  F01C         	call	_Show	;wreg free
  4052                           
  4053                           ;Patterns.c: 485:             Delay_ms(BT_Tiempo);
  4054  003592  C05A  F003         	movff	_BT_Tiempo,Delay_ms@time	;volatile
  4055  003596  6A04               	clrf	(Delay_ms@time+1)^0,c
  4056  003598  EC51  F01D         	call	_Delay_ms	;wreg free
  4057                           
  4058                           ;Patterns.c: 486:         }
  4059  00359C  4A1F               	infsnz	SetAllcolors@i^0,f,c
  4060  00359E  2A20               	incf	(SetAllcolors@i+1)^0,f,c
  4061  0035A0  BE20               	btfsc	(SetAllcolors@i+1)^0,7,c
  4062  0035A2  D7D5               	goto	l5168
  4063  0035A4  5020               	movf	(SetAllcolors@i+1)^0,w,c
  4064  0035A6  E104               	bnz	u5570
  4065  0035A8  0ED2               	movlw	210
  4066  0035AA  5C1F               	subwf	SetAllcolors@i^0,w,c
  4067  0035AC  A0D8               	btfss	status,0,c
  4068  0035AE  D7CF               	goto	l5168
  4069  0035B0                     u5570:
  4070                           
  4071                           ;Patterns.c: 487:         Delay_ms(BT_Tiempo);
  4072  0035B0  C05A  F003         	movff	_BT_Tiempo,Delay_ms@time	;volatile
  4073  0035B4  6A04               	clrf	(Delay_ms@time+1)^0,c
  4074  0035B6  EC51  F01D         	call	_Delay_ms	;wreg free
  4075                           
  4076                           ;Patterns.c: 488:         if( BT_Patron!= 8 || BT_rainbow != 0)return;
  4077  0035BA  0E08               	movlw	8
  4078  0035BC  185B               	xorwf	_BT_Patron^0,w,c	;volatile
  4079  0035BE  A4D8               	btfss	status,2,c
  4080  0035C0  0012               	return	
  4081  0035C2  B05C               	btfsc	(_BT_rainbow/(0+8))^0,_BT_rainbow& (0+7),c	;volatile
  4082  0035C4  0012               	return	
  4083                           
  4084                           ;Patterns.c: 489:     }
  4085  0035C6  0E05               	movlw	5
  4086  0035C8  261D               	addwf	SetAllcolors@j^0,f,c
  4087  0035CA  0E00               	movlw	0
  4088  0035CC  221E               	addwfc	(SetAllcolors@j+1)^0,f,c
  4089  0035CE  BE1E               	btfsc	(SetAllcolors@j+1)^0,7,c
  4090  0035D0  D7A6               	goto	l5160
  4091  0035D2  501E               	movf	(SetAllcolors@j+1)^0,w,c
  4092  0035D4  E104               	bnz	u5600
  4093  0035D6  281D               	incf	SetAllcolors@j^0,w,c
  4094  0035D8  B0D8               	btfsc	status,0,c
  4095  0035DA  0012               	return	
  4096  0035DC  D7A0               	goto	l5160
  4097  0035DE                     u5600:
  4098  0035DE  0012               	return		;funcret
  4099  0035E0                     __end_of_SetAllcolors:
  4100                           	opt callstack 0
  4101                           
  4102 ;; *************** function _SetAllColor *****************
  4103 ;; Defined at:
  4104 ;;		line 343 in file "Patterns.c"
  4105 ;; Parameters:    Size  Location     Type
  4106 ;;		None
  4107 ;; Auto vars:     Size  Location     Type
  4108 ;;  i               2   32[COMRAM] int 
  4109 ;;  i               2   38[COMRAM] int 
  4110 ;;  i               2   36[COMRAM] int 
  4111 ;;  i               2   28[COMRAM] int 
  4112 ;;  flag            2   34[COMRAM] int 
  4113 ;;  counter         2   30[COMRAM] int 
  4114 ;;  newBT           1   40[COMRAM] PTR unsigned char 
  4115 ;;		 -> staticWheel@temp(3), 
  4116 ;; Return value:  Size  Location     Type
  4117 ;;                  1    wreg      void 
  4118 ;; Registers used:
  4119 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+1, btemp+2, b
      +temp+3, btemp+4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+12, btemp+13, btemp+14, btemp+15
      +, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, btemp+24, btemp+25, btemp+26, btemp+27
      +, btemp+28, btemp+29, btemp+30, btemp+31, tosl, structret, tblptrl, tblptrh, tblptru, prodl, prodh, bsr, cstack
  4120 ;; Tracked objects:
  4121 ;;		On entry : 0/0
  4122 ;;		On exit  : 0/0
  4123 ;;		Unchanged: 0/0
  4124 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4125 ;;      Params:         0       0       0       0       0       0       0       0       0
  4126 ;;      Locals:        13       0       0       0       0       0       0       0       0
  4127 ;;      Temps:          2       0       0       0       0       0       0       0       0
  4128 ;;      Totals:        15       0       0       0       0       0       0       0       0
  4129 ;;Total ram usage:       15 bytes
  4130 ;; Hardware stack levels used:    1
  4131 ;; Hardware stack levels required when called:    5
  4132 ;; This function calls:
  4133 ;;		_Delay_ms
  4134 ;;		_Show
  4135 ;;		_Time_Check
  4136 ;;		_setAll
  4137 ;;		_setPixel
  4138 ;;		_staticWheel
  4139 ;; This function is called by:
  4140 ;;		_main
  4141 ;; This function uses a non-reentrant model
  4142 ;;
  4143                           
  4144                           	psect	text14
  4145  00243C                     __ptext14:
  4146                           	opt callstack 0
  4147  00243C                     _SetAllColor:
  4148                           	opt callstack 25
  4149                           
  4150                           ;Patterns.c: 344:     int flag = 5, counter = 0;
  4151                           
  4152                           ;incstack = 0
  4153  00243C  0E00               	movlw	0
  4154  00243E  6E24               	movwf	(SetAllColor@flag+1)^0,c
  4155  002440  0E05               	movlw	5
  4156  002442  6E23               	movwf	SetAllColor@flag^0,c
  4157  002444  0E00               	movlw	0
  4158  002446  6E20               	movwf	(SetAllColor@counter+1)^0,c
  4159  002448  0E00               	movlw	0
  4160  00244A  6E1F               	movwf	SetAllColor@counter^0,c
  4161                           
  4162                           ;Patterns.c: 345:     unsigned char *newBT;;Patterns.c: 347:     Time_Check(10);
  4163  00244C  0E00               	movlw	0
  4164  00244E  6E04               	movwf	(Time_Check@Time+1)^0,c
  4165  002450  0E0A               	movlw	10
  4166  002452  6E03               	movwf	Time_Check@Time^0,c
  4167  002454  ECFC  F01D         	call	_Time_Check	;wreg free
  4168                           
  4169                           ;Patterns.c: 348:     for(int i= 0; i < 2500; ++i){
  4170  002458  0E00               	movlw	0
  4171  00245A  6E1E               	movwf	(SetAllColor@i+1)^0,c
  4172  00245C  0E00               	movlw	0
  4173  00245E  6E1D               	movwf	SetAllColor@i^0,c
  4174  002460                     l4948:
  4175                           
  4176                           ;Patterns.c: 349:         setAll(BT_RGB[0], BT_RGB[1], BT_RGB[2]);
  4177  002460  C058  F016         	movff	_BT_RGB+1,setAll@Green	;volatile
  4178  002464  C059  F017         	movff	_BT_RGB+2,setAll@Blue	;volatile
  4179  002468  5057               	movf	_BT_RGB^0,w,c	;volatile
  4180  00246A  EC73  F01D         	call	_setAll
  4181                           
  4182                           ;Patterns.c: 350:         Delay_ms(20);
  4183  00246E  0E00               	movlw	0
  4184  002470  6E04               	movwf	(Delay_ms@time+1)^0,c
  4185  002472  0E14               	movlw	20
  4186  002474  6E03               	movwf	Delay_ms@time^0,c
  4187  002476  EC51  F01D         	call	_Delay_ms	;wreg free
  4188                           
  4189                           ;Patterns.c: 351:         if(BT_Patron != 5|| BT_rainbow != 0)return;
  4190  00247A  0E05               	movlw	5
  4191  00247C  185B               	xorwf	_BT_Patron^0,w,c	;volatile
  4192  00247E  A4D8               	btfss	status,2,c
  4193  002480  0012               	return	
  4194  002482  B05C               	btfsc	(_BT_rainbow/(0+8))^0,_BT_rainbow& (0+7),c	;volatile
  4195  002484  0012               	return	
  4196                           
  4197                           ;Patterns.c: 352:     }
  4198  002486  4A1D               	infsnz	SetAllColor@i^0,f,c
  4199  002488  2A1E               	incf	(SetAllColor@i+1)^0,f,c
  4200  00248A  BE1E               	btfsc	(SetAllColor@i+1)^0,7,c
  4201  00248C  D7E9               	goto	l4948
  4202  00248E  0EC4               	movlw	196
  4203  002490  5C1D               	subwf	SetAllColor@i^0,w,c
  4204  002492  0E09               	movlw	9
  4205  002494  581E               	subwfb	(SetAllColor@i+1)^0,w,c
  4206  002496  A0D8               	btfss	status,0,c
  4207  002498  D7E3               	goto	l4948
  4208                           
  4209                           ;Patterns.c: 353:     for(int i = 0; i < NeoNum; ++i){
  4210  00249A  0E00               	movlw	0
  4211  00249C  6E26               	movwf	(SetAllColor@i_307+1)^0,c
  4212  00249E  0E00               	movlw	0
  4213  0024A0  6E25               	movwf	SetAllColor@i_307^0,c
  4214  0024A2                     l4966:
  4215                           
  4216                           ;Patterns.c: 354:         if(i < flag){
  4217  0024A2  5023               	movf	SetAllColor@flag^0,w,c
  4218  0024A4  5C25               	subwf	SetAllColor@i_307^0,w,c
  4219  0024A6  5026               	movf	(SetAllColor@i_307+1)^0,w,c
  4220  0024A8  0A80               	xorlw	128
  4221  0024AA  6E1B               	movwf	??_SetAllColor^0,c
  4222  0024AC  5024               	movf	(SetAllColor@flag+1)^0,w,c
  4223  0024AE  0A80               	xorlw	128
  4224  0024B0  581B               	subwfb	??_SetAllColor^0,w,c
  4225  0024B2  B0D8               	btfsc	status,0,c
  4226  0024B4  D01D               	goto	l4972
  4227                           
  4228                           ;Patterns.c: 355:             newBT = staticWheel();
  4229  0024B6  EC01  F018         	call	_staticWheel	;wreg free
  4230  0024BA  6E29               	movwf	SetAllColor@newBT^0,c
  4231                           
  4232                           ;Patterns.c: 356:             setPixel(i,*newBT, *(newBT+1), *(newBT+2));
  4233  0024BC  C025  F00D         	movff	SetAllColor@i_307,setPixel@n
  4234  0024C0  C026  F00E         	movff	SetAllColor@i_307+1,setPixel@n+1
  4235  0024C4  5029               	movf	SetAllColor@newBT^0,w,c
  4236  0024C6  6ED9               	movwf	fsr2l,c
  4237  0024C8  6ADA               	clrf	fsr2h,c
  4238  0024CA  50DF               	movf	indf2,w,c
  4239  0024CC  6E0F               	movwf	setPixel@red^0,c
  4240  0024CE  5029               	movf	SetAllColor@newBT^0,w,c
  4241  0024D0  6ED9               	movwf	fsr2l,c
  4242  0024D2  6ADA               	clrf	fsr2h,c
  4243  0024D4  0E01               	movlw	1
  4244  0024D6  26D9               	addwf	fsr2l,f,c
  4245  0024D8  50DF               	movf	indf2,w,c
  4246  0024DA  6E10               	movwf	setPixel@green^0,c
  4247  0024DC  5029               	movf	SetAllColor@newBT^0,w,c
  4248  0024DE  6ED9               	movwf	fsr2l,c
  4249  0024E0  6ADA               	clrf	fsr2h,c
  4250  0024E2  0E02               	movlw	2
  4251  0024E4  26D9               	addwf	fsr2l,f,c
  4252  0024E6  50DF               	movf	indf2,w,c
  4253  0024E8  6E11               	movwf	setPixel@blue^0,c
  4254  0024EA  EC44  F01C         	call	_setPixel	;wreg free
  4255                           
  4256                           ;Patterns.c: 357:         }else{
  4257  0024EE  D00C               	goto	l4974
  4258  0024F0                     l4972:
  4259                           
  4260                           ;Patterns.c: 358:             setPixel(i,BT_RGB[0], BT_RGB[1], BT_RGB[2]);
  4261  0024F0  C025  F00D         	movff	SetAllColor@i_307,setPixel@n
  4262  0024F4  C026  F00E         	movff	SetAllColor@i_307+1,setPixel@n+1
  4263  0024F8  C057  F00F         	movff	_BT_RGB,setPixel@red	;volatile
  4264  0024FC  C058  F010         	movff	_BT_RGB+1,setPixel@green	;volatile
  4265  002500  C059  F011         	movff	_BT_RGB+2,setPixel@blue	;volatile
  4266  002504  EC44  F01C         	call	_setPixel	;wreg free
  4267  002508                     l4974:
  4268                           
  4269                           ;Patterns.c: 360:         Show();
  4270  002508  ECBD  F01C         	call	_Show	;wreg free
  4271                           
  4272                           ;Patterns.c: 361:         if(BT_Patron != 5|| BT_rainbow != 0)return;
  4273  00250C  0E05               	movlw	5
  4274  00250E  185B               	xorwf	_BT_Patron^0,w,c	;volatile
  4275  002510  A4D8               	btfss	status,2,c
  4276  002512  0012               	return	
  4277  002514  B05C               	btfsc	(_BT_rainbow/(0+8))^0,_BT_rainbow& (0+7),c	;volatile
  4278  002516  0012               	return	
  4279                           
  4280                           ;Patterns.c: 362:         Delay_ms(BT_Tiempo);
  4281  002518  C05A  F003         	movff	_BT_Tiempo,Delay_ms@time	;volatile
  4282  00251C  6A04               	clrf	(Delay_ms@time+1)^0,c
  4283  00251E  EC51  F01D         	call	_Delay_ms	;wreg free
  4284                           
  4285                           ;Patterns.c: 363:         counter++;
  4286  002522  4A1F               	infsnz	SetAllColor@counter^0,f,c
  4287  002524  2A20               	incf	(SetAllColor@counter+1)^0,f,c
  4288                           
  4289                           ;Patterns.c: 364:         if(counter == flag+5) flag += 10;
  4290  002526  0E05               	movlw	5
  4291  002528  2423               	addwf	SetAllColor@flag^0,w,c
  4292  00252A  6E1B               	movwf	??_SetAllColor^0,c
  4293  00252C  0E00               	movlw	0
  4294  00252E  2024               	addwfc	(SetAllColor@flag+1)^0,w,c
  4295  002530  6E1C               	movwf	(??_SetAllColor+1)^0,c
  4296  002532  501F               	movf	SetAllColor@counter^0,w,c
  4297  002534  181B               	xorwf	??_SetAllColor^0,w,c
  4298  002536  E108               	bnz	l4988
  4299  002538  5020               	movf	(SetAllColor@counter+1)^0,w,c
  4300  00253A  181C               	xorwf	(??_SetAllColor+1)^0,w,c
  4301  00253C  A4D8               	btfss	status,2,c
  4302  00253E  D004               	goto	l4988
  4303  002540  0E0A               	movlw	10
  4304  002542  2623               	addwf	SetAllColor@flag^0,f,c
  4305  002544  0E00               	movlw	0
  4306  002546  2224               	addwfc	(SetAllColor@flag+1)^0,f,c
  4307  002548                     l4988:
  4308                           
  4309                           ;Patterns.c: 365:     }
  4310  002548  4A25               	infsnz	SetAllColor@i_307^0,f,c
  4311  00254A  2A26               	incf	(SetAllColor@i_307+1)^0,f,c
  4312  00254C  BE26               	btfsc	(SetAllColor@i_307+1)^0,7,c
  4313  00254E  D7A9               	goto	l4966
  4314  002550  5026               	movf	(SetAllColor@i_307+1)^0,w,c
  4315  002552  E104               	bnz	u5370
  4316  002554  0ED2               	movlw	210
  4317  002556  5C25               	subwf	SetAllColor@i_307^0,w,c
  4318  002558  A0D8               	btfss	status,0,c
  4319  00255A  D7A3               	goto	l4966
  4320  00255C                     u5370:
  4321                           
  4322                           ;Patterns.c: 374:     flag = 5;
  4323  00255C  0E00               	movlw	0
  4324  00255E  6E24               	movwf	(SetAllColor@flag+1)^0,c
  4325  002560  0E05               	movlw	5
  4326  002562  6E23               	movwf	SetAllColor@flag^0,c
  4327                           
  4328                           ;Patterns.c: 375:     counter = 0;
  4329  002564  0E00               	movlw	0
  4330  002566  6E20               	movwf	(SetAllColor@counter+1)^0,c
  4331  002568  0E00               	movlw	0
  4332  00256A  6E1F               	movwf	SetAllColor@counter^0,c
  4333                           
  4334                           ;Patterns.c: 376:     for(int i = 0; i < NeoNum; ++i){
  4335  00256C  0E00               	movlw	0
  4336  00256E  6E28               	movwf	(SetAllColor@i_308+1)^0,c
  4337  002570  0E00               	movlw	0
  4338  002572  6E27               	movwf	SetAllColor@i_308^0,c
  4339  002574                     l4998:
  4340                           
  4341                           ;Patterns.c: 377:         if(i < flag){
  4342  002574  5023               	movf	SetAllColor@flag^0,w,c
  4343  002576  5C27               	subwf	SetAllColor@i_308^0,w,c
  4344  002578  5028               	movf	(SetAllColor@i_308+1)^0,w,c
  4345  00257A  0A80               	xorlw	128
  4346  00257C  6E1B               	movwf	??_SetAllColor^0,c
  4347  00257E  5024               	movf	(SetAllColor@flag+1)^0,w,c
  4348  002580  0A80               	xorlw	128
  4349  002582  581B               	subwfb	??_SetAllColor^0,w,c
  4350  002584  B0D8               	btfsc	status,0,c
  4351  002586  D00D               	goto	l5002
  4352                           
  4353                           ;Patterns.c: 378:             setPixel(i,BT_RGB[0], BT_RGB[1], BT_RGB[2]);
  4354  002588  C027  F00D         	movff	SetAllColor@i_308,setPixel@n
  4355  00258C  C028  F00E         	movff	SetAllColor@i_308+1,setPixel@n+1
  4356  002590  C057  F00F         	movff	_BT_RGB,setPixel@red	;volatile
  4357  002594  C058  F010         	movff	_BT_RGB+1,setPixel@green	;volatile
  4358  002598  C059  F011         	movff	_BT_RGB+2,setPixel@blue	;volatile
  4359  00259C  EC44  F01C         	call	_setPixel	;wreg free
  4360                           
  4361                           ;Patterns.c: 379:         }else{
  4362  0025A0  D01C               	goto	l5006
  4363  0025A2                     l5002:
  4364                           
  4365                           ;Patterns.c: 380:             newBT = staticWheel();
  4366  0025A2  EC01  F018         	call	_staticWheel	;wreg free
  4367  0025A6  6E29               	movwf	SetAllColor@newBT^0,c
  4368                           
  4369                           ;Patterns.c: 381:             setPixel(i,*newBT, *(newBT+1), *(newBT+2));
  4370  0025A8  C027  F00D         	movff	SetAllColor@i_308,setPixel@n
  4371  0025AC  C028  F00E         	movff	SetAllColor@i_308+1,setPixel@n+1
  4372  0025B0  5029               	movf	SetAllColor@newBT^0,w,c
  4373  0025B2  6ED9               	movwf	fsr2l,c
  4374  0025B4  6ADA               	clrf	fsr2h,c
  4375  0025B6  50DF               	movf	indf2,w,c
  4376  0025B8  6E0F               	movwf	setPixel@red^0,c
  4377  0025BA  5029               	movf	SetAllColor@newBT^0,w,c
  4378  0025BC  6ED9               	movwf	fsr2l,c
  4379  0025BE  6ADA               	clrf	fsr2h,c
  4380  0025C0  0E01               	movlw	1
  4381  0025C2  26D9               	addwf	fsr2l,f,c
  4382  0025C4  50DF               	movf	indf2,w,c
  4383  0025C6  6E10               	movwf	setPixel@green^0,c
  4384  0025C8  5029               	movf	SetAllColor@newBT^0,w,c
  4385  0025CA  6ED9               	movwf	fsr2l,c
  4386  0025CC  6ADA               	clrf	fsr2h,c
  4387  0025CE  0E02               	movlw	2
  4388  0025D0  26D9               	addwf	fsr2l,f,c
  4389  0025D2  50DF               	movf	indf2,w,c
  4390  0025D4  6E11               	movwf	setPixel@blue^0,c
  4391  0025D6  EC44  F01C         	call	_setPixel	;wreg free
  4392  0025DA                     l5006:
  4393                           
  4394                           ;Patterns.c: 383:         Show();
  4395  0025DA  ECBD  F01C         	call	_Show	;wreg free
  4396                           
  4397                           ;Patterns.c: 384:         if(BT_Patron != 5|| BT_rainbow != 0)return;
  4398  0025DE  0E05               	movlw	5
  4399  0025E0  185B               	xorwf	_BT_Patron^0,w,c	;volatile
  4400  0025E2  A4D8               	btfss	status,2,c
  4401  0025E4  0012               	return	
  4402  0025E6  B05C               	btfsc	(_BT_rainbow/(0+8))^0,_BT_rainbow& (0+7),c	;volatile
  4403  0025E8  0012               	return	
  4404                           
  4405                           ;Patterns.c: 385:         Delay_ms(BT_Tiempo);
  4406  0025EA  C05A  F003         	movff	_BT_Tiempo,Delay_ms@time	;volatile
  4407  0025EE  6A04               	clrf	(Delay_ms@time+1)^0,c
  4408  0025F0  EC51  F01D         	call	_Delay_ms	;wreg free
  4409                           
  4410                           ;Patterns.c: 386:         counter++;
  4411  0025F4  4A1F               	infsnz	SetAllColor@counter^0,f,c
  4412  0025F6  2A20               	incf	(SetAllColor@counter+1)^0,f,c
  4413                           
  4414                           ;Patterns.c: 387:         if(counter == flag+5) flag += 10;
  4415  0025F8  0E05               	movlw	5
  4416  0025FA  2423               	addwf	SetAllColor@flag^0,w,c
  4417  0025FC  6E1B               	movwf	??_SetAllColor^0,c
  4418  0025FE  0E00               	movlw	0
  4419  002600  2024               	addwfc	(SetAllColor@flag+1)^0,w,c
  4420  002602  6E1C               	movwf	(??_SetAllColor+1)^0,c
  4421  002604  501F               	movf	SetAllColor@counter^0,w,c
  4422  002606  181B               	xorwf	??_SetAllColor^0,w,c
  4423  002608  E108               	bnz	l5020
  4424  00260A  5020               	movf	(SetAllColor@counter+1)^0,w,c
  4425  00260C  181C               	xorwf	(??_SetAllColor+1)^0,w,c
  4426  00260E  A4D8               	btfss	status,2,c
  4427  002610  D004               	goto	l5020
  4428  002612  0E0A               	movlw	10
  4429  002614  2623               	addwf	SetAllColor@flag^0,f,c
  4430  002616  0E00               	movlw	0
  4431  002618  2224               	addwfc	(SetAllColor@flag+1)^0,f,c
  4432  00261A                     l5020:
  4433                           
  4434                           ;Patterns.c: 388:     }
  4435  00261A  4A27               	infsnz	SetAllColor@i_308^0,f,c
  4436  00261C  2A28               	incf	(SetAllColor@i_308+1)^0,f,c
  4437  00261E  BE28               	btfsc	(SetAllColor@i_308+1)^0,7,c
  4438  002620  D7A9               	goto	l4998
  4439  002622  5028               	movf	(SetAllColor@i_308+1)^0,w,c
  4440  002624  E104               	bnz	u5420
  4441  002626  0ED2               	movlw	210
  4442  002628  5C27               	subwf	SetAllColor@i_308^0,w,c
  4443  00262A  A0D8               	btfss	status,0,c
  4444  00262C  D7A3               	goto	l4998
  4445  00262E                     u5420:
  4446                           
  4447                           ;Patterns.c: 390:     Delay_ms(100);
  4448  00262E  0E00               	movlw	0
  4449  002630  6E04               	movwf	(Delay_ms@time+1)^0,c
  4450  002632  0E64               	movlw	100
  4451  002634  6E03               	movwf	Delay_ms@time^0,c
  4452  002636  EC51  F01D         	call	_Delay_ms	;wreg free
  4453                           
  4454                           ;Patterns.c: 391:     for(int i = 0; i < NeoNum; ++i){
  4455  00263A  0E00               	movlw	0
  4456  00263C  6E22               	movwf	(SetAllColor@i_309+1)^0,c
  4457  00263E  0E00               	movlw	0
  4458  002640  6E21               	movwf	SetAllColor@i_309^0,c
  4459  002642                     l5032:
  4460                           
  4461                           ;Patterns.c: 392:         setPixel(i,BT_RGB[0], BT_RGB[1], BT_RGB[2]);
  4462  002642  C021  F00D         	movff	SetAllColor@i_309,setPixel@n
  4463  002646  C022  F00E         	movff	SetAllColor@i_309+1,setPixel@n+1
  4464  00264A  C057  F00F         	movff	_BT_RGB,setPixel@red	;volatile
  4465  00264E  C058  F010         	movff	_BT_RGB+1,setPixel@green	;volatile
  4466  002652  C059  F011         	movff	_BT_RGB+2,setPixel@blue	;volatile
  4467  002656  EC44  F01C         	call	_setPixel	;wreg free
  4468                           
  4469                           ;Patterns.c: 393:         Show();
  4470  00265A  ECBD  F01C         	call	_Show	;wreg free
  4471                           
  4472                           ;Patterns.c: 394:         Delay_ms(BT_Tiempo);
  4473  00265E  C05A  F003         	movff	_BT_Tiempo,Delay_ms@time	;volatile
  4474  002662  6A04               	clrf	(Delay_ms@time+1)^0,c
  4475  002664  EC51  F01D         	call	_Delay_ms	;wreg free
  4476                           
  4477                           ;Patterns.c: 395:         if(BT_Patron != 5|| BT_rainbow != 0)return;
  4478  002668  0E05               	movlw	5
  4479  00266A  185B               	xorwf	_BT_Patron^0,w,c	;volatile
  4480  00266C  A4D8               	btfss	status,2,c
  4481  00266E  0012               	return	
  4482  002670  B05C               	btfsc	(_BT_rainbow/(0+8))^0,_BT_rainbow& (0+7),c	;volatile
  4483  002672  0012               	return	
  4484                           
  4485                           ;Patterns.c: 396:     }
  4486  002674  4A21               	infsnz	SetAllColor@i_309^0,f,c
  4487  002676  2A22               	incf	(SetAllColor@i_309+1)^0,f,c
  4488  002678  BE22               	btfsc	(SetAllColor@i_309+1)^0,7,c
  4489  00267A  D7E3               	goto	l5032
  4490  00267C  5022               	movf	(SetAllColor@i_309+1)^0,w,c
  4491  00267E  E105               	bnz	u5450
  4492  002680  0ED2               	movlw	210
  4493  002682  5C21               	subwf	SetAllColor@i_309^0,w,c
  4494  002684  B0D8               	btfsc	status,0,c
  4495  002686  0012               	return	
  4496  002688  D7DC               	goto	l5032
  4497  00268A                     u5450:
  4498  00268A  0012               	return		;funcret
  4499  00268C                     __end_of_SetAllColor:
  4500                           	opt callstack 0
  4501                           
  4502 ;; *************** function _staticWheel *****************
  4503 ;; Defined at:
  4504 ;;		line 400 in file "Patterns.c"
  4505 ;; Parameters:    Size  Location     Type
  4506 ;;		None
  4507 ;; Auto vars:     Size  Location     Type
  4508 ;;  i               2   10[COMRAM] int 
  4509 ;;  i               2    5[COMRAM] int 
  4510 ;;  temp            3    7[COMRAM] unsigned char [3]
  4511 ;; Return value:  Size  Location     Type
  4512 ;;                  1    wreg      PTR unsigned char 
  4513 ;; Registers used:
  4514 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  4515 ;; Tracked objects:
  4516 ;;		On entry : 0/0
  4517 ;;		On exit  : 0/0
  4518 ;;		Unchanged: 0/0
  4519 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4520 ;;      Params:         2       0       0       0       0       0       0       0       0
  4521 ;;      Locals:         7       0       0       0       0       0       0       0       0
  4522 ;;      Temps:          1       0       0       0       0       0       0       0       0
  4523 ;;      Totals:        10       0       0       0       0       0       0       0       0
  4524 ;;Total ram usage:       10 bytes
  4525 ;; Hardware stack levels used:    1
  4526 ;; Hardware stack levels required when called:    2
  4527 ;; This function calls:
  4528 ;;		Nothing
  4529 ;; This function is called by:
  4530 ;;		_SetAllColor
  4531 ;; This function uses a non-reentrant model
  4532 ;;
  4533                           
  4534                           	psect	text15
  4535  003002                     __ptext15:
  4536                           	opt callstack 0
  4537  003002                     _staticWheel:
  4538                           	opt callstack 27
  4539                           
  4540                           ;Patterns.c: 401:     unsigned char temp[3];;Patterns.c: 402:     for(int i=0; i< 3; i++
      +                          ){
  4541                           
  4542                           ;incstack = 0
  4543  003002  0E00               	movlw	0
  4544  003004  6E07               	movwf	(staticWheel@i+1)^0,c
  4545  003006  0E00               	movlw	0
  4546  003008  6E06               	movwf	staticWheel@i^0,c
  4547  00300A                     l3576:
  4548                           
  4549                           ;Patterns.c: 403:         temp[i] = BT_RGB[i];
  4550  00300A  5006               	movf	staticWheel@i^0,w,c
  4551  00300C  0F57               	addlw	low _BT_RGB
  4552  00300E  6ED9               	movwf	fsr2l,c
  4553  003010  6ADA               	clrf	fsr2h,c
  4554  003012  5006               	movf	staticWheel@i^0,w,c
  4555  003014  0F08               	addlw	low staticWheel@temp
  4556  003016  6EE1               	movwf	fsr1l,c
  4557  003018  6AE2               	clrf	fsr1h,c
  4558  00301A  CFDF FFE7          	movff	indf2,indf1
  4559                           
  4560                           ;Patterns.c: 404:     }
  4561  00301E  4A06               	infsnz	staticWheel@i^0,f,c
  4562  003020  2A07               	incf	(staticWheel@i+1)^0,f,c
  4563  003022  BE07               	btfsc	(staticWheel@i+1)^0,7,c
  4564  003024  D7F2               	goto	l3576
  4565  003026  5007               	movf	(staticWheel@i+1)^0,w,c
  4566  003028  E104               	bnz	u3100
  4567  00302A  0E03               	movlw	3
  4568  00302C  5C06               	subwf	staticWheel@i^0,w,c
  4569  00302E  A0D8               	btfss	status,0,c
  4570  003030  D7EC               	goto	l3576
  4571  003032                     u3100:
  4572                           
  4573                           ;Patterns.c: 406:     for(int i = 0; i < 3; i++){
  4574  003032  0E00               	movlw	0
  4575  003034  6E0C               	movwf	(staticWheel@i_313+1)^0,c
  4576  003036  0E00               	movlw	0
  4577  003038  6E0B               	movwf	staticWheel@i_313^0,c
  4578  00303A                     l3588:
  4579                           
  4580                           ;Patterns.c: 407:         if((temp[i] < 50) && (temp[i] > 10)){
  4581  00303A  500B               	movf	staticWheel@i_313^0,w,c
  4582  00303C  0F08               	addlw	low staticWheel@temp
  4583  00303E  6ED9               	movwf	fsr2l,c
  4584  003040  6ADA               	clrf	fsr2h,c
  4585  003042  0E32               	movlw	50
  4586  003044  60DF               	cpfslt	indf2,c
  4587  003046  D00D               	goto	l3594
  4588  003048  500B               	movf	staticWheel@i_313^0,w,c
  4589  00304A  0F08               	addlw	low staticWheel@temp
  4590  00304C  6ED9               	movwf	fsr2l,c
  4591  00304E  6ADA               	clrf	fsr2h,c
  4592  003050  0E0A               	movlw	10
  4593  003052  64DF               	cpfsgt	indf2,c
  4594  003054  D006               	goto	l3594
  4595                           
  4596                           ;Patterns.c: 408:             temp[i] -= 20;
  4597  003056  500B               	movf	staticWheel@i_313^0,w,c
  4598  003058  0F08               	addlw	low staticWheel@temp
  4599  00305A  6ED9               	movwf	fsr2l,c
  4600  00305C  6ADA               	clrf	fsr2h,c
  4601  00305E  0E14               	movlw	20
  4602  003060  D04F               	goto	L4
  4603  003062                     l3594:
  4604  003062  500B               	movf	staticWheel@i_313^0,w,c
  4605  003064  0F08               	addlw	low staticWheel@temp
  4606  003066  6ED9               	movwf	fsr2l,c
  4607  003068  6ADA               	clrf	fsr2h,c
  4608  00306A  0E64               	movlw	100
  4609  00306C  60DF               	cpfslt	indf2,c
  4610  00306E  D00D               	goto	l3600
  4611  003070  500B               	movf	staticWheel@i_313^0,w,c
  4612  003072  0F08               	addlw	low staticWheel@temp
  4613  003074  6ED9               	movwf	fsr2l,c
  4614  003076  6ADA               	clrf	fsr2h,c
  4615  003078  0E32               	movlw	50
  4616  00307A  64DF               	cpfsgt	indf2,c
  4617  00307C  D006               	goto	l3600
  4618                           
  4619                           ;Patterns.c: 411:             temp[i] -= 25;
  4620  00307E  500B               	movf	staticWheel@i_313^0,w,c
  4621  003080  0F08               	addlw	low staticWheel@temp
  4622  003082  6ED9               	movwf	fsr2l,c
  4623  003084  6ADA               	clrf	fsr2h,c
  4624  003086  0E19               	movlw	25
  4625  003088  D03B               	goto	L4
  4626  00308A                     l3600:
  4627  00308A  500B               	movf	staticWheel@i_313^0,w,c
  4628  00308C  0F08               	addlw	low staticWheel@temp
  4629  00308E  6ED9               	movwf	fsr2l,c
  4630  003090  6ADA               	clrf	fsr2h,c
  4631  003092  0E96               	movlw	150
  4632  003094  60DF               	cpfslt	indf2,c
  4633  003096  D00D               	goto	l3606
  4634  003098  500B               	movf	staticWheel@i_313^0,w,c
  4635  00309A  0F08               	addlw	low staticWheel@temp
  4636  00309C  6ED9               	movwf	fsr2l,c
  4637  00309E  6ADA               	clrf	fsr2h,c
  4638  0030A0  0E64               	movlw	100
  4639  0030A2  64DF               	cpfsgt	indf2,c
  4640  0030A4  D006               	goto	l3606
  4641                           
  4642                           ;Patterns.c: 414:             temp[i] -= 50;
  4643  0030A6  500B               	movf	staticWheel@i_313^0,w,c
  4644  0030A8  0F08               	addlw	low staticWheel@temp
  4645  0030AA  6ED9               	movwf	fsr2l,c
  4646  0030AC  6ADA               	clrf	fsr2h,c
  4647  0030AE  0E32               	movlw	50
  4648  0030B0  D027               	goto	L4
  4649  0030B2                     l3606:
  4650  0030B2  500B               	movf	staticWheel@i_313^0,w,c
  4651  0030B4  0F08               	addlw	low staticWheel@temp
  4652  0030B6  6ED9               	movwf	fsr2l,c
  4653  0030B8  6ADA               	clrf	fsr2h,c
  4654  0030BA  0EC8               	movlw	200
  4655  0030BC  60DF               	cpfslt	indf2,c
  4656  0030BE  D00D               	goto	l3612
  4657  0030C0  500B               	movf	staticWheel@i_313^0,w,c
  4658  0030C2  0F08               	addlw	low staticWheel@temp
  4659  0030C4  6ED9               	movwf	fsr2l,c
  4660  0030C6  6ADA               	clrf	fsr2h,c
  4661  0030C8  0E96               	movlw	150
  4662  0030CA  64DF               	cpfsgt	indf2,c
  4663  0030CC  D006               	goto	l3612
  4664                           
  4665                           ;Patterns.c: 417:             temp[i] -= 75;
  4666  0030CE  500B               	movf	staticWheel@i_313^0,w,c
  4667  0030D0  0F08               	addlw	low staticWheel@temp
  4668  0030D2  6ED9               	movwf	fsr2l,c
  4669  0030D4  6ADA               	clrf	fsr2h,c
  4670  0030D6  0E4B               	movlw	75
  4671  0030D8  D013               	goto	L4
  4672  0030DA                     l3612:
  4673  0030DA  500B               	movf	staticWheel@i_313^0,w,c
  4674  0030DC  0F08               	addlw	low staticWheel@temp
  4675  0030DE  6ED9               	movwf	fsr2l,c
  4676  0030E0  6ADA               	clrf	fsr2h,c
  4677  0030E2  28DE               	incf	postinc2,w,c
  4678  0030E4  B4D8               	btfsc	status,2,c
  4679  0030E6  D00D               	goto	l445
  4680  0030E8  500B               	movf	staticWheel@i_313^0,w,c
  4681  0030EA  0F08               	addlw	low staticWheel@temp
  4682  0030EC  6ED9               	movwf	fsr2l,c
  4683  0030EE  6ADA               	clrf	fsr2h,c
  4684  0030F0  0EC8               	movlw	200
  4685  0030F2  64DF               	cpfsgt	indf2,c
  4686  0030F4  D006               	goto	l445
  4687                           
  4688                           ;Patterns.c: 420:             temp[i] -= 100;
  4689  0030F6  500B               	movf	staticWheel@i_313^0,w,c
  4690  0030F8  0F08               	addlw	low staticWheel@temp
  4691  0030FA  6ED9               	movwf	fsr2l,c
  4692  0030FC  6ADA               	clrf	fsr2h,c
  4693  0030FE  0E64               	movlw	100
  4694  003100                     L4:
  4695  003100  5EDF               	subwf	indf2,f,c
  4696  003102                     l445:
  4697                           
  4698                           ;Patterns.c: 422:     }
  4699  003102  4A0B               	infsnz	staticWheel@i_313^0,f,c
  4700  003104  2A0C               	incf	(staticWheel@i_313+1)^0,f,c
  4701  003106  BE0C               	btfsc	(staticWheel@i_313+1)^0,7,c
  4702  003108  D798               	goto	l3588
  4703  00310A  500C               	movf	(staticWheel@i_313+1)^0,w,c
  4704  00310C  E104               	bnz	u3210
  4705  00310E  0E03               	movlw	3
  4706  003110  5C0B               	subwf	staticWheel@i_313^0,w,c
  4707  003112  A0D8               	btfss	status,0,c
  4708  003114  D792               	goto	l3588
  4709  003116                     u3210:
  4710                           
  4711                           ;Patterns.c: 423:     return temp;
  4712  003116  0E08               	movlw	staticWheel@temp& (0+255)
  4713  003118  0012               	return		;funcret
  4714  00311A                     __end_of_staticWheel:
  4715                           	opt callstack 0
  4716                           
  4717 ;; *************** function _RunningLightsRainbow *****************
  4718 ;; Defined at:
  4719 ;;		line 525 in file "Patterns.c"
  4720 ;; Parameters:    Size  Location     Type
  4721 ;;		None
  4722 ;; Auto vars:     Size  Location     Type
  4723 ;;  i               2   32[COMRAM] int 
  4724 ;;  i               2   30[COMRAM] int 
  4725 ;;  q               2   28[COMRAM] int 
  4726 ;;  i               2   26[COMRAM] int 
  4727 ;;  pixelOn         2   24[COMRAM] int 
  4728 ;;  c               1   34[COMRAM] PTR unsigned char 
  4729 ;;		 -> Wheel@c(3), 
  4730 ;; Return value:  Size  Location     Type
  4731 ;;                  1    wreg      void 
  4732 ;; Registers used:
  4733 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+1, btemp+2, b
      +temp+3, btemp+4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+12, btemp+13, btemp+14, btemp+15
      +, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, btemp+24, btemp+25, btemp+26, btemp+27
      +, btemp+28, btemp+29, btemp+30, btemp+31, tosl, structret, tblptrl, tblptrh, tblptru, prodl, prodh, bsr, cstack
  4734 ;; Tracked objects:
  4735 ;;		On entry : 0/0
  4736 ;;		On exit  : 0/0
  4737 ;;		Unchanged: 0/0
  4738 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4739 ;;      Params:         0       0       0       0       0       0       0       0       0
  4740 ;;      Locals:        11       0       0       0       0       0       0       0       0
  4741 ;;      Temps:          3       0       0       0       0       0       0       0       0
  4742 ;;      Totals:        14       0       0       0       0       0       0       0       0
  4743 ;;Total ram usage:       14 bytes
  4744 ;; Hardware stack levels used:    1
  4745 ;; Hardware stack levels required when called:    4
  4746 ;; This function calls:
  4747 ;;		_Delay_ms
  4748 ;;		_Show
  4749 ;;		_Time_Check
  4750 ;;		_Wheel
  4751 ;;		_setPixel
  4752 ;; This function is called by:
  4753 ;;		_main
  4754 ;; This function uses a non-reentrant model
  4755 ;;
  4756                           
  4757                           	psect	text16
  4758  002B1E                     __ptext16:
  4759                           	opt callstack 0
  4760  002B1E                     _RunningLightsRainbow:
  4761                           	opt callstack 26
  4762                           
  4763                           ;Patterns.c: 526:     int pixelOn = 5;
  4764                           
  4765                           ;incstack = 0
  4766  002B1E  0E00               	movlw	0
  4767  002B20  6E1A               	movwf	(RunningLightsRainbow@pixelOn+1)^0,c
  4768  002B22  0E05               	movlw	5
  4769  002B24  6E19               	movwf	RunningLightsRainbow@pixelOn^0,c
  4770                           
  4771                           ;Patterns.c: 527:     unsigned char *c;;Patterns.c: 528:     Time_Check(5);
  4772  002B26  0E00               	movlw	0
  4773  002B28  6E04               	movwf	(Time_Check@Time+1)^0,c
  4774  002B2A  0E05               	movlw	5
  4775  002B2C  6E03               	movwf	Time_Check@Time^0,c
  4776  002B2E  ECFC  F01D         	call	_Time_Check	;wreg free
  4777                           
  4778                           ;Patterns.c: 530:     for(int i = 0; i<255;i++){
  4779  002B32  0E00               	movlw	0
  4780  002B34  6E1C               	movwf	(RunningLightsRainbow@i+1)^0,c
  4781  002B36  0E00               	movlw	0
  4782  002B38  6E1B               	movwf	RunningLightsRainbow@i^0,c
  4783  002B3A                     l5198:
  4784                           
  4785                           ;Patterns.c: 531:         c = Wheel(i);
  4786  002B3A  C01B  F011         	movff	RunningLightsRainbow@i,Wheel@WheelPos
  4787  002B3E  C01C  F012         	movff	RunningLightsRainbow@i+1,Wheel@WheelPos+1
  4788  002B42  EC15  F01A         	call	_Wheel	;wreg free
  4789  002B46  6E23               	movwf	RunningLightsRainbow@c^0,c
  4790                           
  4791                           ; BSR set to: 0
  4792                           ;Patterns.c: 532:         for(int q = 0; q<pixelOn; q++){
  4793  002B48  0E00               	movlw	0
  4794  002B4A  6E1E               	movwf	(RunningLightsRainbow@q+1)^0,c
  4795  002B4C  0E00               	movlw	0
  4796  002B4E  6E1D               	movwf	RunningLightsRainbow@q^0,c
  4797  002B50  D078               	goto	l5240
  4798  002B52                     l5202:
  4799                           
  4800                           ;Patterns.c: 533:             for (int i=0; i < NeoNum; i=i+pixelOn) {
  4801  002B52  0E00               	movlw	0
  4802  002B54  6E20               	movwf	(RunningLightsRainbow@i_342+1)^0,c
  4803  002B56  0E00               	movlw	0
  4804  002B58  6E1F               	movwf	RunningLightsRainbow@i_342^0,c
  4805  002B5A                     l5208:
  4806                           
  4807                           ;Patterns.c: 534:                 setPixel(i+q, *c/2,*(c+1)/2,*(c+2)/2);
  4808  002B5A  501D               	movf	RunningLightsRainbow@q^0,w,c
  4809  002B5C  241F               	addwf	RunningLightsRainbow@i_342^0,w,c
  4810  002B5E  6E0D               	movwf	setPixel@n^0,c
  4811  002B60  501E               	movf	(RunningLightsRainbow@q+1)^0,w,c
  4812  002B62  2020               	addwfc	(RunningLightsRainbow@i_342+1)^0,w,c
  4813  002B64  6E0E               	movwf	(setPixel@n+1)^0,c
  4814  002B66  5023               	movf	RunningLightsRainbow@c^0,w,c
  4815  002B68  6ED9               	movwf	fsr2l,c
  4816  002B6A  6ADA               	clrf	fsr2h,c
  4817  002B6C  50DF               	movf	indf2,w,c
  4818  002B6E  6E16               	movwf	??_RunningLightsRainbow^0,c
  4819  002B70  90D8               	bcf	status,0,c
  4820  002B72  3016               	rrcf	??_RunningLightsRainbow^0,w,c
  4821  002B74  6E0F               	movwf	setPixel@red^0,c
  4822  002B76  5023               	movf	RunningLightsRainbow@c^0,w,c
  4823  002B78  6ED9               	movwf	fsr2l,c
  4824  002B7A  6ADA               	clrf	fsr2h,c
  4825  002B7C  0E01               	movlw	1
  4826  002B7E  26D9               	addwf	fsr2l,f,c
  4827  002B80  50DF               	movf	indf2,w,c
  4828  002B82  6E17               	movwf	(??_RunningLightsRainbow+1)^0,c
  4829  002B84  90D8               	bcf	status,0,c
  4830  002B86  3017               	rrcf	(??_RunningLightsRainbow+1)^0,w,c
  4831  002B88  6E10               	movwf	setPixel@green^0,c
  4832  002B8A  5023               	movf	RunningLightsRainbow@c^0,w,c
  4833  002B8C  6ED9               	movwf	fsr2l,c
  4834  002B8E  6ADA               	clrf	fsr2h,c
  4835  002B90  0E02               	movlw	2
  4836  002B92  26D9               	addwf	fsr2l,f,c
  4837  002B94  50DF               	movf	indf2,w,c
  4838  002B96  6E18               	movwf	(??_RunningLightsRainbow+2)^0,c
  4839  002B98  90D8               	bcf	status,0,c
  4840  002B9A  3018               	rrcf	(??_RunningLightsRainbow+2)^0,w,c
  4841  002B9C  6E11               	movwf	setPixel@blue^0,c
  4842  002B9E  EC44  F01C         	call	_setPixel	;wreg free
  4843                           
  4844                           ;Patterns.c: 537:             }
  4845  002BA2  5019               	movf	RunningLightsRainbow@pixelOn^0,w,c
  4846  002BA4  241F               	addwf	RunningLightsRainbow@i_342^0,w,c
  4847  002BA6  6E1F               	movwf	RunningLightsRainbow@i_342^0,c
  4848  002BA8  501A               	movf	(RunningLightsRainbow@pixelOn+1)^0,w,c
  4849  002BAA  2020               	addwfc	(RunningLightsRainbow@i_342+1)^0,w,c
  4850  002BAC  6E20               	movwf	(RunningLightsRainbow@i_342+1)^0,c
  4851  002BAE  BE20               	btfsc	(RunningLightsRainbow@i_342+1)^0,7,c
  4852  002BB0  D7D4               	goto	l5208
  4853  002BB2  5020               	movf	(RunningLightsRainbow@i_342+1)^0,w,c
  4854  002BB4  E104               	bnz	u5610
  4855  002BB6  0ED2               	movlw	210
  4856  002BB8  5C1F               	subwf	RunningLightsRainbow@i_342^0,w,c
  4857  002BBA  A0D8               	btfss	status,0,c
  4858  002BBC  D7CE               	goto	l5208
  4859  002BBE                     u5610:
  4860                           
  4861                           ;Patterns.c: 538:             if(BT_Patron != 9 || BT_rainbow != 1)return;
  4862  002BBE  0E09               	movlw	9
  4863  002BC0  185B               	xorwf	_BT_Patron^0,w,c	;volatile
  4864  002BC2  A4D8               	btfss	status,2,c
  4865  002BC4  0012               	return	
  4866  002BC6  A05C               	btfss	(_BT_rainbow/(0+8))^0,_BT_rainbow& (0+7),c	;volatile
  4867  002BC8  0012               	return	
  4868                           
  4869                           ;Patterns.c: 539:             Show();
  4870  002BCA  ECBD  F01C         	call	_Show	;wreg free
  4871                           
  4872                           ;Patterns.c: 540:             Delay_ms(BT_Tiempo);
  4873  002BCE  C05A  F003         	movff	_BT_Tiempo,Delay_ms@time	;volatile
  4874  002BD2  6A04               	clrf	(Delay_ms@time+1)^0,c
  4875  002BD4  EC51  F01D         	call	_Delay_ms	;wreg free
  4876                           
  4877                           ;Patterns.c: 541:             for (int i=0; i < NeoNum; i=i+pixelOn) {
  4878  002BD8  0E00               	movlw	0
  4879  002BDA  6E22               	movwf	(RunningLightsRainbow@i_343+1)^0,c
  4880  002BDC  0E00               	movlw	0
  4881  002BDE  6E21               	movwf	RunningLightsRainbow@i_343^0,c
  4882  002BE0                     l5228:
  4883                           
  4884                           ;Patterns.c: 542:                 setPixel(i+q,*c,*(c+1),*(c+2));
  4885  002BE0  501D               	movf	RunningLightsRainbow@q^0,w,c
  4886  002BE2  2421               	addwf	RunningLightsRainbow@i_343^0,w,c
  4887  002BE4  6E0D               	movwf	setPixel@n^0,c
  4888  002BE6  501E               	movf	(RunningLightsRainbow@q+1)^0,w,c
  4889  002BE8  2022               	addwfc	(RunningLightsRainbow@i_343+1)^0,w,c
  4890  002BEA  6E0E               	movwf	(setPixel@n+1)^0,c
  4891  002BEC  5023               	movf	RunningLightsRainbow@c^0,w,c
  4892  002BEE  6ED9               	movwf	fsr2l,c
  4893  002BF0  6ADA               	clrf	fsr2h,c
  4894  002BF2  50DF               	movf	indf2,w,c
  4895  002BF4  6E0F               	movwf	setPixel@red^0,c
  4896  002BF6  5023               	movf	RunningLightsRainbow@c^0,w,c
  4897  002BF8  6ED9               	movwf	fsr2l,c
  4898  002BFA  6ADA               	clrf	fsr2h,c
  4899  002BFC  0E01               	movlw	1
  4900  002BFE  26D9               	addwf	fsr2l,f,c
  4901  002C00  50DF               	movf	indf2,w,c
  4902  002C02  6E10               	movwf	setPixel@green^0,c
  4903  002C04  5023               	movf	RunningLightsRainbow@c^0,w,c
  4904  002C06  6ED9               	movwf	fsr2l,c
  4905  002C08  6ADA               	clrf	fsr2h,c
  4906  002C0A  0E02               	movlw	2
  4907  002C0C  26D9               	addwf	fsr2l,f,c
  4908  002C0E  50DF               	movf	indf2,w,c
  4909  002C10  6E11               	movwf	setPixel@blue^0,c
  4910  002C12  EC44  F01C         	call	_setPixel	;wreg free
  4911                           
  4912                           ;Patterns.c: 544:             }
  4913  002C16  5019               	movf	RunningLightsRainbow@pixelOn^0,w,c
  4914  002C18  2421               	addwf	RunningLightsRainbow@i_343^0,w,c
  4915  002C1A  6E21               	movwf	RunningLightsRainbow@i_343^0,c
  4916  002C1C  501A               	movf	(RunningLightsRainbow@pixelOn+1)^0,w,c
  4917  002C1E  2022               	addwfc	(RunningLightsRainbow@i_343+1)^0,w,c
  4918  002C20  6E22               	movwf	(RunningLightsRainbow@i_343+1)^0,c
  4919  002C22  BE22               	btfsc	(RunningLightsRainbow@i_343+1)^0,7,c
  4920  002C24  D7DD               	goto	l5228
  4921  002C26  5022               	movf	(RunningLightsRainbow@i_343+1)^0,w,c
  4922  002C28  E104               	bnz	u5640
  4923  002C2A  0ED2               	movlw	210
  4924  002C2C  5C21               	subwf	RunningLightsRainbow@i_343^0,w,c
  4925  002C2E  A0D8               	btfss	status,0,c
  4926  002C30  D7D7               	goto	l5228
  4927  002C32                     u5640:
  4928                           
  4929                           ;Patterns.c: 545:             if(BT_Patron != 9 || BT_rainbow != 1)return;
  4930  002C32  0E09               	movlw	9
  4931  002C34  185B               	xorwf	_BT_Patron^0,w,c	;volatile
  4932  002C36  A4D8               	btfss	status,2,c
  4933  002C38  0012               	return	
  4934  002C3A  A05C               	btfss	(_BT_rainbow/(0+8))^0,_BT_rainbow& (0+7),c	;volatile
  4935  002C3C  0012               	return	
  4936                           
  4937                           ;Patterns.c: 546:         }
  4938  002C3E  4A1D               	infsnz	RunningLightsRainbow@q^0,f,c
  4939  002C40  2A1E               	incf	(RunningLightsRainbow@q+1)^0,f,c
  4940  002C42                     l5240:
  4941  002C42  5019               	movf	RunningLightsRainbow@pixelOn^0,w,c
  4942  002C44  5C1D               	subwf	RunningLightsRainbow@q^0,w,c
  4943  002C46  501E               	movf	(RunningLightsRainbow@q+1)^0,w,c
  4944  002C48  0A80               	xorlw	128
  4945  002C4A  6E16               	movwf	??_RunningLightsRainbow^0,c
  4946  002C4C  501A               	movf	(RunningLightsRainbow@pixelOn+1)^0,w,c
  4947  002C4E  0A80               	xorlw	128
  4948  002C50  5816               	subwfb	??_RunningLightsRainbow^0,w,c
  4949  002C52  A0D8               	btfss	status,0,c
  4950  002C54  D77E               	goto	l5202
  4951                           
  4952                           ;Patterns.c: 547:     }
  4953  002C56  4A1B               	infsnz	RunningLightsRainbow@i^0,f,c
  4954  002C58  2A1C               	incf	(RunningLightsRainbow@i+1)^0,f,c
  4955  002C5A  BE1C               	btfsc	(RunningLightsRainbow@i+1)^0,7,c
  4956  002C5C  D76E               	goto	l5198
  4957  002C5E  501C               	movf	(RunningLightsRainbow@i+1)^0,w,c
  4958  002C60  E104               	bnz	u5680
  4959  002C62  281B               	incf	RunningLightsRainbow@i^0,w,c
  4960  002C64  B0D8               	btfsc	status,0,c
  4961  002C66  0012               	return	
  4962  002C68  D768               	goto	l5198
  4963  002C6A                     u5680:
  4964  002C6A  0012               	return		;funcret
  4965  002C6C                     __end_of_RunningLightsRainbow:
  4966                           	opt callstack 0
  4967                           
  4968 ;; *************** function _RunningLights *****************
  4969 ;; Defined at:
  4970 ;;		line 491 in file "Patterns.c"
  4971 ;; Parameters:    Size  Location     Type
  4972 ;;		None
  4973 ;; Auto vars:     Size  Location     Type
  4974 ;;  i               2   31[COMRAM] int 
  4975 ;;  i               2   29[COMRAM] int 
  4976 ;;  q               1   28[COMRAM] unsigned char 
  4977 ;;  pixelOn         2   26[COMRAM] int 
  4978 ;;  position        2    0        int 
  4979 ;; Return value:  Size  Location     Type
  4980 ;;                  1    wreg      void 
  4981 ;; Registers used:
  4982 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+1, btemp+2, b
      +temp+3, btemp+4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+12, btemp+13, btemp+14, btemp+15
      +, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, btemp+24, btemp+25, btemp+26, btemp+27
      +, btemp+28, btemp+29, btemp+30, btemp+31, tosl, structret, tblptrl, tblptrh, tblptru, prodl, prodh, bsr, cstack
  4983 ;; Tracked objects:
  4984 ;;		On entry : 0/0
  4985 ;;		On exit  : 0/0
  4986 ;;		Unchanged: 0/0
  4987 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4988 ;;      Params:         0       0       0       0       0       0       0       0       0
  4989 ;;      Locals:         9       0       0       0       0       0       0       0       0
  4990 ;;      Temps:          3       0       0       0       0       0       0       0       0
  4991 ;;      Totals:        12       0       0       0       0       0       0       0       0
  4992 ;;Total ram usage:       12 bytes
  4993 ;; Hardware stack levels used:    1
  4994 ;; Hardware stack levels required when called:    4
  4995 ;; This function calls:
  4996 ;;		_Delay_ms
  4997 ;;		_Show
  4998 ;;		_Time_Check
  4999 ;;		_setPixel
  5000 ;; This function is called by:
  5001 ;;		_main
  5002 ;; This function uses a non-reentrant model
  5003 ;;
  5004                           
  5005                           	psect	text17
  5006  0035E0                     __ptext17:
  5007                           	opt callstack 0
  5008  0035E0                     _RunningLights:
  5009                           	opt callstack 26
  5010                           
  5011                           ;Patterns.c: 492:     int pixelOn= 4;
  5012                           
  5013                           ;incstack = 0
  5014  0035E0  0E00               	movlw	0
  5015  0035E2  6E1C               	movwf	(RunningLights@pixelOn+1)^0,c
  5016  0035E4  0E04               	movlw	4
  5017  0035E6  6E1B               	movwf	RunningLights@pixelOn^0,c
  5018                           
  5019                           ;Patterns.c: 494:     Time_Check(3);
  5020  0035E8  0E00               	movlw	0
  5021  0035EA  6E04               	movwf	(Time_Check@Time+1)^0,c
  5022  0035EC  0E03               	movlw	3
  5023  0035EE  6E03               	movwf	Time_Check@Time^0,c
  5024  0035F0  ECFC  F01D         	call	_Time_Check	;wreg free
  5025                           
  5026                           ;Patterns.c: 495:     for (unsigned char q=0; q < pixelOn; q++) {
  5027  0035F4  0E00               	movlw	0
  5028  0035F6  6E1D               	movwf	RunningLights@q^0,c
  5029  0035F8  D04B               	goto	l5290
  5030  0035FA                     l5252:
  5031  0035FA  0E00               	movlw	0
  5032  0035FC  6E1F               	movwf	(RunningLights@i+1)^0,c
  5033  0035FE  0ED2               	movlw	210
  5034  003600  6E1E               	movwf	RunningLights@i^0,c
  5035  003602                     l5258:
  5036                           
  5037                           ;Patterns.c: 497:             setPixel(i+q, BT_RGB[0]/2, BT_RGB[1]/2, BT_RGB[2]/2);
  5038  003602  501D               	movf	RunningLights@q^0,w,c
  5039  003604  241E               	addwf	RunningLights@i^0,w,c
  5040  003606  6E0D               	movwf	setPixel@n^0,c
  5041  003608  0E00               	movlw	0
  5042  00360A  201F               	addwfc	(RunningLights@i+1)^0,w,c
  5043  00360C  6E0E               	movwf	(setPixel@n+1)^0,c
  5044  00360E  90D8               	bcf	status,0,c
  5045  003610  3057               	rrcf	_BT_RGB^0,w,c	;volatile
  5046  003612  6E0F               	movwf	setPixel@red^0,c
  5047  003614  90D8               	bcf	status,0,c
  5048  003616  3058               	rrcf	(_BT_RGB+1)^0,w,c	;volatile
  5049  003618  6E10               	movwf	setPixel@green^0,c
  5050  00361A  90D8               	bcf	status,0,c
  5051  00361C  3059               	rrcf	(_BT_RGB+2)^0,w,c	;volatile
  5052  00361E  6E11               	movwf	setPixel@blue^0,c
  5053  003620  EC44  F01C         	call	_setPixel	;wreg free
  5054                           
  5055                           ;Patterns.c: 499:         }
  5056  003624  501B               	movf	RunningLights@pixelOn^0,w,c
  5057  003626  5C1E               	subwf	RunningLights@i^0,w,c
  5058  003628  6E1E               	movwf	RunningLights@i^0,c
  5059  00362A  501C               	movf	(RunningLights@pixelOn+1)^0,w,c
  5060  00362C  581F               	subwfb	(RunningLights@i+1)^0,w,c
  5061  00362E  6E1F               	movwf	(RunningLights@i+1)^0,c
  5062  003630  AE1F               	btfss	(RunningLights@i+1)^0,7,c
  5063  003632  D7E7               	goto	l5258
  5064                           
  5065                           ;Patterns.c: 500:         if(BT_Patron != 9|| BT_rainbow != 0)return;
  5066  003634  0E09               	movlw	9
  5067  003636  185B               	xorwf	_BT_Patron^0,w,c	;volatile
  5068  003638  A4D8               	btfss	status,2,c
  5069  00363A  0012               	return	
  5070  00363C  B05C               	btfsc	(_BT_rainbow/(0+8))^0,_BT_rainbow& (0+7),c	;volatile
  5071  00363E  0012               	return	
  5072                           
  5073                           ;Patterns.c: 501:         Show();
  5074  003640  ECBD  F01C         	call	_Show	;wreg free
  5075                           
  5076                           ;Patterns.c: 502:         Delay_ms(BT_Tiempo);
  5077  003644  C05A  F003         	movff	_BT_Tiempo,Delay_ms@time	;volatile
  5078  003648  6A04               	clrf	(Delay_ms@time+1)^0,c
  5079  00364A  EC51  F01D         	call	_Delay_ms	;wreg free
  5080  00364E  0E00               	movlw	0
  5081  003650  6E21               	movwf	(RunningLights@i_336+1)^0,c
  5082  003652  0ED2               	movlw	210
  5083  003654  6E20               	movwf	RunningLights@i_336^0,c
  5084  003656                     l5278:
  5085                           
  5086                           ;Patterns.c: 504:             setPixel(i+q,BT_RGB[0], BT_RGB[1], BT_RGB[2]);
  5087  003656  501D               	movf	RunningLights@q^0,w,c
  5088  003658  2420               	addwf	RunningLights@i_336^0,w,c
  5089  00365A  6E0D               	movwf	setPixel@n^0,c
  5090  00365C  0E00               	movlw	0
  5091  00365E  2021               	addwfc	(RunningLights@i_336+1)^0,w,c
  5092  003660  6E0E               	movwf	(setPixel@n+1)^0,c
  5093  003662  C057  F00F         	movff	_BT_RGB,setPixel@red	;volatile
  5094  003666  C058  F010         	movff	_BT_RGB+1,setPixel@green	;volatile
  5095  00366A  C059  F011         	movff	_BT_RGB+2,setPixel@blue	;volatile
  5096  00366E  EC44  F01C         	call	_setPixel	;wreg free
  5097                           
  5098                           ;Patterns.c: 505:         }
  5099  003672  501B               	movf	RunningLights@pixelOn^0,w,c
  5100  003674  5C20               	subwf	RunningLights@i_336^0,w,c
  5101  003676  6E20               	movwf	RunningLights@i_336^0,c
  5102  003678  501C               	movf	(RunningLights@pixelOn+1)^0,w,c
  5103  00367A  5821               	subwfb	(RunningLights@i_336+1)^0,w,c
  5104  00367C  6E21               	movwf	(RunningLights@i_336+1)^0,c
  5105  00367E  AE21               	btfss	(RunningLights@i_336+1)^0,7,c
  5106  003680  D7EA               	goto	l5278
  5107                           
  5108                           ;Patterns.c: 506:         if(BT_Patron != 9|| BT_rainbow != 0)return;
  5109  003682  0E09               	movlw	9
  5110  003684  185B               	xorwf	_BT_Patron^0,w,c	;volatile
  5111  003686  A4D8               	btfss	status,2,c
  5112  003688  0012               	return	
  5113  00368A  B05C               	btfsc	(_BT_rainbow/(0+8))^0,_BT_rainbow& (0+7),c	;volatile
  5114  00368C  0012               	return	
  5115                           
  5116                           ;Patterns.c: 507:     }
  5117  00368E  2A1D               	incf	RunningLights@q^0,f,c
  5118  003690                     l5290:
  5119  003690  501D               	movf	RunningLights@q^0,w,c
  5120  003692  6E16               	movwf	??_RunningLights^0,c
  5121  003694  6A17               	clrf	(??_RunningLights+1)^0,c
  5122  003696  501B               	movf	RunningLights@pixelOn^0,w,c
  5123  003698  5C16               	subwf	??_RunningLights^0,w,c
  5124  00369A  5017               	movf	(??_RunningLights+1)^0,w,c
  5125  00369C  0A80               	xorlw	128
  5126  00369E  6E18               	movwf	(??_RunningLights+2)^0,c
  5127  0036A0  501C               	movf	(RunningLights@pixelOn+1)^0,w,c
  5128  0036A2  0A80               	xorlw	128
  5129  0036A4  5818               	subwfb	(??_RunningLights+2)^0,w,c
  5130  0036A6  B0D8               	btfsc	status,0,c
  5131  0036A8  0012               	return	
  5132  0036AA  D7A7               	goto	l5252
  5133  0036AC                     __end_of_RunningLights:
  5134                           	opt callstack 0
  5135                           
  5136 ;; *************** function _FadeInOut *****************
  5137 ;; Defined at:
  5138 ;;		line 174 in file "Patterns.c"
  5139 ;; Parameters:    Size  Location     Type
  5140 ;;		None
  5141 ;; Auto vars:     Size  Location     Type
  5142 ;;  k               2   80[COMRAM] int 
  5143 ;;  k               2   78[COMRAM] int 
  5144 ;;  b               4   74[COMRAM] float 
  5145 ;;  g               4   70[COMRAM] float 
  5146 ;;  r               4   66[COMRAM] float 
  5147 ;; Return value:  Size  Location     Type
  5148 ;;                  1    wreg      void 
  5149 ;; Registers used:
  5150 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+1, btemp+2, b
      +temp+3, btemp+4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+12, btemp+13, btemp+14, btemp+15
      +, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, btemp+24, btemp+25, btemp+26, btemp+27
      +, btemp+28, btemp+29, btemp+30, btemp+31, tosl, structret, tblptrl, tblptrh, tblptru, prodl, prodh, bsr, cstack
  5151 ;; Tracked objects:
  5152 ;;		On entry : 0/0
  5153 ;;		On exit  : 0/0
  5154 ;;		Unchanged: 0/0
  5155 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5156 ;;      Params:         0       0       0       0       0       0       0       0       0
  5157 ;;      Locals:        16       0       0       0       0       0       0       0       0
  5158 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5159 ;;      Totals:        16       0       0       0       0       0       0       0       0
  5160 ;;Total ram usage:       16 bytes
  5161 ;; Hardware stack levels used:    1
  5162 ;; Hardware stack levels required when called:    5
  5163 ;; This function calls:
  5164 ;;		_Delay_ms
  5165 ;;		_Show
  5166 ;;		_Time_Check
  5167 ;;		___fldiv
  5168 ;;		___flmul
  5169 ;;		___fltol
  5170 ;;		___xxtofl
  5171 ;;		_setAll
  5172 ;; This function is called by:
  5173 ;;		_main
  5174 ;; This function uses a non-reentrant model
  5175 ;;
  5176                           
  5177                           	psect	text18
  5178  001108                     __ptext18:
  5179                           	opt callstack 0
  5180  001108                     _FadeInOut:
  5181                           	opt callstack 25
  5182                           
  5183                           ;Patterns.c: 175:     float r, g, b;;Patterns.c: 176:     Time_Check(5);
  5184                           
  5185                           ;incstack = 0
  5186  001108  0E00               	movlw	0
  5187  00110A  6E04               	movwf	(Time_Check@Time+1)^0,c
  5188  00110C  0E05               	movlw	5
  5189  00110E  6E03               	movwf	Time_Check@Time^0,c
  5190  001110  ECFC  F01D         	call	_Time_Check	;wreg free
  5191                           
  5192                           ;Patterns.c: 177:     for(int k = 0; k < 255; k=k+1) {
  5193  001114  0E00               	movlw	0
  5194  001116  6E50               	movwf	(FadeInOut@k+1)^0,c
  5195  001118  0E00               	movlw	0
  5196  00111A  6E4F               	movwf	FadeInOut@k^0,c
  5197  00111C                     l4626:
  5198                           
  5199                           ;Patterns.c: 178:         r = (k/255.0)*BT_RGB[0];
  5200  00111C  0E00               	movlw	0
  5201  00111E  6E15               	movwf	___fldiv@a^0,c
  5202  001120  0E00               	movlw	0
  5203  001122  6E16               	movwf	(___fldiv@a+1)^0,c
  5204  001124  0E7F               	movlw	127
  5205  001126  6E17               	movwf	(___fldiv@a+2)^0,c
  5206  001128  0E43               	movlw	67
  5207  00112A  6E18               	movwf	(___fldiv@a+3)^0,c
  5208  00112C  C04F  F003         	movff	FadeInOut@k,___xxtofl@val
  5209  001130  C050  F004         	movff	FadeInOut@k+1,___xxtofl@val+1
  5210  001134  0E00               	movlw	0
  5211  001136  BE04               	btfsc	(___xxtofl@val+1)^0,7,c
  5212  001138  0EFF               	movlw	-1
  5213  00113A  6E05               	movwf	(___xxtofl@val+2)^0,c
  5214  00113C  6E06               	movwf	(___xxtofl@val+3)^0,c
  5215  00113E  0E01               	movlw	1
  5216  001140  EC36  F016         	call	___xxtofl
  5217  001144  C003  F011         	movff	?___xxtofl,___fldiv@b
  5218  001148  C004  F012         	movff	?___xxtofl+1,___fldiv@b+1
  5219  00114C  C005  F013         	movff	?___xxtofl+2,___fldiv@b+2
  5220  001150  C006  F014         	movff	?___xxtofl+3,___fldiv@b+3
  5221  001154  ECDA  F010         	call	___fldiv	;wreg free
  5222  001158  C011  F02A         	movff	?___fldiv,___flmul@b
  5223  00115C  C012  F02B         	movff	?___fldiv+1,___flmul@b+1
  5224  001160  C013  F02C         	movff	?___fldiv+2,___flmul@b+2
  5225  001164  C014  F02D         	movff	?___fldiv+3,___flmul@b+3
  5226  001168  5057               	movf	_BT_RGB^0,w,c	;volatile
  5227  00116A  6E03               	movwf	___xxtofl@val^0,c
  5228  00116C  6A04               	clrf	(___xxtofl@val+1)^0,c
  5229  00116E  6A05               	clrf	(___xxtofl@val+2)^0,c
  5230  001170  6A06               	clrf	(___xxtofl@val+3)^0,c
  5231  001172  0E01               	movlw	1
  5232  001174  EC36  F016         	call	___xxtofl
  5233  001178  C003  F02E         	movff	?___xxtofl,___flmul@a
  5234  00117C  C004  F02F         	movff	?___xxtofl+1,___flmul@a+1
  5235  001180  C005  F030         	movff	?___xxtofl+2,___flmul@a+2
  5236  001184  C006  F031         	movff	?___xxtofl+3,___flmul@a+3
  5237  001188  EC81  F00C         	call	___flmul	;wreg free
  5238  00118C  C02A  F043         	movff	?___flmul,FadeInOut@r
  5239  001190  C02B  F044         	movff	?___flmul+1,FadeInOut@r+1
  5240  001194  C02C  F045         	movff	?___flmul+2,FadeInOut@r+2
  5241  001198  C02D  F046         	movff	?___flmul+3,FadeInOut@r+3
  5242                           
  5243                           ;Patterns.c: 179:         g = (k/255.0)*BT_RGB[1];
  5244  00119C  0E00               	movlw	0
  5245  00119E  6E15               	movwf	___fldiv@a^0,c
  5246  0011A0  0E00               	movlw	0
  5247  0011A2  6E16               	movwf	(___fldiv@a+1)^0,c
  5248  0011A4  0E7F               	movlw	127
  5249  0011A6  6E17               	movwf	(___fldiv@a+2)^0,c
  5250  0011A8  0E43               	movlw	67
  5251  0011AA  6E18               	movwf	(___fldiv@a+3)^0,c
  5252  0011AC  C04F  F003         	movff	FadeInOut@k,___xxtofl@val
  5253  0011B0  C050  F004         	movff	FadeInOut@k+1,___xxtofl@val+1
  5254  0011B4  0E00               	movlw	0
  5255  0011B6  BE04               	btfsc	(___xxtofl@val+1)^0,7,c
  5256  0011B8  0EFF               	movlw	-1
  5257  0011BA  6E05               	movwf	(___xxtofl@val+2)^0,c
  5258  0011BC  6E06               	movwf	(___xxtofl@val+3)^0,c
  5259  0011BE  0E01               	movlw	1
  5260  0011C0  EC36  F016         	call	___xxtofl
  5261  0011C4  C003  F011         	movff	?___xxtofl,___fldiv@b
  5262  0011C8  C004  F012         	movff	?___xxtofl+1,___fldiv@b+1
  5263  0011CC  C005  F013         	movff	?___xxtofl+2,___fldiv@b+2
  5264  0011D0  C006  F014         	movff	?___xxtofl+3,___fldiv@b+3
  5265  0011D4  ECDA  F010         	call	___fldiv	;wreg free
  5266  0011D8  C011  F02A         	movff	?___fldiv,___flmul@b
  5267  0011DC  C012  F02B         	movff	?___fldiv+1,___flmul@b+1
  5268  0011E0  C013  F02C         	movff	?___fldiv+2,___flmul@b+2
  5269  0011E4  C014  F02D         	movff	?___fldiv+3,___flmul@b+3
  5270  0011E8  5058               	movf	(_BT_RGB+1)^0,w,c	;volatile
  5271  0011EA  6E03               	movwf	___xxtofl@val^0,c
  5272  0011EC  6A04               	clrf	(___xxtofl@val+1)^0,c
  5273  0011EE  6A05               	clrf	(___xxtofl@val+2)^0,c
  5274  0011F0  6A06               	clrf	(___xxtofl@val+3)^0,c
  5275  0011F2  0E01               	movlw	1
  5276  0011F4  EC36  F016         	call	___xxtofl
  5277  0011F8  C003  F02E         	movff	?___xxtofl,___flmul@a
  5278  0011FC  C004  F02F         	movff	?___xxtofl+1,___flmul@a+1
  5279  001200  C005  F030         	movff	?___xxtofl+2,___flmul@a+2
  5280  001204  C006  F031         	movff	?___xxtofl+3,___flmul@a+3
  5281  001208  EC81  F00C         	call	___flmul	;wreg free
  5282  00120C  C02A  F047         	movff	?___flmul,FadeInOut@g
  5283  001210  C02B  F048         	movff	?___flmul+1,FadeInOut@g+1
  5284  001214  C02C  F049         	movff	?___flmul+2,FadeInOut@g+2
  5285  001218  C02D  F04A         	movff	?___flmul+3,FadeInOut@g+3
  5286                           
  5287                           ;Patterns.c: 180:         b = (k/255.0)*BT_RGB[2];
  5288  00121C  0E00               	movlw	0
  5289  00121E  6E15               	movwf	___fldiv@a^0,c
  5290  001220  0E00               	movlw	0
  5291  001222  6E16               	movwf	(___fldiv@a+1)^0,c
  5292  001224  0E7F               	movlw	127
  5293  001226  6E17               	movwf	(___fldiv@a+2)^0,c
  5294  001228  0E43               	movlw	67
  5295  00122A  6E18               	movwf	(___fldiv@a+3)^0,c
  5296  00122C  C04F  F003         	movff	FadeInOut@k,___xxtofl@val
  5297  001230  C050  F004         	movff	FadeInOut@k+1,___xxtofl@val+1
  5298  001234  0E00               	movlw	0
  5299  001236  BE04               	btfsc	(___xxtofl@val+1)^0,7,c
  5300  001238  0EFF               	movlw	-1
  5301  00123A  6E05               	movwf	(___xxtofl@val+2)^0,c
  5302  00123C  6E06               	movwf	(___xxtofl@val+3)^0,c
  5303  00123E  0E01               	movlw	1
  5304  001240  EC36  F016         	call	___xxtofl
  5305  001244  C003  F011         	movff	?___xxtofl,___fldiv@b
  5306  001248  C004  F012         	movff	?___xxtofl+1,___fldiv@b+1
  5307  00124C  C005  F013         	movff	?___xxtofl+2,___fldiv@b+2
  5308  001250  C006  F014         	movff	?___xxtofl+3,___fldiv@b+3
  5309  001254  ECDA  F010         	call	___fldiv	;wreg free
  5310  001258  C011  F02A         	movff	?___fldiv,___flmul@b
  5311  00125C  C012  F02B         	movff	?___fldiv+1,___flmul@b+1
  5312  001260  C013  F02C         	movff	?___fldiv+2,___flmul@b+2
  5313  001264  C014  F02D         	movff	?___fldiv+3,___flmul@b+3
  5314  001268  5059               	movf	(_BT_RGB+2)^0,w,c	;volatile
  5315  00126A  6E03               	movwf	___xxtofl@val^0,c
  5316  00126C  6A04               	clrf	(___xxtofl@val+1)^0,c
  5317  00126E  6A05               	clrf	(___xxtofl@val+2)^0,c
  5318  001270  6A06               	clrf	(___xxtofl@val+3)^0,c
  5319  001272  0E01               	movlw	1
  5320  001274  EC36  F016         	call	___xxtofl
  5321  001278  C003  F02E         	movff	?___xxtofl,___flmul@a
  5322  00127C  C004  F02F         	movff	?___xxtofl+1,___flmul@a+1
  5323  001280  C005  F030         	movff	?___xxtofl+2,___flmul@a+2
  5324  001284  C006  F031         	movff	?___xxtofl+3,___flmul@a+3
  5325  001288  EC81  F00C         	call	___flmul	;wreg free
  5326  00128C  C02A  F04B         	movff	?___flmul,FadeInOut@b
  5327  001290  C02B  F04C         	movff	?___flmul+1,FadeInOut@b+1
  5328  001294  C02C  F04D         	movff	?___flmul+2,FadeInOut@b+2
  5329  001298  C02D  F04E         	movff	?___flmul+3,FadeInOut@b+3
  5330                           
  5331                           ;Patterns.c: 181:         setAll(r,g,b);
  5332  00129C  C047  F003         	movff	FadeInOut@g,___fltol@f1
  5333  0012A0  C048  F004         	movff	FadeInOut@g+1,___fltol@f1+1
  5334  0012A4  C049  F005         	movff	FadeInOut@g+2,___fltol@f1+2
  5335  0012A8  C04A  F006         	movff	FadeInOut@g+3,___fltol@f1+3
  5336  0012AC  EC56  F01B         	call	___fltol	;wreg free
  5337  0012B0  5003               	movf	?___fltol^0,w,c
  5338  0012B2  6E16               	movwf	setAll@Green^0,c
  5339  0012B4  C04B  F003         	movff	FadeInOut@b,___fltol@f1
  5340  0012B8  C04C  F004         	movff	FadeInOut@b+1,___fltol@f1+1
  5341  0012BC  C04D  F005         	movff	FadeInOut@b+2,___fltol@f1+2
  5342  0012C0  C04E  F006         	movff	FadeInOut@b+3,___fltol@f1+3
  5343  0012C4  EC56  F01B         	call	___fltol	;wreg free
  5344  0012C8  5003               	movf	?___fltol^0,w,c
  5345  0012CA  6E17               	movwf	setAll@Blue^0,c
  5346  0012CC  C043  F003         	movff	FadeInOut@r,___fltol@f1
  5347  0012D0  C044  F004         	movff	FadeInOut@r+1,___fltol@f1+1
  5348  0012D4  C045  F005         	movff	FadeInOut@r+2,___fltol@f1+2
  5349  0012D8  C046  F006         	movff	FadeInOut@r+3,___fltol@f1+3
  5350  0012DC  EC56  F01B         	call	___fltol	;wreg free
  5351  0012E0  5003               	movf	?___fltol^0,w,c
  5352  0012E2  EC73  F01D         	call	_setAll
  5353                           
  5354                           ;Patterns.c: 182:         if( BT_Patron!= 2|| BT_rainbow != 0)return;
  5355  0012E6  0E02               	movlw	2
  5356  0012E8  185B               	xorwf	_BT_Patron^0,w,c	;volatile
  5357  0012EA  A4D8               	btfss	status,2,c
  5358  0012EC  0012               	return	
  5359  0012EE  B05C               	btfsc	(_BT_rainbow/(0+8))^0,_BT_rainbow& (0+7),c	;volatile
  5360  0012F0  0012               	return	
  5361                           
  5362                           ;Patterns.c: 183:         Show();
  5363  0012F2  ECBD  F01C         	call	_Show	;wreg free
  5364                           
  5365                           ;Patterns.c: 184:         Delay_ms(BT_Tiempo);
  5366  0012F6  C05A  F003         	movff	_BT_Tiempo,Delay_ms@time	;volatile
  5367  0012FA  6A04               	clrf	(Delay_ms@time+1)^0,c
  5368  0012FC  EC51  F01D         	call	_Delay_ms	;wreg free
  5369                           
  5370                           ;Patterns.c: 185:   }
  5371  001300  0E01               	movlw	1
  5372  001302  244F               	addwf	FadeInOut@k^0,w,c
  5373  001304  6E4F               	movwf	FadeInOut@k^0,c
  5374  001306  0E00               	movlw	0
  5375  001308  2050               	addwfc	(FadeInOut@k+1)^0,w,c
  5376  00130A  6E50               	movwf	(FadeInOut@k+1)^0,c
  5377  00130C  BE50               	btfsc	(FadeInOut@k+1)^0,7,c
  5378  00130E  D706               	goto	l4626
  5379  001310  5050               	movf	(FadeInOut@k+1)^0,w,c
  5380  001312  E103               	bnz	u4920
  5381  001314  284F               	incf	FadeInOut@k^0,w,c
  5382  001316  A0D8               	btfss	status,0,c
  5383  001318  D701               	goto	l4626
  5384  00131A                     u4920:
  5385                           
  5386                           ;Patterns.c: 186:     for(int k = 255; k >0; k=k-2) {
  5387  00131A  0E00               	movlw	0
  5388  00131C  6E52               	movwf	(FadeInOut@k_264+1)^0,c
  5389  00131E  6851               	setf	FadeInOut@k_264^0,c
  5390  001320                     l4648:
  5391                           
  5392                           ;Patterns.c: 187:         r = (k/255.0)*BT_RGB[0];
  5393  001320  0E00               	movlw	0
  5394  001322  6E15               	movwf	___fldiv@a^0,c
  5395  001324  0E00               	movlw	0
  5396  001326  6E16               	movwf	(___fldiv@a+1)^0,c
  5397  001328  0E7F               	movlw	127
  5398  00132A  6E17               	movwf	(___fldiv@a+2)^0,c
  5399  00132C  0E43               	movlw	67
  5400  00132E  6E18               	movwf	(___fldiv@a+3)^0,c
  5401  001330  C051  F003         	movff	FadeInOut@k_264,___xxtofl@val
  5402  001334  C052  F004         	movff	FadeInOut@k_264+1,___xxtofl@val+1
  5403  001338  0E00               	movlw	0
  5404  00133A  BE04               	btfsc	(___xxtofl@val+1)^0,7,c
  5405  00133C  0EFF               	movlw	-1
  5406  00133E  6E05               	movwf	(___xxtofl@val+2)^0,c
  5407  001340  6E06               	movwf	(___xxtofl@val+3)^0,c
  5408  001342  0E01               	movlw	1
  5409  001344  EC36  F016         	call	___xxtofl
  5410  001348  C003  F011         	movff	?___xxtofl,___fldiv@b
  5411  00134C  C004  F012         	movff	?___xxtofl+1,___fldiv@b+1
  5412  001350  C005  F013         	movff	?___xxtofl+2,___fldiv@b+2
  5413  001354  C006  F014         	movff	?___xxtofl+3,___fldiv@b+3
  5414  001358  ECDA  F010         	call	___fldiv	;wreg free
  5415  00135C  C011  F02A         	movff	?___fldiv,___flmul@b
  5416  001360  C012  F02B         	movff	?___fldiv+1,___flmul@b+1
  5417  001364  C013  F02C         	movff	?___fldiv+2,___flmul@b+2
  5418  001368  C014  F02D         	movff	?___fldiv+3,___flmul@b+3
  5419  00136C  5057               	movf	_BT_RGB^0,w,c	;volatile
  5420  00136E  6E03               	movwf	___xxtofl@val^0,c
  5421  001370  6A04               	clrf	(___xxtofl@val+1)^0,c
  5422  001372  6A05               	clrf	(___xxtofl@val+2)^0,c
  5423  001374  6A06               	clrf	(___xxtofl@val+3)^0,c
  5424  001376  0E01               	movlw	1
  5425  001378  EC36  F016         	call	___xxtofl
  5426  00137C  C003  F02E         	movff	?___xxtofl,___flmul@a
  5427  001380  C004  F02F         	movff	?___xxtofl+1,___flmul@a+1
  5428  001384  C005  F030         	movff	?___xxtofl+2,___flmul@a+2
  5429  001388  C006  F031         	movff	?___xxtofl+3,___flmul@a+3
  5430  00138C  EC81  F00C         	call	___flmul	;wreg free
  5431  001390  C02A  F043         	movff	?___flmul,FadeInOut@r
  5432  001394  C02B  F044         	movff	?___flmul+1,FadeInOut@r+1
  5433  001398  C02C  F045         	movff	?___flmul+2,FadeInOut@r+2
  5434  00139C  C02D  F046         	movff	?___flmul+3,FadeInOut@r+3
  5435                           
  5436                           ;Patterns.c: 188:         g = (k/255.0)*BT_RGB[1];
  5437  0013A0  0E00               	movlw	0
  5438  0013A2  6E15               	movwf	___fldiv@a^0,c
  5439  0013A4  0E00               	movlw	0
  5440  0013A6  6E16               	movwf	(___fldiv@a+1)^0,c
  5441  0013A8  0E7F               	movlw	127
  5442  0013AA  6E17               	movwf	(___fldiv@a+2)^0,c
  5443  0013AC  0E43               	movlw	67
  5444  0013AE  6E18               	movwf	(___fldiv@a+3)^0,c
  5445  0013B0  C051  F003         	movff	FadeInOut@k_264,___xxtofl@val
  5446  0013B4  C052  F004         	movff	FadeInOut@k_264+1,___xxtofl@val+1
  5447  0013B8  0E00               	movlw	0
  5448  0013BA  BE04               	btfsc	(___xxtofl@val+1)^0,7,c
  5449  0013BC  0EFF               	movlw	-1
  5450  0013BE  6E05               	movwf	(___xxtofl@val+2)^0,c
  5451  0013C0  6E06               	movwf	(___xxtofl@val+3)^0,c
  5452  0013C2  0E01               	movlw	1
  5453  0013C4  EC36  F016         	call	___xxtofl
  5454  0013C8  C003  F011         	movff	?___xxtofl,___fldiv@b
  5455  0013CC  C004  F012         	movff	?___xxtofl+1,___fldiv@b+1
  5456  0013D0  C005  F013         	movff	?___xxtofl+2,___fldiv@b+2
  5457  0013D4  C006  F014         	movff	?___xxtofl+3,___fldiv@b+3
  5458  0013D8  ECDA  F010         	call	___fldiv	;wreg free
  5459  0013DC  C011  F02A         	movff	?___fldiv,___flmul@b
  5460  0013E0  C012  F02B         	movff	?___fldiv+1,___flmul@b+1
  5461  0013E4  C013  F02C         	movff	?___fldiv+2,___flmul@b+2
  5462  0013E8  C014  F02D         	movff	?___fldiv+3,___flmul@b+3
  5463  0013EC  5058               	movf	(_BT_RGB+1)^0,w,c	;volatile
  5464  0013EE  6E03               	movwf	___xxtofl@val^0,c
  5465  0013F0  6A04               	clrf	(___xxtofl@val+1)^0,c
  5466  0013F2  6A05               	clrf	(___xxtofl@val+2)^0,c
  5467  0013F4  6A06               	clrf	(___xxtofl@val+3)^0,c
  5468  0013F6  0E01               	movlw	1
  5469  0013F8  EC36  F016         	call	___xxtofl
  5470  0013FC  C003  F02E         	movff	?___xxtofl,___flmul@a
  5471  001400  C004  F02F         	movff	?___xxtofl+1,___flmul@a+1
  5472  001404  C005  F030         	movff	?___xxtofl+2,___flmul@a+2
  5473  001408  C006  F031         	movff	?___xxtofl+3,___flmul@a+3
  5474  00140C  EC81  F00C         	call	___flmul	;wreg free
  5475  001410  C02A  F047         	movff	?___flmul,FadeInOut@g
  5476  001414  C02B  F048         	movff	?___flmul+1,FadeInOut@g+1
  5477  001418  C02C  F049         	movff	?___flmul+2,FadeInOut@g+2
  5478  00141C  C02D  F04A         	movff	?___flmul+3,FadeInOut@g+3
  5479                           
  5480                           ;Patterns.c: 189:         b = (k/255.0)*BT_RGB[2];
  5481  001420  0E00               	movlw	0
  5482  001422  6E15               	movwf	___fldiv@a^0,c
  5483  001424  0E00               	movlw	0
  5484  001426  6E16               	movwf	(___fldiv@a+1)^0,c
  5485  001428  0E7F               	movlw	127
  5486  00142A  6E17               	movwf	(___fldiv@a+2)^0,c
  5487  00142C  0E43               	movlw	67
  5488  00142E  6E18               	movwf	(___fldiv@a+3)^0,c
  5489  001430  C051  F003         	movff	FadeInOut@k_264,___xxtofl@val
  5490  001434  C052  F004         	movff	FadeInOut@k_264+1,___xxtofl@val+1
  5491  001438  0E00               	movlw	0
  5492  00143A  BE04               	btfsc	(___xxtofl@val+1)^0,7,c
  5493  00143C  0EFF               	movlw	-1
  5494  00143E  6E05               	movwf	(___xxtofl@val+2)^0,c
  5495  001440  6E06               	movwf	(___xxtofl@val+3)^0,c
  5496  001442  0E01               	movlw	1
  5497  001444  EC36  F016         	call	___xxtofl
  5498  001448  C003  F011         	movff	?___xxtofl,___fldiv@b
  5499  00144C  C004  F012         	movff	?___xxtofl+1,___fldiv@b+1
  5500  001450  C005  F013         	movff	?___xxtofl+2,___fldiv@b+2
  5501  001454  C006  F014         	movff	?___xxtofl+3,___fldiv@b+3
  5502  001458  ECDA  F010         	call	___fldiv	;wreg free
  5503  00145C  C011  F02A         	movff	?___fldiv,___flmul@b
  5504  001460  C012  F02B         	movff	?___fldiv+1,___flmul@b+1
  5505  001464  C013  F02C         	movff	?___fldiv+2,___flmul@b+2
  5506  001468  C014  F02D         	movff	?___fldiv+3,___flmul@b+3
  5507  00146C  5059               	movf	(_BT_RGB+2)^0,w,c	;volatile
  5508  00146E  6E03               	movwf	___xxtofl@val^0,c
  5509  001470  6A04               	clrf	(___xxtofl@val+1)^0,c
  5510  001472  6A05               	clrf	(___xxtofl@val+2)^0,c
  5511  001474  6A06               	clrf	(___xxtofl@val+3)^0,c
  5512  001476  0E01               	movlw	1
  5513  001478  EC36  F016         	call	___xxtofl
  5514  00147C  C003  F02E         	movff	?___xxtofl,___flmul@a
  5515  001480  C004  F02F         	movff	?___xxtofl+1,___flmul@a+1
  5516  001484  C005  F030         	movff	?___xxtofl+2,___flmul@a+2
  5517  001488  C006  F031         	movff	?___xxtofl+3,___flmul@a+3
  5518  00148C  EC81  F00C         	call	___flmul	;wreg free
  5519  001490  C02A  F04B         	movff	?___flmul,FadeInOut@b
  5520  001494  C02B  F04C         	movff	?___flmul+1,FadeInOut@b+1
  5521  001498  C02C  F04D         	movff	?___flmul+2,FadeInOut@b+2
  5522  00149C  C02D  F04E         	movff	?___flmul+3,FadeInOut@b+3
  5523                           
  5524                           ;Patterns.c: 190:         setAll(r,g,b);
  5525  0014A0  C047  F003         	movff	FadeInOut@g,___fltol@f1
  5526  0014A4  C048  F004         	movff	FadeInOut@g+1,___fltol@f1+1
  5527  0014A8  C049  F005         	movff	FadeInOut@g+2,___fltol@f1+2
  5528  0014AC  C04A  F006         	movff	FadeInOut@g+3,___fltol@f1+3
  5529  0014B0  EC56  F01B         	call	___fltol	;wreg free
  5530  0014B4  5003               	movf	?___fltol^0,w,c
  5531  0014B6  6E16               	movwf	setAll@Green^0,c
  5532  0014B8  C04B  F003         	movff	FadeInOut@b,___fltol@f1
  5533  0014BC  C04C  F004         	movff	FadeInOut@b+1,___fltol@f1+1
  5534  0014C0  C04D  F005         	movff	FadeInOut@b+2,___fltol@f1+2
  5535  0014C4  C04E  F006         	movff	FadeInOut@b+3,___fltol@f1+3
  5536  0014C8  EC56  F01B         	call	___fltol	;wreg free
  5537  0014CC  5003               	movf	?___fltol^0,w,c
  5538  0014CE  6E17               	movwf	setAll@Blue^0,c
  5539  0014D0  C043  F003         	movff	FadeInOut@r,___fltol@f1
  5540  0014D4  C044  F004         	movff	FadeInOut@r+1,___fltol@f1+1
  5541  0014D8  C045  F005         	movff	FadeInOut@r+2,___fltol@f1+2
  5542  0014DC  C046  F006         	movff	FadeInOut@r+3,___fltol@f1+3
  5543  0014E0  EC56  F01B         	call	___fltol	;wreg free
  5544  0014E4  5003               	movf	?___fltol^0,w,c
  5545  0014E6  EC73  F01D         	call	_setAll
  5546                           
  5547                           ;Patterns.c: 191:         if( BT_Patron!= 2|| BT_rainbow != 0)return;
  5548  0014EA  0E02               	movlw	2
  5549  0014EC  185B               	xorwf	_BT_Patron^0,w,c	;volatile
  5550  0014EE  A4D8               	btfss	status,2,c
  5551  0014F0  0012               	return	
  5552  0014F2  B05C               	btfsc	(_BT_rainbow/(0+8))^0,_BT_rainbow& (0+7),c	;volatile
  5553  0014F4  0012               	return	
  5554                           
  5555                           ;Patterns.c: 192:         Show();
  5556  0014F6  ECBD  F01C         	call	_Show	;wreg free
  5557                           
  5558                           ;Patterns.c: 193:         Delay_ms(BT_Tiempo);
  5559  0014FA  C05A  F003         	movff	_BT_Tiempo,Delay_ms@time	;volatile
  5560  0014FE  6A04               	clrf	(Delay_ms@time+1)^0,c
  5561  001500  EC51  F01D         	call	_Delay_ms	;wreg free
  5562                           
  5563                           ;Patterns.c: 194:       }
  5564  001504  0EFE               	movlw	254
  5565  001506  2451               	addwf	FadeInOut@k_264^0,w,c
  5566  001508  6E51               	movwf	FadeInOut@k_264^0,c
  5567  00150A  0EFF               	movlw	255
  5568  00150C  2052               	addwfc	(FadeInOut@k_264+1)^0,w,c
  5569  00150E  6E52               	movwf	(FadeInOut@k_264+1)^0,c
  5570  001510  BE52               	btfsc	(FadeInOut@k_264+1)^0,7,c
  5571  001512  0012               	return	
  5572  001514  5052               	movf	(FadeInOut@k_264+1)^0,w,c
  5573  001516  E103               	bnz	u4951
  5574  001518  0451               	decf	FadeInOut@k_264^0,w,c
  5575  00151A  A0D8               	btfss	status,0,c
  5576  00151C  0012               	return	
  5577  00151E                     u4951:
  5578  00151E  D700               	goto	l4648
  5579  001520                     __end_of_FadeInOut:
  5580                           	opt callstack 0
  5581                           
  5582 ;; *************** function _FadeAllcolors *****************
  5583 ;; Defined at:
  5584 ;;		line 451 in file "Patterns.c"
  5585 ;; Parameters:    Size  Location     Type
  5586 ;;		None
  5587 ;; Auto vars:     Size  Location     Type
  5588 ;;  k               2   83[COMRAM] int 
  5589 ;;  k               2   81[COMRAM] int 
  5590 ;;  j               2   79[COMRAM] int 
  5591 ;;  b               4   75[COMRAM] float 
  5592 ;;  g               4   71[COMRAM] float 
  5593 ;;  r               4   67[COMRAM] float 
  5594 ;;  c               1   85[COMRAM] PTR unsigned char 
  5595 ;;		 -> Wheel@c(3), 
  5596 ;; Return value:  Size  Location     Type
  5597 ;;                  1    wreg      void 
  5598 ;; Registers used:
  5599 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+1, btemp+2, b
      +temp+3, btemp+4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+12, btemp+13, btemp+14, btemp+15
      +, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, btemp+24, btemp+25, btemp+26, btemp+27
      +, btemp+28, btemp+29, btemp+30, btemp+31, tosl, structret, tblptrl, tblptrh, tblptru, prodl, prodh, bsr, cstack
  5600 ;; Tracked objects:
  5601 ;;		On entry : 0/0
  5602 ;;		On exit  : 0/0
  5603 ;;		Unchanged: 0/0
  5604 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5605 ;;      Params:         0       0       0       0       0       0       0       0       0
  5606 ;;      Locals:        19       0       0       0       0       0       0       0       0
  5607 ;;      Temps:          1       0       0       0       0       0       0       0       0
  5608 ;;      Totals:        20       0       0       0       0       0       0       0       0
  5609 ;;Total ram usage:       20 bytes
  5610 ;; Hardware stack levels used:    1
  5611 ;; Hardware stack levels required when called:    5
  5612 ;; This function calls:
  5613 ;;		_Delay_ms
  5614 ;;		_Time_Check
  5615 ;;		_Wheel
  5616 ;;		___fldiv
  5617 ;;		___flmul
  5618 ;;		___fltol
  5619 ;;		___xxtofl
  5620 ;;		_setAll
  5621 ;; This function is called by:
  5622 ;;		_main
  5623 ;; This function uses a non-reentrant model
  5624 ;;
  5625                           
  5626                           	psect	text19
  5627  00080A                     __ptext19:
  5628                           	opt callstack 0
  5629  00080A                     _FadeAllcolors:
  5630                           	opt callstack 25
  5631                           
  5632                           ;Patterns.c: 452:     unsigned char *c;;Patterns.c: 453:     float r, g, b;;Patterns.c: 
      +                          454:     Time_Check(5);
  5633                           
  5634                           ;incstack = 0
  5635  00080A  0E00               	movlw	0
  5636  00080C  6E04               	movwf	(Time_Check@Time+1)^0,c
  5637  00080E  0E05               	movlw	5
  5638  000810  6E03               	movwf	Time_Check@Time^0,c
  5639  000812  ECFC  F01D         	call	_Time_Check	;wreg free
  5640                           
  5641                           ;Patterns.c: 455:     for(int j=0;j<255;j=j+25){
  5642  000816  0E00               	movlw	0
  5643  000818  6E51               	movwf	(FadeAllcolors@j+1)^0,c
  5644  00081A  0E00               	movlw	0
  5645  00081C  6E50               	movwf	FadeAllcolors@j^0,c
  5646  00081E                     l5106:
  5647                           
  5648                           ;Patterns.c: 456:         c = Wheel(j);
  5649  00081E  C050  F011         	movff	FadeAllcolors@j,Wheel@WheelPos
  5650  000822  C051  F012         	movff	FadeAllcolors@j+1,Wheel@WheelPos+1
  5651  000826  EC15  F01A         	call	_Wheel	;wreg free
  5652  00082A  6E56               	movwf	FadeAllcolors@c^0,c
  5653                           
  5654                           ; BSR set to: 0
  5655                           ;Patterns.c: 457:         for(int k = 0; k < 255; k=k+1) {
  5656  00082C  0E00               	movlw	0
  5657  00082E  6E53               	movwf	(FadeAllcolors@k+1)^0,c
  5658  000830  0E00               	movlw	0
  5659  000832  6E52               	movwf	FadeAllcolors@k^0,c
  5660  000834                     l5114:
  5661                           
  5662                           ;Patterns.c: 458:             r = (k/255.0)*(*c);
  5663  000834  0E00               	movlw	0
  5664  000836  6E15               	movwf	___fldiv@a^0,c
  5665  000838  0E00               	movlw	0
  5666  00083A  6E16               	movwf	(___fldiv@a+1)^0,c
  5667  00083C  0E7F               	movlw	127
  5668  00083E  6E17               	movwf	(___fldiv@a+2)^0,c
  5669  000840  0E43               	movlw	67
  5670  000842  6E18               	movwf	(___fldiv@a+3)^0,c
  5671  000844  C052  F003         	movff	FadeAllcolors@k,___xxtofl@val
  5672  000848  C053  F004         	movff	FadeAllcolors@k+1,___xxtofl@val+1
  5673  00084C  0E00               	movlw	0
  5674  00084E  BE04               	btfsc	(___xxtofl@val+1)^0,7,c
  5675  000850  0EFF               	movlw	-1
  5676  000852  6E05               	movwf	(___xxtofl@val+2)^0,c
  5677  000854  6E06               	movwf	(___xxtofl@val+3)^0,c
  5678  000856  0E01               	movlw	1
  5679  000858  EC36  F016         	call	___xxtofl
  5680  00085C  C003  F011         	movff	?___xxtofl,___fldiv@b
  5681  000860  C004  F012         	movff	?___xxtofl+1,___fldiv@b+1
  5682  000864  C005  F013         	movff	?___xxtofl+2,___fldiv@b+2
  5683  000868  C006  F014         	movff	?___xxtofl+3,___fldiv@b+3
  5684  00086C  ECDA  F010         	call	___fldiv	;wreg free
  5685  000870  C011  F02A         	movff	?___fldiv,___flmul@b
  5686  000874  C012  F02B         	movff	?___fldiv+1,___flmul@b+1
  5687  000878  C013  F02C         	movff	?___fldiv+2,___flmul@b+2
  5688  00087C  C014  F02D         	movff	?___fldiv+3,___flmul@b+3
  5689  000880  5056               	movf	FadeAllcolors@c^0,w,c
  5690  000882  6ED9               	movwf	fsr2l,c
  5691  000884  6ADA               	clrf	fsr2h,c
  5692  000886  50DF               	movf	indf2,w,c
  5693  000888  6E43               	movwf	??_FadeAllcolors^0,c
  5694  00088A  5043               	movf	??_FadeAllcolors^0,w,c
  5695  00088C  6E03               	movwf	___xxtofl@val^0,c
  5696  00088E  6A04               	clrf	(___xxtofl@val+1)^0,c
  5697  000890  6A05               	clrf	(___xxtofl@val+2)^0,c
  5698  000892  6A06               	clrf	(___xxtofl@val+3)^0,c
  5699  000894  0E01               	movlw	1
  5700  000896  EC36  F016         	call	___xxtofl
  5701  00089A  C003  F02E         	movff	?___xxtofl,___flmul@a
  5702  00089E  C004  F02F         	movff	?___xxtofl+1,___flmul@a+1
  5703  0008A2  C005  F030         	movff	?___xxtofl+2,___flmul@a+2
  5704  0008A6  C006  F031         	movff	?___xxtofl+3,___flmul@a+3
  5705  0008AA  EC81  F00C         	call	___flmul	;wreg free
  5706  0008AE  C02A  F044         	movff	?___flmul,FadeAllcolors@r
  5707  0008B2  C02B  F045         	movff	?___flmul+1,FadeAllcolors@r+1
  5708  0008B6  C02C  F046         	movff	?___flmul+2,FadeAllcolors@r+2
  5709  0008BA  C02D  F047         	movff	?___flmul+3,FadeAllcolors@r+3
  5710                           
  5711                           ;Patterns.c: 459:             g = (k/255.0)*(*(c+1));
  5712  0008BE  0E00               	movlw	0
  5713  0008C0  6E15               	movwf	___fldiv@a^0,c
  5714  0008C2  0E00               	movlw	0
  5715  0008C4  6E16               	movwf	(___fldiv@a+1)^0,c
  5716  0008C6  0E7F               	movlw	127
  5717  0008C8  6E17               	movwf	(___fldiv@a+2)^0,c
  5718  0008CA  0E43               	movlw	67
  5719  0008CC  6E18               	movwf	(___fldiv@a+3)^0,c
  5720  0008CE  C052  F003         	movff	FadeAllcolors@k,___xxtofl@val
  5721  0008D2  C053  F004         	movff	FadeAllcolors@k+1,___xxtofl@val+1
  5722  0008D6  0E00               	movlw	0
  5723  0008D8  BE04               	btfsc	(___xxtofl@val+1)^0,7,c
  5724  0008DA  0EFF               	movlw	-1
  5725  0008DC  6E05               	movwf	(___xxtofl@val+2)^0,c
  5726  0008DE  6E06               	movwf	(___xxtofl@val+3)^0,c
  5727  0008E0  0E01               	movlw	1
  5728  0008E2  EC36  F016         	call	___xxtofl
  5729  0008E6  C003  F011         	movff	?___xxtofl,___fldiv@b
  5730  0008EA  C004  F012         	movff	?___xxtofl+1,___fldiv@b+1
  5731  0008EE  C005  F013         	movff	?___xxtofl+2,___fldiv@b+2
  5732  0008F2  C006  F014         	movff	?___xxtofl+3,___fldiv@b+3
  5733  0008F6  ECDA  F010         	call	___fldiv	;wreg free
  5734  0008FA  C011  F02A         	movff	?___fldiv,___flmul@b
  5735  0008FE  C012  F02B         	movff	?___fldiv+1,___flmul@b+1
  5736  000902  C013  F02C         	movff	?___fldiv+2,___flmul@b+2
  5737  000906  C014  F02D         	movff	?___fldiv+3,___flmul@b+3
  5738  00090A  5056               	movf	FadeAllcolors@c^0,w,c
  5739  00090C  6ED9               	movwf	fsr2l,c
  5740  00090E  6ADA               	clrf	fsr2h,c
  5741  000910  0E01               	movlw	1
  5742  000912  26D9               	addwf	fsr2l,f,c
  5743  000914  50DF               	movf	indf2,w,c
  5744  000916  6E43               	movwf	??_FadeAllcolors^0,c
  5745  000918  5043               	movf	??_FadeAllcolors^0,w,c
  5746  00091A  6E03               	movwf	___xxtofl@val^0,c
  5747  00091C  6A04               	clrf	(___xxtofl@val+1)^0,c
  5748  00091E  6A05               	clrf	(___xxtofl@val+2)^0,c
  5749  000920  6A06               	clrf	(___xxtofl@val+3)^0,c
  5750  000922  0E01               	movlw	1
  5751  000924  EC36  F016         	call	___xxtofl
  5752  000928  C003  F02E         	movff	?___xxtofl,___flmul@a
  5753  00092C  C004  F02F         	movff	?___xxtofl+1,___flmul@a+1
  5754  000930  C005  F030         	movff	?___xxtofl+2,___flmul@a+2
  5755  000934  C006  F031         	movff	?___xxtofl+3,___flmul@a+3
  5756  000938  EC81  F00C         	call	___flmul	;wreg free
  5757  00093C  C02A  F048         	movff	?___flmul,FadeAllcolors@g
  5758  000940  C02B  F049         	movff	?___flmul+1,FadeAllcolors@g+1
  5759  000944  C02C  F04A         	movff	?___flmul+2,FadeAllcolors@g+2
  5760  000948  C02D  F04B         	movff	?___flmul+3,FadeAllcolors@g+3
  5761                           
  5762                           ;Patterns.c: 460:             b = (k/255.0)*(*(c+2));
  5763  00094C  0E00               	movlw	0
  5764  00094E  6E15               	movwf	___fldiv@a^0,c
  5765  000950  0E00               	movlw	0
  5766  000952  6E16               	movwf	(___fldiv@a+1)^0,c
  5767  000954  0E7F               	movlw	127
  5768  000956  6E17               	movwf	(___fldiv@a+2)^0,c
  5769  000958  0E43               	movlw	67
  5770  00095A  6E18               	movwf	(___fldiv@a+3)^0,c
  5771  00095C  C052  F003         	movff	FadeAllcolors@k,___xxtofl@val
  5772  000960  C053  F004         	movff	FadeAllcolors@k+1,___xxtofl@val+1
  5773  000964  0E00               	movlw	0
  5774  000966  BE04               	btfsc	(___xxtofl@val+1)^0,7,c
  5775  000968  0EFF               	movlw	-1
  5776  00096A  6E05               	movwf	(___xxtofl@val+2)^0,c
  5777  00096C  6E06               	movwf	(___xxtofl@val+3)^0,c
  5778  00096E  0E01               	movlw	1
  5779  000970  EC36  F016         	call	___xxtofl
  5780  000974  C003  F011         	movff	?___xxtofl,___fldiv@b
  5781  000978  C004  F012         	movff	?___xxtofl+1,___fldiv@b+1
  5782  00097C  C005  F013         	movff	?___xxtofl+2,___fldiv@b+2
  5783  000980  C006  F014         	movff	?___xxtofl+3,___fldiv@b+3
  5784  000984  ECDA  F010         	call	___fldiv	;wreg free
  5785  000988  C011  F02A         	movff	?___fldiv,___flmul@b
  5786  00098C  C012  F02B         	movff	?___fldiv+1,___flmul@b+1
  5787  000990  C013  F02C         	movff	?___fldiv+2,___flmul@b+2
  5788  000994  C014  F02D         	movff	?___fldiv+3,___flmul@b+3
  5789  000998  5056               	movf	FadeAllcolors@c^0,w,c
  5790  00099A  6ED9               	movwf	fsr2l,c
  5791  00099C  6ADA               	clrf	fsr2h,c
  5792  00099E  0E02               	movlw	2
  5793  0009A0  26D9               	addwf	fsr2l,f,c
  5794  0009A2  50DF               	movf	indf2,w,c
  5795  0009A4  6E43               	movwf	??_FadeAllcolors^0,c
  5796  0009A6  5043               	movf	??_FadeAllcolors^0,w,c
  5797  0009A8  6E03               	movwf	___xxtofl@val^0,c
  5798  0009AA  6A04               	clrf	(___xxtofl@val+1)^0,c
  5799  0009AC  6A05               	clrf	(___xxtofl@val+2)^0,c
  5800  0009AE  6A06               	clrf	(___xxtofl@val+3)^0,c
  5801  0009B0  0E01               	movlw	1
  5802  0009B2  EC36  F016         	call	___xxtofl
  5803  0009B6  C003  F02E         	movff	?___xxtofl,___flmul@a
  5804  0009BA  C004  F02F         	movff	?___xxtofl+1,___flmul@a+1
  5805  0009BE  C005  F030         	movff	?___xxtofl+2,___flmul@a+2
  5806  0009C2  C006  F031         	movff	?___xxtofl+3,___flmul@a+3
  5807  0009C6  EC81  F00C         	call	___flmul	;wreg free
  5808  0009CA  C02A  F04C         	movff	?___flmul,FadeAllcolors@b
  5809  0009CE  C02B  F04D         	movff	?___flmul+1,FadeAllcolors@b+1
  5810  0009D2  C02C  F04E         	movff	?___flmul+2,FadeAllcolors@b+2
  5811  0009D6  C02D  F04F         	movff	?___flmul+3,FadeAllcolors@b+3
  5812                           
  5813                           ;Patterns.c: 461:            setAll(r,g,b);
  5814  0009DA  C048  F003         	movff	FadeAllcolors@g,___fltol@f1
  5815  0009DE  C049  F004         	movff	FadeAllcolors@g+1,___fltol@f1+1
  5816  0009E2  C04A  F005         	movff	FadeAllcolors@g+2,___fltol@f1+2
  5817  0009E6  C04B  F006         	movff	FadeAllcolors@g+3,___fltol@f1+3
  5818  0009EA  EC56  F01B         	call	___fltol	;wreg free
  5819  0009EE  5003               	movf	?___fltol^0,w,c
  5820  0009F0  6E16               	movwf	setAll@Green^0,c
  5821  0009F2  C04C  F003         	movff	FadeAllcolors@b,___fltol@f1
  5822  0009F6  C04D  F004         	movff	FadeAllcolors@b+1,___fltol@f1+1
  5823  0009FA  C04E  F005         	movff	FadeAllcolors@b+2,___fltol@f1+2
  5824  0009FE  C04F  F006         	movff	FadeAllcolors@b+3,___fltol@f1+3
  5825  000A02  EC56  F01B         	call	___fltol	;wreg free
  5826  000A06  5003               	movf	?___fltol^0,w,c
  5827  000A08  6E17               	movwf	setAll@Blue^0,c
  5828  000A0A  C044  F003         	movff	FadeAllcolors@r,___fltol@f1
  5829  000A0E  C045  F004         	movff	FadeAllcolors@r+1,___fltol@f1+1
  5830  000A12  C046  F005         	movff	FadeAllcolors@r+2,___fltol@f1+2
  5831  000A16  C047  F006         	movff	FadeAllcolors@r+3,___fltol@f1+3
  5832  000A1A  EC56  F01B         	call	___fltol	;wreg free
  5833  000A1E  5003               	movf	?___fltol^0,w,c
  5834  000A20  EC73  F01D         	call	_setAll
  5835                           
  5836                           ;Patterns.c: 462:            if( BT_Patron!= 8 || BT_rainbow != 1)return;
  5837  000A24  0E08               	movlw	8
  5838  000A26  185B               	xorwf	_BT_Patron^0,w,c	;volatile
  5839  000A28  A4D8               	btfss	status,2,c
  5840  000A2A  0012               	return	
  5841  000A2C  A05C               	btfss	(_BT_rainbow/(0+8))^0,_BT_rainbow& (0+7),c	;volatile
  5842  000A2E  0012               	return	
  5843                           
  5844                           ;Patterns.c: 463:             Delay_ms(BT_Tiempo);
  5845  000A30  C05A  F003         	movff	_BT_Tiempo,Delay_ms@time	;volatile
  5846  000A34  6A04               	clrf	(Delay_ms@time+1)^0,c
  5847  000A36  EC51  F01D         	call	_Delay_ms	;wreg free
  5848                           
  5849                           ;Patterns.c: 464:         }
  5850  000A3A  0E01               	movlw	1
  5851  000A3C  2452               	addwf	FadeAllcolors@k^0,w,c
  5852  000A3E  6E52               	movwf	FadeAllcolors@k^0,c
  5853  000A40  0E00               	movlw	0
  5854  000A42  2053               	addwfc	(FadeAllcolors@k+1)^0,w,c
  5855  000A44  6E53               	movwf	(FadeAllcolors@k+1)^0,c
  5856  000A46  BE53               	btfsc	(FadeAllcolors@k+1)^0,7,c
  5857  000A48  D6F5               	goto	l5114
  5858  000A4A  5053               	movf	(FadeAllcolors@k+1)^0,w,c
  5859  000A4C  E103               	bnz	u5520
  5860  000A4E  2852               	incf	FadeAllcolors@k^0,w,c
  5861  000A50  A0D8               	btfss	status,0,c
  5862  000A52  D6F0               	goto	l5114
  5863  000A54                     u5520:
  5864                           
  5865                           ;Patterns.c: 465:         for(int k = 255; k >0; k=k-2) {
  5866  000A54  0E00               	movlw	0
  5867  000A56  6E55               	movwf	(FadeAllcolors@k_325+1)^0,c
  5868  000A58  6854               	setf	FadeAllcolors@k_325^0,c
  5869  000A5A                     l5134:
  5870                           
  5871                           ;Patterns.c: 466:             r = (k/255.0)*(*c);
  5872  000A5A  0E00               	movlw	0
  5873  000A5C  6E15               	movwf	___fldiv@a^0,c
  5874  000A5E  0E00               	movlw	0
  5875  000A60  6E16               	movwf	(___fldiv@a+1)^0,c
  5876  000A62  0E7F               	movlw	127
  5877  000A64  6E17               	movwf	(___fldiv@a+2)^0,c
  5878  000A66  0E43               	movlw	67
  5879  000A68  6E18               	movwf	(___fldiv@a+3)^0,c
  5880  000A6A  C054  F003         	movff	FadeAllcolors@k_325,___xxtofl@val
  5881  000A6E  C055  F004         	movff	FadeAllcolors@k_325+1,___xxtofl@val+1
  5882  000A72  0E00               	movlw	0
  5883  000A74  BE04               	btfsc	(___xxtofl@val+1)^0,7,c
  5884  000A76  0EFF               	movlw	-1
  5885  000A78  6E05               	movwf	(___xxtofl@val+2)^0,c
  5886  000A7A  6E06               	movwf	(___xxtofl@val+3)^0,c
  5887  000A7C  0E01               	movlw	1
  5888  000A7E  EC36  F016         	call	___xxtofl
  5889  000A82  C003  F011         	movff	?___xxtofl,___fldiv@b
  5890  000A86  C004  F012         	movff	?___xxtofl+1,___fldiv@b+1
  5891  000A8A  C005  F013         	movff	?___xxtofl+2,___fldiv@b+2
  5892  000A8E  C006  F014         	movff	?___xxtofl+3,___fldiv@b+3
  5893  000A92  ECDA  F010         	call	___fldiv	;wreg free
  5894  000A96  C011  F02A         	movff	?___fldiv,___flmul@b
  5895  000A9A  C012  F02B         	movff	?___fldiv+1,___flmul@b+1
  5896  000A9E  C013  F02C         	movff	?___fldiv+2,___flmul@b+2
  5897  000AA2  C014  F02D         	movff	?___fldiv+3,___flmul@b+3
  5898  000AA6  5056               	movf	FadeAllcolors@c^0,w,c
  5899  000AA8  6ED9               	movwf	fsr2l,c
  5900  000AAA  6ADA               	clrf	fsr2h,c
  5901  000AAC  50DF               	movf	indf2,w,c
  5902  000AAE  6E43               	movwf	??_FadeAllcolors^0,c
  5903  000AB0  5043               	movf	??_FadeAllcolors^0,w,c
  5904  000AB2  6E03               	movwf	___xxtofl@val^0,c
  5905  000AB4  6A04               	clrf	(___xxtofl@val+1)^0,c
  5906  000AB6  6A05               	clrf	(___xxtofl@val+2)^0,c
  5907  000AB8  6A06               	clrf	(___xxtofl@val+3)^0,c
  5908  000ABA  0E01               	movlw	1
  5909  000ABC  EC36  F016         	call	___xxtofl
  5910  000AC0  C003  F02E         	movff	?___xxtofl,___flmul@a
  5911  000AC4  C004  F02F         	movff	?___xxtofl+1,___flmul@a+1
  5912  000AC8  C005  F030         	movff	?___xxtofl+2,___flmul@a+2
  5913  000ACC  C006  F031         	movff	?___xxtofl+3,___flmul@a+3
  5914  000AD0  EC81  F00C         	call	___flmul	;wreg free
  5915  000AD4  C02A  F044         	movff	?___flmul,FadeAllcolors@r
  5916  000AD8  C02B  F045         	movff	?___flmul+1,FadeAllcolors@r+1
  5917  000ADC  C02C  F046         	movff	?___flmul+2,FadeAllcolors@r+2
  5918  000AE0  C02D  F047         	movff	?___flmul+3,FadeAllcolors@r+3
  5919                           
  5920                           ;Patterns.c: 467:             g = (k/255.0)*(*(c+1));
  5921  000AE4  0E00               	movlw	0
  5922  000AE6  6E15               	movwf	___fldiv@a^0,c
  5923  000AE8  0E00               	movlw	0
  5924  000AEA  6E16               	movwf	(___fldiv@a+1)^0,c
  5925  000AEC  0E7F               	movlw	127
  5926  000AEE  6E17               	movwf	(___fldiv@a+2)^0,c
  5927  000AF0  0E43               	movlw	67
  5928  000AF2  6E18               	movwf	(___fldiv@a+3)^0,c
  5929  000AF4  C054  F003         	movff	FadeAllcolors@k_325,___xxtofl@val
  5930  000AF8  C055  F004         	movff	FadeAllcolors@k_325+1,___xxtofl@val+1
  5931  000AFC  0E00               	movlw	0
  5932  000AFE  BE04               	btfsc	(___xxtofl@val+1)^0,7,c
  5933  000B00  0EFF               	movlw	-1
  5934  000B02  6E05               	movwf	(___xxtofl@val+2)^0,c
  5935  000B04  6E06               	movwf	(___xxtofl@val+3)^0,c
  5936  000B06  0E01               	movlw	1
  5937  000B08  EC36  F016         	call	___xxtofl
  5938  000B0C  C003  F011         	movff	?___xxtofl,___fldiv@b
  5939  000B10  C004  F012         	movff	?___xxtofl+1,___fldiv@b+1
  5940  000B14  C005  F013         	movff	?___xxtofl+2,___fldiv@b+2
  5941  000B18  C006  F014         	movff	?___xxtofl+3,___fldiv@b+3
  5942  000B1C  ECDA  F010         	call	___fldiv	;wreg free
  5943  000B20  C011  F02A         	movff	?___fldiv,___flmul@b
  5944  000B24  C012  F02B         	movff	?___fldiv+1,___flmul@b+1
  5945  000B28  C013  F02C         	movff	?___fldiv+2,___flmul@b+2
  5946  000B2C  C014  F02D         	movff	?___fldiv+3,___flmul@b+3
  5947  000B30  5056               	movf	FadeAllcolors@c^0,w,c
  5948  000B32  6ED9               	movwf	fsr2l,c
  5949  000B34  6ADA               	clrf	fsr2h,c
  5950  000B36  0E01               	movlw	1
  5951  000B38  26D9               	addwf	fsr2l,f,c
  5952  000B3A  50DF               	movf	indf2,w,c
  5953  000B3C  6E43               	movwf	??_FadeAllcolors^0,c
  5954  000B3E  5043               	movf	??_FadeAllcolors^0,w,c
  5955  000B40  6E03               	movwf	___xxtofl@val^0,c
  5956  000B42  6A04               	clrf	(___xxtofl@val+1)^0,c
  5957  000B44  6A05               	clrf	(___xxtofl@val+2)^0,c
  5958  000B46  6A06               	clrf	(___xxtofl@val+3)^0,c
  5959  000B48  0E01               	movlw	1
  5960  000B4A  EC36  F016         	call	___xxtofl
  5961  000B4E  C003  F02E         	movff	?___xxtofl,___flmul@a
  5962  000B52  C004  F02F         	movff	?___xxtofl+1,___flmul@a+1
  5963  000B56  C005  F030         	movff	?___xxtofl+2,___flmul@a+2
  5964  000B5A  C006  F031         	movff	?___xxtofl+3,___flmul@a+3
  5965  000B5E  EC81  F00C         	call	___flmul	;wreg free
  5966  000B62  C02A  F048         	movff	?___flmul,FadeAllcolors@g
  5967  000B66  C02B  F049         	movff	?___flmul+1,FadeAllcolors@g+1
  5968  000B6A  C02C  F04A         	movff	?___flmul+2,FadeAllcolors@g+2
  5969  000B6E  C02D  F04B         	movff	?___flmul+3,FadeAllcolors@g+3
  5970                           
  5971                           ;Patterns.c: 468:             b = (k/255.0)*(*(c+2));
  5972  000B72  0E00               	movlw	0
  5973  000B74  6E15               	movwf	___fldiv@a^0,c
  5974  000B76  0E00               	movlw	0
  5975  000B78  6E16               	movwf	(___fldiv@a+1)^0,c
  5976  000B7A  0E7F               	movlw	127
  5977  000B7C  6E17               	movwf	(___fldiv@a+2)^0,c
  5978  000B7E  0E43               	movlw	67
  5979  000B80  6E18               	movwf	(___fldiv@a+3)^0,c
  5980  000B82  C054  F003         	movff	FadeAllcolors@k_325,___xxtofl@val
  5981  000B86  C055  F004         	movff	FadeAllcolors@k_325+1,___xxtofl@val+1
  5982  000B8A  0E00               	movlw	0
  5983  000B8C  BE04               	btfsc	(___xxtofl@val+1)^0,7,c
  5984  000B8E  0EFF               	movlw	-1
  5985  000B90  6E05               	movwf	(___xxtofl@val+2)^0,c
  5986  000B92  6E06               	movwf	(___xxtofl@val+3)^0,c
  5987  000B94  0E01               	movlw	1
  5988  000B96  EC36  F016         	call	___xxtofl
  5989  000B9A  C003  F011         	movff	?___xxtofl,___fldiv@b
  5990  000B9E  C004  F012         	movff	?___xxtofl+1,___fldiv@b+1
  5991  000BA2  C005  F013         	movff	?___xxtofl+2,___fldiv@b+2
  5992  000BA6  C006  F014         	movff	?___xxtofl+3,___fldiv@b+3
  5993  000BAA  ECDA  F010         	call	___fldiv	;wreg free
  5994  000BAE  C011  F02A         	movff	?___fldiv,___flmul@b
  5995  000BB2  C012  F02B         	movff	?___fldiv+1,___flmul@b+1
  5996  000BB6  C013  F02C         	movff	?___fldiv+2,___flmul@b+2
  5997  000BBA  C014  F02D         	movff	?___fldiv+3,___flmul@b+3
  5998  000BBE  5056               	movf	FadeAllcolors@c^0,w,c
  5999  000BC0  6ED9               	movwf	fsr2l,c
  6000  000BC2  6ADA               	clrf	fsr2h,c
  6001  000BC4  0E02               	movlw	2
  6002  000BC6  26D9               	addwf	fsr2l,f,c
  6003  000BC8  50DF               	movf	indf2,w,c
  6004  000BCA  6E43               	movwf	??_FadeAllcolors^0,c
  6005  000BCC  5043               	movf	??_FadeAllcolors^0,w,c
  6006  000BCE  6E03               	movwf	___xxtofl@val^0,c
  6007  000BD0  6A04               	clrf	(___xxtofl@val+1)^0,c
  6008  000BD2  6A05               	clrf	(___xxtofl@val+2)^0,c
  6009  000BD4  6A06               	clrf	(___xxtofl@val+3)^0,c
  6010  000BD6  0E01               	movlw	1
  6011  000BD8  EC36  F016         	call	___xxtofl
  6012  000BDC  C003  F02E         	movff	?___xxtofl,___flmul@a
  6013  000BE0  C004  F02F         	movff	?___xxtofl+1,___flmul@a+1
  6014  000BE4  C005  F030         	movff	?___xxtofl+2,___flmul@a+2
  6015  000BE8  C006  F031         	movff	?___xxtofl+3,___flmul@a+3
  6016  000BEC  EC81  F00C         	call	___flmul	;wreg free
  6017  000BF0  C02A  F04C         	movff	?___flmul,FadeAllcolors@b
  6018  000BF4  C02B  F04D         	movff	?___flmul+1,FadeAllcolors@b+1
  6019  000BF8  C02C  F04E         	movff	?___flmul+2,FadeAllcolors@b+2
  6020  000BFC  C02D  F04F         	movff	?___flmul+3,FadeAllcolors@b+3
  6021                           
  6022                           ;Patterns.c: 469:             setAll(r,g,b);
  6023  000C00  C048  F003         	movff	FadeAllcolors@g,___fltol@f1
  6024  000C04  C049  F004         	movff	FadeAllcolors@g+1,___fltol@f1+1
  6025  000C08  C04A  F005         	movff	FadeAllcolors@g+2,___fltol@f1+2
  6026  000C0C  C04B  F006         	movff	FadeAllcolors@g+3,___fltol@f1+3
  6027  000C10  EC56  F01B         	call	___fltol	;wreg free
  6028  000C14  5003               	movf	?___fltol^0,w,c
  6029  000C16  6E16               	movwf	setAll@Green^0,c
  6030  000C18  C04C  F003         	movff	FadeAllcolors@b,___fltol@f1
  6031  000C1C  C04D  F004         	movff	FadeAllcolors@b+1,___fltol@f1+1
  6032  000C20  C04E  F005         	movff	FadeAllcolors@b+2,___fltol@f1+2
  6033  000C24  C04F  F006         	movff	FadeAllcolors@b+3,___fltol@f1+3
  6034  000C28  EC56  F01B         	call	___fltol	;wreg free
  6035  000C2C  5003               	movf	?___fltol^0,w,c
  6036  000C2E  6E17               	movwf	setAll@Blue^0,c
  6037  000C30  C044  F003         	movff	FadeAllcolors@r,___fltol@f1
  6038  000C34  C045  F004         	movff	FadeAllcolors@r+1,___fltol@f1+1
  6039  000C38  C046  F005         	movff	FadeAllcolors@r+2,___fltol@f1+2
  6040  000C3C  C047  F006         	movff	FadeAllcolors@r+3,___fltol@f1+3
  6041  000C40  EC56  F01B         	call	___fltol	;wreg free
  6042  000C44  5003               	movf	?___fltol^0,w,c
  6043  000C46  EC73  F01D         	call	_setAll
  6044                           
  6045                           ;Patterns.c: 470:             if( BT_Patron!= 8 || BT_rainbow != 1)return;
  6046  000C4A  0E08               	movlw	8
  6047  000C4C  185B               	xorwf	_BT_Patron^0,w,c	;volatile
  6048  000C4E  A4D8               	btfss	status,2,c
  6049  000C50  0012               	return	
  6050  000C52  A05C               	btfss	(_BT_rainbow/(0+8))^0,_BT_rainbow& (0+7),c	;volatile
  6051  000C54  0012               	return	
  6052                           
  6053                           ;Patterns.c: 471:             Delay_ms(BT_Tiempo);
  6054  000C56  C05A  F003         	movff	_BT_Tiempo,Delay_ms@time	;volatile
  6055  000C5A  6A04               	clrf	(Delay_ms@time+1)^0,c
  6056  000C5C  EC51  F01D         	call	_Delay_ms	;wreg free
  6057                           
  6058                           ;Patterns.c: 472:       }
  6059  000C60  0EFE               	movlw	254
  6060  000C62  2454               	addwf	FadeAllcolors@k_325^0,w,c
  6061  000C64  6E54               	movwf	FadeAllcolors@k_325^0,c
  6062  000C66  0EFF               	movlw	255
  6063  000C68  2055               	addwfc	(FadeAllcolors@k_325+1)^0,w,c
  6064  000C6A  6E55               	movwf	(FadeAllcolors@k_325+1)^0,c
  6065  000C6C  BE55               	btfsc	(FadeAllcolors@k_325+1)^0,7,c
  6066  000C6E  D005               	goto	u5550
  6067  000C70  5055               	movf	(FadeAllcolors@k_325+1)^0,w,c
  6068  000C72  E102               	bnz	u5551
  6069  000C74  0454               	decf	FadeAllcolors@k_325^0,w,c
  6070  000C76  B0D8               	btfsc	status,0,c
  6071  000C78                     u5551:
  6072  000C78  D6F0               	goto	l5134
  6073  000C7A                     u5550:
  6074                           
  6075                           ;Patterns.c: 473:     }
  6076  000C7A  0E19               	movlw	25
  6077  000C7C  2450               	addwf	FadeAllcolors@j^0,w,c
  6078  000C7E  6E50               	movwf	FadeAllcolors@j^0,c
  6079  000C80  0E00               	movlw	0
  6080  000C82  2051               	addwfc	(FadeAllcolors@j+1)^0,w,c
  6081  000C84  6E51               	movwf	(FadeAllcolors@j+1)^0,c
  6082  000C86  BE51               	btfsc	(FadeAllcolors@j+1)^0,7,c
  6083  000C88  D5CA               	goto	l5106
  6084  000C8A  5051               	movf	(FadeAllcolors@j+1)^0,w,c
  6085  000C8C  E104               	bnz	u5560
  6086  000C8E  2850               	incf	FadeAllcolors@j^0,w,c
  6087  000C90  B0D8               	btfsc	status,0,c
  6088  000C92  0012               	return	
  6089  000C94  D5C4               	goto	l5106
  6090  000C96                     u5560:
  6091  000C96  0012               	return		;funcret
  6092  000C98                     __end_of_FadeAllcolors:
  6093                           	opt callstack 0
  6094                           
  6095 ;; *************** function ___xxtofl *****************
  6096 ;; Defined at:
  6097 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\xxtofl.c"
  6098 ;; Parameters:    Size  Location     Type
  6099 ;;  sign            1    wreg     unsigned char 
  6100 ;;  val             4    2[COMRAM] long 
  6101 ;; Auto vars:     Size  Location     Type
  6102 ;;  sign            1   10[COMRAM] unsigned char 
  6103 ;;  arg             4   12[COMRAM] unsigned long 
  6104 ;;  exp             1   11[COMRAM] unsigned char 
  6105 ;; Return value:  Size  Location     Type
  6106 ;;                  4    2[COMRAM] unsigned char 
  6107 ;; Registers used:
  6108 ;;		wreg, status,2, status,0
  6109 ;; Tracked objects:
  6110 ;;		On entry : 0/0
  6111 ;;		On exit  : 0/0
  6112 ;;		Unchanged: 0/0
  6113 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6114 ;;      Params:         4       0       0       0       0       0       0       0       0
  6115 ;;      Locals:         6       0       0       0       0       0       0       0       0
  6116 ;;      Temps:          4       0       0       0       0       0       0       0       0
  6117 ;;      Totals:        14       0       0       0       0       0       0       0       0
  6118 ;;Total ram usage:       14 bytes
  6119 ;; Hardware stack levels used:    1
  6120 ;; Hardware stack levels required when called:    2
  6121 ;; This function calls:
  6122 ;;		Nothing
  6123 ;; This function is called by:
  6124 ;;		_FadeInOut
  6125 ;;		_fadeInOutRainbow
  6126 ;;		_FadeAllcolors
  6127 ;; This function uses a non-reentrant model
  6128 ;;
  6129                           
  6130                           	psect	text20
  6131  002C6C                     __ptext20:
  6132                           	opt callstack 0
  6133  002C6C                     ___xxtofl:
  6134                           	opt callstack 27
  6135                           
  6136                           ;incstack = 0
  6137                           ;___xxtofl@sign stored from wreg
  6138  002C6C  6E0B               	movwf	___xxtofl@sign^0,c
  6139  002C6E  500B               	movf	___xxtofl@sign^0,w,c
  6140  002C70  A4D8               	btfss	status,2,c
  6141  002C72  AE06               	btfss	(___xxtofl@val+3)^0,7,c
  6142  002C74  D01A               	goto	l1334
  6143  002C76  C003  F007         	movff	___xxtofl@val,??___xxtofl
  6144  002C7A  C004  F008         	movff	___xxtofl@val+1,??___xxtofl+1
  6145  002C7E  C005  F009         	movff	___xxtofl@val+2,??___xxtofl+2
  6146  002C82  C006  F00A         	movff	___xxtofl@val+3,??___xxtofl+3
  6147  002C86  1E07               	comf	??___xxtofl^0,f,c
  6148  002C88  1E08               	comf	(??___xxtofl+1)^0,f,c
  6149  002C8A  1E09               	comf	(??___xxtofl+2)^0,f,c
  6150  002C8C  1E0A               	comf	(??___xxtofl+3)^0,f,c
  6151  002C8E  2A07               	incf	??___xxtofl^0,f,c
  6152  002C90  0E00               	movlw	0
  6153  002C92  2208               	addwfc	(??___xxtofl+1)^0,f,c
  6154  002C94  2209               	addwfc	(??___xxtofl+2)^0,f,c
  6155  002C96  220A               	addwfc	(??___xxtofl+3)^0,f,c
  6156  002C98  C007  F00D         	movff	??___xxtofl,___xxtofl@arg
  6157  002C9C  C008  F00E         	movff	??___xxtofl+1,___xxtofl@arg+1
  6158  002CA0  C009  F00F         	movff	??___xxtofl+2,___xxtofl@arg+2
  6159  002CA4  C00A  F010         	movff	??___xxtofl+3,___xxtofl@arg+3
  6160  002CA8  D008               	goto	l4050
  6161  002CAA                     l1334:
  6162  002CAA  C003  F00D         	movff	___xxtofl@val,___xxtofl@arg
  6163  002CAE  C004  F00E         	movff	___xxtofl@val+1,___xxtofl@arg+1
  6164  002CB2  C005  F00F         	movff	___xxtofl@val+2,___xxtofl@arg+2
  6165  002CB6  C006  F010         	movff	___xxtofl@val+3,___xxtofl@arg+3
  6166  002CBA                     l4050:
  6167  002CBA  5003               	movf	___xxtofl@val^0,w,c
  6168  002CBC  1004               	iorwf	(___xxtofl@val+1)^0,w,c
  6169  002CBE  1005               	iorwf	(___xxtofl@val+2)^0,w,c
  6170  002CC0  1006               	iorwf	(___xxtofl@val+3)^0,w,c
  6171  002CC2  A4D8               	btfss	status,2,c
  6172  002CC4  D009               	goto	l4056
  6173  002CC6  0E00               	movlw	0
  6174  002CC8  6E03               	movwf	?___xxtofl^0,c
  6175  002CCA  0E00               	movlw	0
  6176  002CCC  6E04               	movwf	(?___xxtofl+1)^0,c
  6177  002CCE  0E00               	movlw	0
  6178  002CD0  6E05               	movwf	(?___xxtofl+2)^0,c
  6179  002CD2  0E00               	movlw	0
  6180  002CD4  6E06               	movwf	(?___xxtofl+3)^0,c
  6181  002CD6  0012               	return	
  6182  002CD8                     l4056:
  6183  002CD8  0E96               	movlw	150
  6184  002CDA  6E0C               	movwf	___xxtofl@exp^0,c
  6185  002CDC  D006               	goto	l4060
  6186  002CDE                     l4058:
  6187  002CDE  2A0C               	incf	___xxtofl@exp^0,f,c
  6188  002CE0  90D8               	bcf	status,0,c
  6189  002CE2  3210               	rrcf	(___xxtofl@arg+3)^0,f,c
  6190  002CE4  320F               	rrcf	(___xxtofl@arg+2)^0,f,c
  6191  002CE6  320E               	rrcf	(___xxtofl@arg+1)^0,f,c
  6192  002CE8  320D               	rrcf	___xxtofl@arg^0,f,c
  6193  002CEA                     l4060:
  6194  002CEA  0E00               	movlw	0
  6195  002CEC  140D               	andwf	___xxtofl@arg^0,w,c
  6196  002CEE  6E07               	movwf	??___xxtofl^0,c
  6197  002CF0  0E00               	movlw	0
  6198  002CF2  140E               	andwf	(___xxtofl@arg+1)^0,w,c
  6199  002CF4  6E08               	movwf	(??___xxtofl+1)^0,c
  6200  002CF6  0E00               	movlw	0
  6201  002CF8  140F               	andwf	(___xxtofl@arg+2)^0,w,c
  6202  002CFA  6E09               	movwf	(??___xxtofl+2)^0,c
  6203  002CFC  0EFE               	movlw	254
  6204  002CFE  1410               	andwf	(___xxtofl@arg+3)^0,w,c
  6205  002D00  6E0A               	movwf	(??___xxtofl+3)^0,c
  6206  002D02  5007               	movf	??___xxtofl^0,w,c
  6207  002D04  1008               	iorwf	(??___xxtofl+1)^0,w,c
  6208  002D06  1009               	iorwf	(??___xxtofl+2)^0,w,c
  6209  002D08  100A               	iorwf	(??___xxtofl+3)^0,w,c
  6210  002D0A  B4D8               	btfsc	status,2,c
  6211  002D0C  D00D               	goto	l1341
  6212  002D0E  D7E7               	goto	l4058
  6213  002D10                     l4062:
  6214  002D10  2A0C               	incf	___xxtofl@exp^0,f,c
  6215  002D12  0E01               	movlw	1
  6216  002D14  260D               	addwf	___xxtofl@arg^0,f,c
  6217  002D16  0E00               	movlw	0
  6218  002D18  220E               	addwfc	(___xxtofl@arg+1)^0,f,c
  6219  002D1A  220F               	addwfc	(___xxtofl@arg+2)^0,f,c
  6220  002D1C  2210               	addwfc	(___xxtofl@arg+3)^0,f,c
  6221  002D1E  90D8               	bcf	status,0,c
  6222  002D20  3210               	rrcf	(___xxtofl@arg+3)^0,f,c
  6223  002D22  320F               	rrcf	(___xxtofl@arg+2)^0,f,c
  6224  002D24  320E               	rrcf	(___xxtofl@arg+1)^0,f,c
  6225  002D26  320D               	rrcf	___xxtofl@arg^0,f,c
  6226  002D28                     l1341:
  6227  002D28  0E00               	movlw	0
  6228  002D2A  140D               	andwf	___xxtofl@arg^0,w,c
  6229  002D2C  6E07               	movwf	??___xxtofl^0,c
  6230  002D2E  0E00               	movlw	0
  6231  002D30  140E               	andwf	(___xxtofl@arg+1)^0,w,c
  6232  002D32  6E08               	movwf	(??___xxtofl+1)^0,c
  6233  002D34  0E00               	movlw	0
  6234  002D36  140F               	andwf	(___xxtofl@arg+2)^0,w,c
  6235  002D38  6E09               	movwf	(??___xxtofl+2)^0,c
  6236  002D3A  0EFF               	movlw	255
  6237  002D3C  1410               	andwf	(___xxtofl@arg+3)^0,w,c
  6238  002D3E  6E0A               	movwf	(??___xxtofl+3)^0,c
  6239  002D40  5007               	movf	??___xxtofl^0,w,c
  6240  002D42  1008               	iorwf	(??___xxtofl+1)^0,w,c
  6241  002D44  1009               	iorwf	(??___xxtofl+2)^0,w,c
  6242  002D46  100A               	iorwf	(??___xxtofl+3)^0,w,c
  6243  002D48  B4D8               	btfsc	status,2,c
  6244  002D4A  D007               	goto	l4070
  6245  002D4C  D7E1               	goto	l4062
  6246  002D4E                     l4068:
  6247  002D4E  060C               	decf	___xxtofl@exp^0,f,c
  6248  002D50  90D8               	bcf	status,0,c
  6249  002D52  360D               	rlcf	___xxtofl@arg^0,f,c
  6250  002D54  360E               	rlcf	(___xxtofl@arg+1)^0,f,c
  6251  002D56  360F               	rlcf	(___xxtofl@arg+2)^0,f,c
  6252  002D58  3610               	rlcf	(___xxtofl@arg+3)^0,f,c
  6253  002D5A                     l4070:
  6254  002D5A  BE0F               	btfsc	(___xxtofl@arg+2)^0,7,c
  6255  002D5C  D003               	goto	u3910
  6256  002D5E  0E02               	movlw	2
  6257  002D60  600C               	cpfslt	___xxtofl@exp^0,c
  6258  002D62  D7F5               	goto	l4068
  6259  002D64                     u3910:
  6260  002D64  A00C               	btfss	___xxtofl@exp^0,0,c
  6261  002D66  9E0F               	bcf	(___xxtofl@arg+2)^0,7,c
  6262  002D68  90D8               	bcf	status,0,c
  6263  002D6A  320C               	rrcf	___xxtofl@exp^0,f,c
  6264  002D6C  C00C  F007         	movff	___xxtofl@exp,??___xxtofl
  6265  002D70  6A08               	clrf	(??___xxtofl+1)^0,c
  6266  002D72  6A09               	clrf	(??___xxtofl+2)^0,c
  6267  002D74  6A0A               	clrf	(??___xxtofl+3)^0,c
  6268  002D76  C007  F00A         	movff	??___xxtofl,??___xxtofl+3
  6269  002D7A  6A09               	clrf	(??___xxtofl+2)^0,c
  6270  002D7C  6A08               	clrf	(??___xxtofl+1)^0,c
  6271  002D7E  6A07               	clrf	??___xxtofl^0,c
  6272  002D80  5007               	movf	??___xxtofl^0,w,c
  6273  002D82  120D               	iorwf	___xxtofl@arg^0,f,c
  6274  002D84  5008               	movf	(??___xxtofl+1)^0,w,c
  6275  002D86  120E               	iorwf	(___xxtofl@arg+1)^0,f,c
  6276  002D88  5009               	movf	(??___xxtofl+2)^0,w,c
  6277  002D8A  120F               	iorwf	(___xxtofl@arg+2)^0,f,c
  6278  002D8C  500A               	movf	(??___xxtofl+3)^0,w,c
  6279  002D8E  1210               	iorwf	(___xxtofl@arg+3)^0,f,c
  6280  002D90  500B               	movf	___xxtofl@sign^0,w,c
  6281  002D92  A4D8               	btfss	status,2,c
  6282  002D94  AE06               	btfss	(___xxtofl@val+3)^0,7,c
  6283  002D96  D001               	goto	l4086
  6284  002D98  8E10               	bsf	(___xxtofl@arg+3)^0,7,c
  6285  002D9A                     l4086:
  6286  002D9A  C00D  F003         	movff	___xxtofl@arg,?___xxtofl
  6287  002D9E  C00E  F004         	movff	___xxtofl@arg+1,?___xxtofl+1
  6288  002DA2  C00F  F005         	movff	___xxtofl@arg+2,?___xxtofl+2
  6289  002DA6  C010  F006         	movff	___xxtofl@arg+3,?___xxtofl+3
  6290  002DAA  0012               	return		;funcret
  6291  002DAC                     __end_of___xxtofl:
  6292                           	opt callstack 0
  6293                           
  6294 ;; *************** function ___fltol *****************
  6295 ;; Defined at:
  6296 ;;		line 43 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\fltol.c"
  6297 ;; Parameters:    Size  Location     Type
  6298 ;;  f1              4    2[COMRAM] unsigned char 
  6299 ;; Auto vars:     Size  Location     Type
  6300 ;;  exp1            1   11[COMRAM] unsigned char 
  6301 ;;  sign1           1   10[COMRAM] unsigned char 
  6302 ;; Return value:  Size  Location     Type
  6303 ;;                  4    2[COMRAM] long 
  6304 ;; Registers used:
  6305 ;;		wreg, status,2, status,0
  6306 ;; Tracked objects:
  6307 ;;		On entry : 0/0
  6308 ;;		On exit  : 0/0
  6309 ;;		Unchanged: 0/0
  6310 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6311 ;;      Params:         4       0       0       0       0       0       0       0       0
  6312 ;;      Locals:         2       0       0       0       0       0       0       0       0
  6313 ;;      Temps:          4       0       0       0       0       0       0       0       0
  6314 ;;      Totals:        10       0       0       0       0       0       0       0       0
  6315 ;;Total ram usage:       10 bytes
  6316 ;; Hardware stack levels used:    1
  6317 ;; Hardware stack levels required when called:    2
  6318 ;; This function calls:
  6319 ;;		Nothing
  6320 ;; This function is called by:
  6321 ;;		_FadeInOut
  6322 ;;		_fadeInOutRainbow
  6323 ;;		_FadeAllcolors
  6324 ;; This function uses a non-reentrant model
  6325 ;;
  6326                           
  6327                           	psect	text21
  6328  0036AC                     __ptext21:
  6329                           	opt callstack 0
  6330  0036AC                     ___fltol:
  6331                           	opt callstack 27
  6332                           
  6333                           ;incstack = 0
  6334  0036AC  3405               	rlcf	(___fltol@f1+2)^0,w,c
  6335  0036AE  3406               	rlcf	(___fltol@f1+3)^0,w,c
  6336  0036B0  6E0C               	movwf	___fltol@exp1^0,c
  6337  0036B2  500C               	movf	___fltol@exp1^0,w,c
  6338  0036B4  A4D8               	btfss	status,2,c
  6339  0036B6  D009               	goto	l3980
  6340  0036B8                     u3750:
  6341  0036B8  0E00               	movlw	0
  6342  0036BA  6E03               	movwf	?___fltol^0,c
  6343  0036BC  0E00               	movlw	0
  6344  0036BE  6E04               	movwf	(?___fltol+1)^0,c
  6345  0036C0  0E00               	movlw	0
  6346  0036C2  6E05               	movwf	(?___fltol+2)^0,c
  6347  0036C4  0E00               	movlw	0
  6348  0036C6  6E06               	movwf	(?___fltol+3)^0,c
  6349  0036C8  0012               	return	
  6350  0036CA                     l3980:
  6351  0036CA  C003  F007         	movff	___fltol@f1,??___fltol
  6352  0036CE  C004  F008         	movff	___fltol@f1+1,??___fltol+1
  6353  0036D2  C005  F009         	movff	___fltol@f1+2,??___fltol+2
  6354  0036D6  C006  F00A         	movff	___fltol@f1+3,??___fltol+3
  6355  0036DA  0E20               	movlw	32
  6356  0036DC  D005               	goto	u3760
  6357  0036DE                     u3765:
  6358  0036DE  90D8               	bcf	status,0,c
  6359  0036E0  320A               	rrcf	(??___fltol+3)^0,f,c
  6360  0036E2  3209               	rrcf	(??___fltol+2)^0,f,c
  6361  0036E4  3208               	rrcf	(??___fltol+1)^0,f,c
  6362  0036E6  3207               	rrcf	??___fltol^0,f,c
  6363  0036E8                     u3760:
  6364  0036E8  2EE8               	decfsz	wreg,f,c
  6365  0036EA  D7F9               	goto	u3765
  6366  0036EC  5007               	movf	??___fltol^0,w,c
  6367  0036EE  6E0B               	movwf	___fltol@sign1^0,c
  6368  0036F0  8E05               	bsf	(___fltol@f1+2)^0,7,c
  6369  0036F2  0EFF               	movlw	255
  6370  0036F4  1603               	andwf	___fltol@f1^0,f,c
  6371  0036F6  0EFF               	movlw	255
  6372  0036F8  1604               	andwf	(___fltol@f1+1)^0,f,c
  6373  0036FA  0EFF               	movlw	255
  6374  0036FC  1605               	andwf	(___fltol@f1+2)^0,f,c
  6375  0036FE  0E00               	movlw	0
  6376  003700  1606               	andwf	(___fltol@f1+3)^0,f,c
  6377  003702  0E96               	movlw	150
  6378  003704  5E0C               	subwf	___fltol@exp1^0,f,c
  6379  003706  AE0C               	btfss	___fltol@exp1^0,7,c
  6380  003708  D00D               	goto	l4000
  6381  00370A  500C               	movf	___fltol@exp1^0,w,c
  6382  00370C  0A80               	xorlw	128
  6383  00370E  0F97               	addlw	151
  6384  003710  A0D8               	btfss	status,0,c
  6385  003712  D7D2               	goto	u3750
  6386  003714                     l3996:
  6387  003714  90D8               	bcf	status,0,c
  6388  003716  3206               	rrcf	(___fltol@f1+3)^0,f,c
  6389  003718  3205               	rrcf	(___fltol@f1+2)^0,f,c
  6390  00371A  3204               	rrcf	(___fltol@f1+1)^0,f,c
  6391  00371C  3203               	rrcf	___fltol@f1^0,f,c
  6392  00371E  3E0C               	incfsz	___fltol@exp1^0,f,c
  6393  003720  D7F9               	goto	l3996
  6394  003722  D00D               	goto	u3800
  6395  003724                     l4000:
  6396  003724  0E1F               	movlw	31
  6397  003726  640C               	cpfsgt	___fltol@exp1^0,c
  6398  003728  D007               	goto	l4008
  6399  00372A  D7C6               	goto	u3750
  6400  00372C                     l4006:
  6401  00372C  90D8               	bcf	status,0,c
  6402  00372E  3603               	rlcf	___fltol@f1^0,f,c
  6403  003730  3604               	rlcf	(___fltol@f1+1)^0,f,c
  6404  003732  3605               	rlcf	(___fltol@f1+2)^0,f,c
  6405  003734  3606               	rlcf	(___fltol@f1+3)^0,f,c
  6406  003736  060C               	decf	___fltol@exp1^0,f,c
  6407  003738                     l4008:
  6408  003738  500C               	movf	___fltol@exp1^0,w,c
  6409  00373A  A4D8               	btfss	status,2,c
  6410  00373C  D7F7               	goto	l4006
  6411  00373E                     u3800:
  6412  00373E  500B               	movf	___fltol@sign1^0,w,c
  6413  003740  B4D8               	btfsc	status,2,c
  6414  003742  D008               	goto	l4014
  6415  003744  1E06               	comf	(___fltol@f1+3)^0,f,c
  6416  003746  1E05               	comf	(___fltol@f1+2)^0,f,c
  6417  003748  1E04               	comf	(___fltol@f1+1)^0,f,c
  6418  00374A  6C03               	negf	___fltol@f1^0,c
  6419  00374C  0E00               	movlw	0
  6420  00374E  2204               	addwfc	(___fltol@f1+1)^0,f,c
  6421  003750  2205               	addwfc	(___fltol@f1+2)^0,f,c
  6422  003752  2206               	addwfc	(___fltol@f1+3)^0,f,c
  6423  003754                     l4014:
  6424  003754  C003  F003         	movff	___fltol@f1,?___fltol
  6425  003758  C004  F004         	movff	___fltol@f1+1,?___fltol+1
  6426  00375C  C005  F005         	movff	___fltol@f1+2,?___fltol+2
  6427  003760  C006  F006         	movff	___fltol@f1+3,?___fltol+3
  6428  003764  0012               	return		;funcret
  6429  003766                     __end_of___fltol:
  6430                           	opt callstack 0
  6431                           
  6432 ;; *************** function ___flmul *****************
  6433 ;; Defined at:
  6434 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\sprcmul.c"
  6435 ;; Parameters:    Size  Location     Type
  6436 ;;  b               4   41[COMRAM] long 
  6437 ;;  a               4   45[COMRAM] long 
  6438 ;; Auto vars:     Size  Location     Type
  6439 ;;  prod            4   60[COMRAM] struct .
  6440 ;;  grs             4   55[COMRAM] unsigned long 
  6441 ;;  temp            2   64[COMRAM] struct .
  6442 ;;  bexp            1   59[COMRAM] unsigned char 
  6443 ;;  aexp            1   54[COMRAM] unsigned char 
  6444 ;;  sign            1   53[COMRAM] unsigned char 
  6445 ;; Return value:  Size  Location     Type
  6446 ;;                  4   41[COMRAM] unsigned char 
  6447 ;; Registers used:
  6448 ;;		wreg, status,2, status,0, prodl, prodh
  6449 ;; Tracked objects:
  6450 ;;		On entry : 0/0
  6451 ;;		On exit  : 0/0
  6452 ;;		Unchanged: 0/0
  6453 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6454 ;;      Params:         8       0       0       0       0       0       0       0       0
  6455 ;;      Locals:        13       0       0       0       0       0       0       0       0
  6456 ;;      Temps:          4       0       0       0       0       0       0       0       0
  6457 ;;      Totals:        25       0       0       0       0       0       0       0       0
  6458 ;;Total ram usage:       25 bytes
  6459 ;; Hardware stack levels used:    1
  6460 ;; Hardware stack levels required when called:    2
  6461 ;; This function calls:
  6462 ;;		Nothing
  6463 ;; This function is called by:
  6464 ;;		_FadeInOut
  6465 ;;		_fadeInOutRainbow
  6466 ;;		_FadeAllcolors
  6467 ;; This function uses a non-reentrant model
  6468 ;;
  6469                           
  6470                           	psect	text22
  6471  001902                     __ptext22:
  6472                           	opt callstack 0
  6473  001902                     ___flmul:
  6474                           	opt callstack 27
  6475                           
  6476                           ;incstack = 0
  6477  001902  502D               	movf	(___flmul@b+3)^0,w,c
  6478  001904  0B80               	andlw	128
  6479  001906  6E36               	movwf	___flmul@sign^0,c
  6480  001908  502D               	movf	(___flmul@b+3)^0,w,c
  6481  00190A  242D               	addwf	(___flmul@b+3)^0,w,c
  6482  00190C  6E3C               	movwf	___flmul@bexp^0,c
  6483  00190E  BE2C               	btfsc	(___flmul@b+2)^0,7,c
  6484  001910  803C               	bsf	___flmul@bexp^0,0,c
  6485  001912  503C               	movf	___flmul@bexp^0,w,c
  6486  001914  B4D8               	btfsc	status,2,c
  6487  001916  D00D               	goto	l3778
  6488  001918  283C               	incf	___flmul@bexp^0,w,c
  6489  00191A  A4D8               	btfss	status,2,c
  6490  00191C  D008               	goto	l3776
  6491  00191E  0E00               	movlw	0
  6492  001920  6E2A               	movwf	___flmul@b^0,c
  6493  001922  0E00               	movlw	0
  6494  001924  6E2B               	movwf	(___flmul@b+1)^0,c
  6495  001926  0E00               	movlw	0
  6496  001928  6E2C               	movwf	(___flmul@b+2)^0,c
  6497  00192A  0E00               	movlw	0
  6498  00192C  6E2D               	movwf	(___flmul@b+3)^0,c
  6499  00192E                     l3776:
  6500  00192E  8E2C               	bsf	(___flmul@b+2)^0,7,c
  6501  001930  D008               	goto	l3780
  6502  001932                     l3778:
  6503  001932  0E00               	movlw	0
  6504  001934  6E2A               	movwf	___flmul@b^0,c
  6505  001936  0E00               	movlw	0
  6506  001938  6E2B               	movwf	(___flmul@b+1)^0,c
  6507  00193A  0E00               	movlw	0
  6508  00193C  6E2C               	movwf	(___flmul@b+2)^0,c
  6509  00193E  0E00               	movlw	0
  6510  001940  6E2D               	movwf	(___flmul@b+3)^0,c
  6511  001942                     l3780:
  6512  001942  5031               	movf	(___flmul@a+3)^0,w,c
  6513  001944  0B80               	andlw	128
  6514  001946  1A36               	xorwf	___flmul@sign^0,f,c
  6515  001948  5031               	movf	(___flmul@a+3)^0,w,c
  6516  00194A  2431               	addwf	(___flmul@a+3)^0,w,c
  6517  00194C  6E37               	movwf	___flmul@aexp^0,c
  6518  00194E  BE30               	btfsc	(___flmul@a+2)^0,7,c
  6519  001950  8037               	bsf	___flmul@aexp^0,0,c
  6520  001952  5037               	movf	___flmul@aexp^0,w,c
  6521  001954  B4D8               	btfsc	status,2,c
  6522  001956  D00D               	goto	l3796
  6523  001958  2837               	incf	___flmul@aexp^0,w,c
  6524  00195A  A4D8               	btfss	status,2,c
  6525  00195C  D008               	goto	l3794
  6526  00195E  0E00               	movlw	0
  6527  001960  6E2E               	movwf	___flmul@a^0,c
  6528  001962  0E00               	movlw	0
  6529  001964  6E2F               	movwf	(___flmul@a+1)^0,c
  6530  001966  0E00               	movlw	0
  6531  001968  6E30               	movwf	(___flmul@a+2)^0,c
  6532  00196A  0E00               	movlw	0
  6533  00196C  6E31               	movwf	(___flmul@a+3)^0,c
  6534  00196E                     l3794:
  6535  00196E  8E30               	bsf	(___flmul@a+2)^0,7,c
  6536  001970  D008               	goto	l1293
  6537  001972                     l3796:
  6538  001972  0E00               	movlw	0
  6539  001974  6E2E               	movwf	___flmul@a^0,c
  6540  001976  0E00               	movlw	0
  6541  001978  6E2F               	movwf	(___flmul@a+1)^0,c
  6542  00197A  0E00               	movlw	0
  6543  00197C  6E30               	movwf	(___flmul@a+2)^0,c
  6544  00197E  0E00               	movlw	0
  6545  001980  6E31               	movwf	(___flmul@a+3)^0,c
  6546  001982                     l1293:
  6547  001982  5037               	movf	___flmul@aexp^0,w,c
  6548  001984  B4D8               	btfsc	status,2,c
  6549  001986  D003               	goto	u3520
  6550  001988  503C               	movf	___flmul@bexp^0,w,c
  6551  00198A  A4D8               	btfss	status,2,c
  6552  00198C  D009               	goto	l3804
  6553  00198E                     u3520:
  6554  00198E  0E00               	movlw	0
  6555  001990  6E2A               	movwf	?___flmul^0,c
  6556  001992  0E00               	movlw	0
  6557  001994  6E2B               	movwf	(?___flmul+1)^0,c
  6558  001996  0E00               	movlw	0
  6559  001998  6E2C               	movwf	(?___flmul+2)^0,c
  6560  00199A  0E00               	movlw	0
  6561  00199C  6E2D               	movwf	(?___flmul+3)^0,c
  6562  00199E  0012               	return	
  6563  0019A0                     l3804:
  6564  0019A0  5030               	movf	(___flmul@a+2)^0,w,c
  6565  0019A2  022A               	mulwf	___flmul@b^0,c
  6566  0019A4  CFF3 F041          	movff	prodl,___flmul@temp
  6567  0019A8  CFF4 F042          	movff	prodh,___flmul@temp+1
  6568  0019AC  5041               	movf	___flmul@temp^0,w,c
  6569  0019AE  6E38               	movwf	___flmul@grs^0,c
  6570  0019B0  6A39               	clrf	(___flmul@grs+1)^0,c
  6571  0019B2  6A3A               	clrf	(___flmul@grs+2)^0,c
  6572  0019B4  6A3B               	clrf	(___flmul@grs+3)^0,c
  6573  0019B6  5042               	movf	(___flmul@temp+1)^0,w,c
  6574  0019B8  6E3D               	movwf	___flmul@prod^0,c
  6575  0019BA  6A3E               	clrf	(___flmul@prod+1)^0,c
  6576  0019BC  6A3F               	clrf	(___flmul@prod+2)^0,c
  6577  0019BE  6A40               	clrf	(___flmul@prod+3)^0,c
  6578  0019C0  502F               	movf	(___flmul@a+1)^0,w,c
  6579  0019C2  022B               	mulwf	(___flmul@b+1)^0,c
  6580  0019C4  CFF3 F041          	movff	prodl,___flmul@temp
  6581  0019C8  CFF4 F042          	movff	prodh,___flmul@temp+1
  6582  0019CC  5041               	movf	___flmul@temp^0,w,c
  6583  0019CE  2638               	addwf	___flmul@grs^0,f,c
  6584  0019D0  0E00               	movlw	0
  6585  0019D2  2239               	addwfc	(___flmul@grs+1)^0,f,c
  6586  0019D4  223A               	addwfc	(___flmul@grs+2)^0,f,c
  6587  0019D6  223B               	addwfc	(___flmul@grs+3)^0,f,c
  6588  0019D8  5042               	movf	(___flmul@temp+1)^0,w,c
  6589  0019DA  263D               	addwf	___flmul@prod^0,f,c
  6590  0019DC  0E00               	movlw	0
  6591  0019DE  223E               	addwfc	(___flmul@prod+1)^0,f,c
  6592  0019E0  223F               	addwfc	(___flmul@prod+2)^0,f,c
  6593  0019E2  2240               	addwfc	(___flmul@prod+3)^0,f,c
  6594  0019E4  502E               	movf	___flmul@a^0,w,c
  6595  0019E6  022C               	mulwf	(___flmul@b+2)^0,c
  6596  0019E8  CFF3 F041          	movff	prodl,___flmul@temp
  6597  0019EC  CFF4 F042          	movff	prodh,___flmul@temp+1
  6598  0019F0  5041               	movf	___flmul@temp^0,w,c
  6599  0019F2  2638               	addwf	___flmul@grs^0,f,c
  6600  0019F4  0E00               	movlw	0
  6601  0019F6  2239               	addwfc	(___flmul@grs+1)^0,f,c
  6602  0019F8  223A               	addwfc	(___flmul@grs+2)^0,f,c
  6603  0019FA  223B               	addwfc	(___flmul@grs+3)^0,f,c
  6604  0019FC  5042               	movf	(___flmul@temp+1)^0,w,c
  6605  0019FE  263D               	addwf	___flmul@prod^0,f,c
  6606  001A00  0E00               	movlw	0
  6607  001A02  223E               	addwfc	(___flmul@prod+1)^0,f,c
  6608  001A04  223F               	addwfc	(___flmul@prod+2)^0,f,c
  6609  001A06  2240               	addwfc	(___flmul@prod+3)^0,f,c
  6610  001A08  C03A  F03B         	movff	___flmul@grs+2,___flmul@grs+3
  6611  001A0C  C039  F03A         	movff	___flmul@grs+1,___flmul@grs+2
  6612  001A10  C038  F039         	movff	___flmul@grs,___flmul@grs+1
  6613  001A14  6A38               	clrf	___flmul@grs^0,c
  6614  001A16  502E               	movf	___flmul@a^0,w,c
  6615  001A18  022B               	mulwf	(___flmul@b+1)^0,c
  6616  001A1A  CFF3 F041          	movff	prodl,___flmul@temp
  6617  001A1E  CFF4 F042          	movff	prodh,___flmul@temp+1
  6618  001A22  5041               	movf	___flmul@temp^0,w,c
  6619  001A24  2638               	addwf	___flmul@grs^0,f,c
  6620  001A26  5042               	movf	(___flmul@temp+1)^0,w,c
  6621  001A28  2239               	addwfc	(___flmul@grs+1)^0,f,c
  6622  001A2A  0E00               	movlw	0
  6623  001A2C  223A               	addwfc	(___flmul@grs+2)^0,f,c
  6624  001A2E  0E00               	movlw	0
  6625  001A30  223B               	addwfc	(___flmul@grs+3)^0,f,c
  6626  001A32  502F               	movf	(___flmul@a+1)^0,w,c
  6627  001A34  022A               	mulwf	___flmul@b^0,c
  6628  001A36  CFF3 F041          	movff	prodl,___flmul@temp
  6629  001A3A  CFF4 F042          	movff	prodh,___flmul@temp+1
  6630  001A3E  5041               	movf	___flmul@temp^0,w,c
  6631  001A40  2638               	addwf	___flmul@grs^0,f,c
  6632  001A42  5042               	movf	(___flmul@temp+1)^0,w,c
  6633  001A44  2239               	addwfc	(___flmul@grs+1)^0,f,c
  6634  001A46  0E00               	movlw	0
  6635  001A48  223A               	addwfc	(___flmul@grs+2)^0,f,c
  6636  001A4A  0E00               	movlw	0
  6637  001A4C  223B               	addwfc	(___flmul@grs+3)^0,f,c
  6638  001A4E  C03A  F03B         	movff	___flmul@grs+2,___flmul@grs+3
  6639  001A52  C039  F03A         	movff	___flmul@grs+1,___flmul@grs+2
  6640  001A56  C038  F039         	movff	___flmul@grs,___flmul@grs+1
  6641  001A5A  6A38               	clrf	___flmul@grs^0,c
  6642  001A5C  502E               	movf	___flmul@a^0,w,c
  6643  001A5E  022A               	mulwf	___flmul@b^0,c
  6644  001A60  CFF3 F041          	movff	prodl,___flmul@temp
  6645  001A64  CFF4 F042          	movff	prodh,___flmul@temp+1
  6646  001A68  5041               	movf	___flmul@temp^0,w,c
  6647  001A6A  2638               	addwf	___flmul@grs^0,f,c
  6648  001A6C  5042               	movf	(___flmul@temp+1)^0,w,c
  6649  001A6E  2239               	addwfc	(___flmul@grs+1)^0,f,c
  6650  001A70  0E00               	movlw	0
  6651  001A72  223A               	addwfc	(___flmul@grs+2)^0,f,c
  6652  001A74  0E00               	movlw	0
  6653  001A76  223B               	addwfc	(___flmul@grs+3)^0,f,c
  6654  001A78  5030               	movf	(___flmul@a+2)^0,w,c
  6655  001A7A  022B               	mulwf	(___flmul@b+1)^0,c
  6656  001A7C  CFF3 F041          	movff	prodl,___flmul@temp
  6657  001A80  CFF4 F042          	movff	prodh,___flmul@temp+1
  6658  001A84  5041               	movf	___flmul@temp^0,w,c
  6659  001A86  263D               	addwf	___flmul@prod^0,f,c
  6660  001A88  5042               	movf	(___flmul@temp+1)^0,w,c
  6661  001A8A  223E               	addwfc	(___flmul@prod+1)^0,f,c
  6662  001A8C  0E00               	movlw	0
  6663  001A8E  223F               	addwfc	(___flmul@prod+2)^0,f,c
  6664  001A90  0E00               	movlw	0
  6665  001A92  2240               	addwfc	(___flmul@prod+3)^0,f,c
  6666  001A94  502F               	movf	(___flmul@a+1)^0,w,c
  6667  001A96  022C               	mulwf	(___flmul@b+2)^0,c
  6668  001A98  CFF3 F041          	movff	prodl,___flmul@temp
  6669  001A9C  CFF4 F042          	movff	prodh,___flmul@temp+1
  6670  001AA0  5041               	movf	___flmul@temp^0,w,c
  6671  001AA2  263D               	addwf	___flmul@prod^0,f,c
  6672  001AA4  5042               	movf	(___flmul@temp+1)^0,w,c
  6673  001AA6  223E               	addwfc	(___flmul@prod+1)^0,f,c
  6674  001AA8  0E00               	movlw	0
  6675  001AAA  223F               	addwfc	(___flmul@prod+2)^0,f,c
  6676  001AAC  0E00               	movlw	0
  6677  001AAE  2240               	addwfc	(___flmul@prod+3)^0,f,c
  6678  001AB0  5030               	movf	(___flmul@a+2)^0,w,c
  6679  001AB2  022C               	mulwf	(___flmul@b+2)^0,c
  6680  001AB4  CFF3 F041          	movff	prodl,___flmul@temp
  6681  001AB8  CFF4 F042          	movff	prodh,___flmul@temp+1
  6682  001ABC  5041               	movf	___flmul@temp^0,w,c
  6683  001ABE  6E32               	movwf	??___flmul^0,c
  6684  001AC0  5042               	movf	(___flmul@temp+1)^0,w,c
  6685  001AC2  6E33               	movwf	(??___flmul+1)^0,c
  6686  001AC4  6A34               	clrf	(??___flmul+2)^0,c
  6687  001AC6  6A35               	clrf	(??___flmul+3)^0,c
  6688  001AC8  C034  F035         	movff	??___flmul+2,??___flmul+3
  6689  001ACC  C033  F034         	movff	??___flmul+1,??___flmul+2
  6690  001AD0  C032  F033         	movff	??___flmul,??___flmul+1
  6691  001AD4  6A32               	clrf	??___flmul^0,c
  6692  001AD6  5032               	movf	??___flmul^0,w,c
  6693  001AD8  263D               	addwf	___flmul@prod^0,f,c
  6694  001ADA  5033               	movf	(??___flmul+1)^0,w,c
  6695  001ADC  223E               	addwfc	(___flmul@prod+1)^0,f,c
  6696  001ADE  5034               	movf	(??___flmul+2)^0,w,c
  6697  001AE0  223F               	addwfc	(___flmul@prod+2)^0,f,c
  6698  001AE2  5035               	movf	(??___flmul+3)^0,w,c
  6699  001AE4  2240               	addwfc	(___flmul@prod+3)^0,f,c
  6700  001AE6  503B               	movf	(___flmul@grs+3)^0,w,c
  6701  001AE8  263D               	addwf	___flmul@prod^0,f,c
  6702  001AEA  0E00               	movlw	0
  6703  001AEC  223E               	addwfc	(___flmul@prod+1)^0,f,c
  6704  001AEE  223F               	addwfc	(___flmul@prod+2)^0,f,c
  6705  001AF0  2240               	addwfc	(___flmul@prod+3)^0,f,c
  6706  001AF2  C03A  F03B         	movff	___flmul@grs+2,___flmul@grs+3
  6707  001AF6  C039  F03A         	movff	___flmul@grs+1,___flmul@grs+2
  6708  001AFA  C038  F039         	movff	___flmul@grs,___flmul@grs+1
  6709  001AFE  6A38               	clrf	___flmul@grs^0,c
  6710  001B00  5037               	movf	___flmul@aexp^0,w,c
  6711  001B02  C03C  F032         	movff	___flmul@bexp,??___flmul
  6712  001B06  6A33               	clrf	(??___flmul+1)^0,c
  6713  001B08  2632               	addwf	??___flmul^0,f,c
  6714  001B0A  0E00               	movlw	0
  6715  001B0C  2233               	addwfc	(??___flmul+1)^0,f,c
  6716  001B0E  0E82               	movlw	130
  6717  001B10  2432               	addwf	??___flmul^0,w,c
  6718  001B12  6E41               	movwf	___flmul@temp^0,c
  6719  001B14  0EFF               	movlw	255
  6720  001B16  2033               	addwfc	(??___flmul+1)^0,w,c
  6721  001B18  6E42               	movwf	(___flmul@temp+1)^0,c
  6722  001B1A  D00F               	goto	l3852
  6723  001B1C                     l3846:
  6724  001B1C  90D8               	bcf	status,0,c
  6725  001B1E  363D               	rlcf	___flmul@prod^0,f,c
  6726  001B20  363E               	rlcf	(___flmul@prod+1)^0,f,c
  6727  001B22  363F               	rlcf	(___flmul@prod+2)^0,f,c
  6728  001B24  3640               	rlcf	(___flmul@prod+3)^0,f,c
  6729  001B26  BE3B               	btfsc	(___flmul@grs+3)^0,7,c
  6730  001B28  803D               	bsf	___flmul@prod^0,0,c
  6731  001B2A  90D8               	bcf	status,0,c
  6732  001B2C  3638               	rlcf	___flmul@grs^0,f,c
  6733  001B2E  3639               	rlcf	(___flmul@grs+1)^0,f,c
  6734  001B30  363A               	rlcf	(___flmul@grs+2)^0,f,c
  6735  001B32  363B               	rlcf	(___flmul@grs+3)^0,f,c
  6736  001B34  0641               	decf	___flmul@temp^0,f,c
  6737  001B36  A0D8               	btfss	status,0,c
  6738  001B38  0642               	decf	(___flmul@temp+1)^0,f,c
  6739  001B3A                     l3852:
  6740  001B3A  AE3F               	btfss	(___flmul@prod+2)^0,7,c
  6741  001B3C  D7EF               	goto	l3846
  6742  001B3E  0E00               	movlw	0
  6743  001B40  6E37               	movwf	___flmul@aexp^0,c
  6744  001B42  AE3B               	btfss	(___flmul@grs+3)^0,7,c
  6745  001B44  D017               	goto	l1302
  6746  001B46  0EFF               	movlw	255
  6747  001B48  1438               	andwf	___flmul@grs^0,w,c
  6748  001B4A  6E32               	movwf	??___flmul^0,c
  6749  001B4C  0EFF               	movlw	255
  6750  001B4E  1439               	andwf	(___flmul@grs+1)^0,w,c
  6751  001B50  6E33               	movwf	(??___flmul+1)^0,c
  6752  001B52  0EFF               	movlw	255
  6753  001B54  143A               	andwf	(___flmul@grs+2)^0,w,c
  6754  001B56  6E34               	movwf	(??___flmul+2)^0,c
  6755  001B58  0E7F               	movlw	127
  6756  001B5A  143B               	andwf	(___flmul@grs+3)^0,w,c
  6757  001B5C  6E35               	movwf	(??___flmul+3)^0,c
  6758  001B5E  5032               	movf	??___flmul^0,w,c
  6759  001B60  1033               	iorwf	(??___flmul+1)^0,w,c
  6760  001B62  1034               	iorwf	(??___flmul+2)^0,w,c
  6761  001B64  1035               	iorwf	(??___flmul+3)^0,w,c
  6762  001B66  B4D8               	btfsc	status,2,c
  6763  001B68  D003               	goto	l1303
  6764  001B6A                     u3560:
  6765  001B6A  0E01               	movlw	1
  6766  001B6C  6E37               	movwf	___flmul@aexp^0,c
  6767  001B6E  D002               	goto	l1302
  6768  001B70                     l1303:
  6769  001B70  B03D               	btfsc	___flmul@prod^0,0,c
  6770  001B72  D7FB               	goto	u3560
  6771  001B74                     l1302:
  6772  001B74  5037               	movf	___flmul@aexp^0,w,c
  6773  001B76  B4D8               	btfsc	status,2,c
  6774  001B78  D01F               	goto	l3872
  6775  001B7A  0E01               	movlw	1
  6776  001B7C  263D               	addwf	___flmul@prod^0,f,c
  6777  001B7E  0E00               	movlw	0
  6778  001B80  223E               	addwfc	(___flmul@prod+1)^0,f,c
  6779  001B82  223F               	addwfc	(___flmul@prod+2)^0,f,c
  6780  001B84  2240               	addwfc	(___flmul@prod+3)^0,f,c
  6781  001B86  A040               	btfss	(___flmul@prod+3)^0,0,c
  6782  001B88  D017               	goto	l3872
  6783  001B8A  C03D  F032         	movff	___flmul@prod,??___flmul
  6784  001B8E  C03E  F033         	movff	___flmul@prod+1,??___flmul+1
  6785  001B92  C03F  F034         	movff	___flmul@prod+2,??___flmul+2
  6786  001B96  C040  F035         	movff	___flmul@prod+3,??___flmul+3
  6787  001B9A  3435               	rlcf	(??___flmul+3)^0,w,c
  6788  001B9C  3235               	rrcf	(??___flmul+3)^0,f,c
  6789  001B9E  3234               	rrcf	(??___flmul+2)^0,f,c
  6790  001BA0  3233               	rrcf	(??___flmul+1)^0,f,c
  6791  001BA2  3232               	rrcf	??___flmul^0,f,c
  6792  001BA4  C032  F03D         	movff	??___flmul,___flmul@prod
  6793  001BA8  C033  F03E         	movff	??___flmul+1,___flmul@prod+1
  6794  001BAC  C034  F03F         	movff	??___flmul+2,___flmul@prod+2
  6795  001BB0  C035  F040         	movff	??___flmul+3,___flmul@prod+3
  6796  001BB4  4A41               	infsnz	___flmul@temp^0,f,c
  6797  001BB6  2A42               	incf	(___flmul@temp+1)^0,f,c
  6798  001BB8                     l3872:
  6799  001BB8  BE42               	btfsc	(___flmul@temp+1)^0,7,c
  6800  001BBA  D00D               	goto	l3876
  6801  001BBC  5042               	movf	(___flmul@temp+1)^0,w,c
  6802  001BBE  E103               	bnz	u3600
  6803  001BC0  2841               	incf	___flmul@temp^0,w,c
  6804  001BC2  A0D8               	btfss	status,0,c
  6805  001BC4  D008               	goto	l3876
  6806  001BC6                     u3600:
  6807  001BC6  0E00               	movlw	0
  6808  001BC8  6E3D               	movwf	___flmul@prod^0,c
  6809  001BCA  0E00               	movlw	0
  6810  001BCC  6E3E               	movwf	(___flmul@prod+1)^0,c
  6811  001BCE  0E80               	movlw	128
  6812  001BD0  6E3F               	movwf	(___flmul@prod+2)^0,c
  6813  001BD2  0E7F               	movlw	127
  6814  001BD4  D020               	goto	L5
  6815  001BD6                     l3876:
  6816  001BD6  BE42               	btfsc	(___flmul@temp+1)^0,7,c
  6817  001BD8  D005               	goto	u3610
  6818  001BDA  5042               	movf	(___flmul@temp+1)^0,w,c
  6819  001BDC  E10E               	bnz	l1310
  6820  001BDE  0441               	decf	___flmul@temp^0,w,c
  6821  001BE0  B0D8               	btfsc	status,0,c
  6822  001BE2  D00B               	goto	l1310
  6823  001BE4                     u3610:
  6824  001BE4  0E00               	movlw	0
  6825  001BE6  6E3D               	movwf	___flmul@prod^0,c
  6826  001BE8  0E00               	movlw	0
  6827  001BEA  6E3E               	movwf	(___flmul@prod+1)^0,c
  6828  001BEC  0E00               	movlw	0
  6829  001BEE  6E3F               	movwf	(___flmul@prod+2)^0,c
  6830  001BF0  0E00               	movlw	0
  6831  001BF2  6E40               	movwf	(___flmul@prod+3)^0,c
  6832  001BF4  0E00               	movlw	0
  6833  001BF6  6E36               	movwf	___flmul@sign^0,c
  6834  001BF8  D00F               	goto	l3888
  6835  001BFA                     l1310:
  6836  001BFA  C041  F03C         	movff	___flmul@temp,___flmul@bexp
  6837  001BFE  0EFF               	movlw	255
  6838  001C00  163D               	andwf	___flmul@prod^0,f,c
  6839  001C02  0EFF               	movlw	255
  6840  001C04  163E               	andwf	(___flmul@prod+1)^0,f,c
  6841  001C06  0E7F               	movlw	127
  6842  001C08  163F               	andwf	(___flmul@prod+2)^0,f,c
  6843  001C0A  0E00               	movlw	0
  6844  001C0C  1640               	andwf	(___flmul@prod+3)^0,f,c
  6845  001C0E  B03C               	btfsc	___flmul@bexp^0,0,c
  6846  001C10  8E3F               	bsf	(___flmul@prod+2)^0,7,c
  6847  001C12  90D8               	bcf	status,0,c
  6848  001C14  303C               	rrcf	___flmul@bexp^0,w,c
  6849  001C16                     L5:
  6850  001C16  6E40               	movwf	(___flmul@prod+3)^0,c
  6851  001C18                     l3888:
  6852  001C18  5036               	movf	___flmul@sign^0,w,c
  6853  001C1A  1240               	iorwf	(___flmul@prod+3)^0,f,c
  6854  001C1C  C03D  F02A         	movff	___flmul@prod,?___flmul
  6855  001C20  C03E  F02B         	movff	___flmul@prod+1,?___flmul+1
  6856  001C24  C03F  F02C         	movff	___flmul@prod+2,?___flmul+2
  6857  001C28  C040  F02D         	movff	___flmul@prod+3,?___flmul+3
  6858  001C2C  0012               	return		;funcret
  6859  001C2E                     __end_of___flmul:
  6860                           	opt callstack 0
  6861                           
  6862 ;; *************** function ___fldiv *****************
  6863 ;; Defined at:
  6864 ;;		line 11 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\sprcdiv.c"
  6865 ;; Parameters:    Size  Location     Type
  6866 ;;  b               4   16[COMRAM] unsigned char 
  6867 ;;  a               4   20[COMRAM] unsigned char 
  6868 ;; Auto vars:     Size  Location     Type
  6869 ;;  grs             4   35[COMRAM] unsigned long 
  6870 ;;  rem             4   28[COMRAM] unsigned long 
  6871 ;;  new_exp         2   33[COMRAM] short 
  6872 ;;  aexp            1   40[COMRAM] unsigned char 
  6873 ;;  bexp            1   39[COMRAM] unsigned char 
  6874 ;;  sign            1   32[COMRAM] unsigned char 
  6875 ;; Return value:  Size  Location     Type
  6876 ;;                  4   16[COMRAM] unsigned char 
  6877 ;; Registers used:
  6878 ;;		wreg, status,2, status,0
  6879 ;; Tracked objects:
  6880 ;;		On entry : 0/0
  6881 ;;		On exit  : 0/0
  6882 ;;		Unchanged: 0/0
  6883 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6884 ;;      Params:         8       0       0       0       0       0       0       0       0
  6885 ;;      Locals:        13       0       0       0       0       0       0       0       0
  6886 ;;      Temps:          4       0       0       0       0       0       0       0       0
  6887 ;;      Totals:        25       0       0       0       0       0       0       0       0
  6888 ;;Total ram usage:       25 bytes
  6889 ;; Hardware stack levels used:    1
  6890 ;; Hardware stack levels required when called:    2
  6891 ;; This function calls:
  6892 ;;		Nothing
  6893 ;; This function is called by:
  6894 ;;		_FadeInOut
  6895 ;;		_fadeInOutRainbow
  6896 ;;		_FadeAllcolors
  6897 ;; This function uses a non-reentrant model
  6898 ;;
  6899                           
  6900                           	psect	text23
  6901  0021B4                     __ptext23:
  6902                           	opt callstack 0
  6903  0021B4                     ___fldiv:
  6904                           	opt callstack 27
  6905                           
  6906                           ;incstack = 0
  6907  0021B4  5014               	movf	(___fldiv@b+3)^0,w,c
  6908  0021B6  0B80               	andlw	128
  6909  0021B8  6E21               	movwf	___fldiv@sign^0,c
  6910  0021BA  5014               	movf	(___fldiv@b+3)^0,w,c
  6911  0021BC  2414               	addwf	(___fldiv@b+3)^0,w,c
  6912  0021BE  6E28               	movwf	___fldiv@bexp^0,c
  6913  0021C0  BE13               	btfsc	(___fldiv@b+2)^0,7,c
  6914  0021C2  8028               	bsf	___fldiv@bexp^0,0,c
  6915  0021C4  5028               	movf	___fldiv@bexp^0,w,c
  6916  0021C6  B4D8               	btfsc	status,2,c
  6917  0021C8  D00D               	goto	l3642
  6918  0021CA  2828               	incf	___fldiv@bexp^0,w,c
  6919  0021CC  A4D8               	btfss	status,2,c
  6920  0021CE  D008               	goto	l3638
  6921  0021D0  0E00               	movlw	0
  6922  0021D2  6E11               	movwf	___fldiv@b^0,c
  6923  0021D4  0E00               	movlw	0
  6924  0021D6  6E12               	movwf	(___fldiv@b+1)^0,c
  6925  0021D8  0E00               	movlw	0
  6926  0021DA  6E13               	movwf	(___fldiv@b+2)^0,c
  6927  0021DC  0E00               	movlw	0
  6928  0021DE  6E14               	movwf	(___fldiv@b+3)^0,c
  6929  0021E0                     l3638:
  6930  0021E0  8E13               	bsf	(___fldiv@b+2)^0,7,c
  6931  0021E2  D006               	goto	L6
  6932  0021E4                     l3642:
  6933  0021E4  0E00               	movlw	0
  6934  0021E6  6E11               	movwf	___fldiv@b^0,c
  6935  0021E8  0E00               	movlw	0
  6936  0021EA  6E12               	movwf	(___fldiv@b+1)^0,c
  6937  0021EC  0E00               	movlw	0
  6938  0021EE  6E13               	movwf	(___fldiv@b+2)^0,c
  6939  0021F0                     L6:
  6940  0021F0  0E00               	movlw	0
  6941  0021F2  6E14               	movwf	(___fldiv@b+3)^0,c
  6942  0021F4  5018               	movf	(___fldiv@a+3)^0,w,c
  6943  0021F6  0B80               	andlw	128
  6944  0021F8  1A21               	xorwf	___fldiv@sign^0,f,c
  6945  0021FA  5018               	movf	(___fldiv@a+3)^0,w,c
  6946  0021FC  2418               	addwf	(___fldiv@a+3)^0,w,c
  6947  0021FE  6E29               	movwf	___fldiv@aexp^0,c
  6948  002200  BE17               	btfsc	(___fldiv@a+2)^0,7,c
  6949  002202  8029               	bsf	___fldiv@aexp^0,0,c
  6950  002204  5029               	movf	___fldiv@aexp^0,w,c
  6951  002206  B4D8               	btfsc	status,2,c
  6952  002208  D00D               	goto	l3662
  6953  00220A  2829               	incf	___fldiv@aexp^0,w,c
  6954  00220C  A4D8               	btfss	status,2,c
  6955  00220E  D008               	goto	l3658
  6956  002210  0E00               	movlw	0
  6957  002212  6E15               	movwf	___fldiv@a^0,c
  6958  002214  0E00               	movlw	0
  6959  002216  6E16               	movwf	(___fldiv@a+1)^0,c
  6960  002218  0E00               	movlw	0
  6961  00221A  6E17               	movwf	(___fldiv@a+2)^0,c
  6962  00221C  0E00               	movlw	0
  6963  00221E  6E18               	movwf	(___fldiv@a+3)^0,c
  6964  002220                     l3658:
  6965  002220  8E17               	bsf	(___fldiv@a+2)^0,7,c
  6966  002222  D006               	goto	L7
  6967  002224                     l3662:
  6968  002224  0E00               	movlw	0
  6969  002226  6E15               	movwf	___fldiv@a^0,c
  6970  002228  0E00               	movlw	0
  6971  00222A  6E16               	movwf	(___fldiv@a+1)^0,c
  6972  00222C  0E00               	movlw	0
  6973  00222E  6E17               	movwf	(___fldiv@a+2)^0,c
  6974  002230                     L7:
  6975  002230  0E00               	movlw	0
  6976  002232  6E18               	movwf	(___fldiv@a+3)^0,c
  6977  002234  5015               	movf	___fldiv@a^0,w,c
  6978  002236  1016               	iorwf	(___fldiv@a+1)^0,w,c
  6979  002238  1017               	iorwf	(___fldiv@a+2)^0,w,c
  6980  00223A  1018               	iorwf	(___fldiv@a+3)^0,w,c
  6981  00223C  A4D8               	btfss	status,2,c
  6982  00223E  D017               	goto	l3676
  6983  002240  0E00               	movlw	0
  6984  002242  6E11               	movwf	___fldiv@b^0,c
  6985  002244  0E00               	movlw	0
  6986  002246  6E12               	movwf	(___fldiv@b+1)^0,c
  6987  002248  0E00               	movlw	0
  6988  00224A  6E13               	movwf	(___fldiv@b+2)^0,c
  6989  00224C  0E00               	movlw	0
  6990  00224E  6E14               	movwf	(___fldiv@b+3)^0,c
  6991  002250  0E80               	movlw	128
  6992  002252  1213               	iorwf	(___fldiv@b+2)^0,f,c
  6993  002254  0E7F               	movlw	127
  6994  002256  1214               	iorwf	(___fldiv@b+3)^0,f,c
  6995  002258                     l3670:
  6996  002258  5021               	movf	___fldiv@sign^0,w,c
  6997  00225A  1214               	iorwf	(___fldiv@b+3)^0,f,c
  6998  00225C  C011  F011         	movff	___fldiv@b,?___fldiv
  6999  002260  C012  F012         	movff	___fldiv@b+1,?___fldiv+1
  7000  002264  C013  F013         	movff	___fldiv@b+2,?___fldiv+2
  7001  002268  C014  F014         	movff	___fldiv@b+3,?___fldiv+3
  7002  00226C  0012               	return	
  7003  00226E                     l3676:
  7004  00226E  5028               	movf	___fldiv@bexp^0,w,c
  7005  002270  A4D8               	btfss	status,2,c
  7006  002272  D009               	goto	l3684
  7007  002274  0E00               	movlw	0
  7008  002276  6E11               	movwf	?___fldiv^0,c
  7009  002278  0E00               	movlw	0
  7010  00227A  6E12               	movwf	(?___fldiv+1)^0,c
  7011  00227C  0E00               	movlw	0
  7012  00227E  6E13               	movwf	(?___fldiv+2)^0,c
  7013  002280  0E00               	movlw	0
  7014  002282  6E14               	movwf	(?___fldiv+3)^0,c
  7015  002284  0012               	return	
  7016  002286                     l3684:
  7017  002286  5029               	movf	___fldiv@aexp^0,w,c
  7018  002288  C028  F019         	movff	___fldiv@bexp,??___fldiv
  7019  00228C  6A1A               	clrf	(??___fldiv+1)^0,c
  7020  00228E  5E19               	subwf	??___fldiv^0,f,c
  7021  002290  0E00               	movlw	0
  7022  002292  5A1A               	subwfb	(??___fldiv+1)^0,f,c
  7023  002294  0E7F               	movlw	127
  7024  002296  2419               	addwf	??___fldiv^0,w,c
  7025  002298  6E22               	movwf	___fldiv@new_exp^0,c
  7026  00229A  0E00               	movlw	0
  7027  00229C  201A               	addwfc	(??___fldiv+1)^0,w,c
  7028  00229E  6E23               	movwf	(___fldiv@new_exp+1)^0,c
  7029  0022A0  C011  F01D         	movff	___fldiv@b,___fldiv@rem
  7030  0022A4  C012  F01E         	movff	___fldiv@b+1,___fldiv@rem+1
  7031  0022A8  C013  F01F         	movff	___fldiv@b+2,___fldiv@rem+2
  7032  0022AC  C014  F020         	movff	___fldiv@b+3,___fldiv@rem+3
  7033  0022B0  0E00               	movlw	0
  7034  0022B2  6E11               	movwf	___fldiv@b^0,c
  7035  0022B4  0E00               	movlw	0
  7036  0022B6  6E12               	movwf	(___fldiv@b+1)^0,c
  7037  0022B8  0E00               	movlw	0
  7038  0022BA  6E13               	movwf	(___fldiv@b+2)^0,c
  7039  0022BC  0E00               	movlw	0
  7040  0022BE  6E14               	movwf	(___fldiv@b+3)^0,c
  7041  0022C0  0E00               	movlw	0
  7042  0022C2  6E24               	movwf	___fldiv@grs^0,c
  7043  0022C4  0E00               	movlw	0
  7044  0022C6  6E25               	movwf	(___fldiv@grs+1)^0,c
  7045  0022C8  0E00               	movlw	0
  7046  0022CA  6E26               	movwf	(___fldiv@grs+2)^0,c
  7047  0022CC  0E00               	movlw	0
  7048  0022CE  6E27               	movwf	(___fldiv@grs+3)^0,c
  7049  0022D0  0E00               	movlw	0
  7050  0022D2  6E29               	movwf	___fldiv@aexp^0,c
  7051  0022D4  D028               	goto	l1263
  7052  0022D6                     l3694:
  7053  0022D6  5029               	movf	___fldiv@aexp^0,w,c
  7054  0022D8  B4D8               	btfsc	status,2,c
  7055  0022DA  D011               	goto	l3702
  7056  0022DC  90D8               	bcf	status,0,c
  7057  0022DE  361D               	rlcf	___fldiv@rem^0,f,c
  7058  0022E0  361E               	rlcf	(___fldiv@rem+1)^0,f,c
  7059  0022E2  361F               	rlcf	(___fldiv@rem+2)^0,f,c
  7060  0022E4  3620               	rlcf	(___fldiv@rem+3)^0,f,c
  7061  0022E6  90D8               	bcf	status,0,c
  7062  0022E8  3611               	rlcf	___fldiv@b^0,f,c
  7063  0022EA  3612               	rlcf	(___fldiv@b+1)^0,f,c
  7064  0022EC  3613               	rlcf	(___fldiv@b+2)^0,f,c
  7065  0022EE  3614               	rlcf	(___fldiv@b+3)^0,f,c
  7066  0022F0  BE27               	btfsc	(___fldiv@grs+3)^0,7,c
  7067  0022F2  8011               	bsf	___fldiv@b^0,0,c
  7068  0022F4  90D8               	bcf	status,0,c
  7069  0022F6  3624               	rlcf	___fldiv@grs^0,f,c
  7070  0022F8  3625               	rlcf	(___fldiv@grs+1)^0,f,c
  7071  0022FA  3626               	rlcf	(___fldiv@grs+2)^0,f,c
  7072  0022FC  3627               	rlcf	(___fldiv@grs+3)^0,f,c
  7073  0022FE                     l3702:
  7074  0022FE  5015               	movf	___fldiv@a^0,w,c
  7075  002300  5C1D               	subwf	___fldiv@rem^0,w,c
  7076  002302  5016               	movf	(___fldiv@a+1)^0,w,c
  7077  002304  581E               	subwfb	(___fldiv@rem+1)^0,w,c
  7078  002306  5017               	movf	(___fldiv@a+2)^0,w,c
  7079  002308  581F               	subwfb	(___fldiv@rem+2)^0,w,c
  7080  00230A  5018               	movf	(___fldiv@a+3)^0,w,c
  7081  00230C  5820               	subwfb	(___fldiv@rem+3)^0,w,c
  7082  00230E  A0D8               	btfss	status,0,c
  7083  002310  D009               	goto	l3708
  7084  002312  8C27               	bsf	(___fldiv@grs+3)^0,6,c
  7085  002314  5015               	movf	___fldiv@a^0,w,c
  7086  002316  5E1D               	subwf	___fldiv@rem^0,f,c
  7087  002318  5016               	movf	(___fldiv@a+1)^0,w,c
  7088  00231A  5A1E               	subwfb	(___fldiv@rem+1)^0,f,c
  7089  00231C  5017               	movf	(___fldiv@a+2)^0,w,c
  7090  00231E  5A1F               	subwfb	(___fldiv@rem+2)^0,f,c
  7091  002320  5018               	movf	(___fldiv@a+3)^0,w,c
  7092  002322  5A20               	subwfb	(___fldiv@rem+3)^0,f,c
  7093  002324                     l3708:
  7094  002324  2A29               	incf	___fldiv@aexp^0,f,c
  7095  002326                     l1263:
  7096  002326  0E19               	movlw	25
  7097  002328  6429               	cpfsgt	___fldiv@aexp^0,c
  7098  00232A  D7D5               	goto	l3694
  7099  00232C  501D               	movf	___fldiv@rem^0,w,c
  7100  00232E  101E               	iorwf	(___fldiv@rem+1)^0,w,c
  7101  002330  101F               	iorwf	(___fldiv@rem+2)^0,w,c
  7102  002332  1020               	iorwf	(___fldiv@rem+3)^0,w,c
  7103  002334  B4D8               	btfsc	status,2,c
  7104  002336  D011               	goto	l3720
  7105  002338  8024               	bsf	___fldiv@grs^0,0,c
  7106  00233A  D00F               	goto	l3720
  7107  00233C                     l3714:
  7108  00233C  90D8               	bcf	status,0,c
  7109  00233E  3611               	rlcf	___fldiv@b^0,f,c
  7110  002340  3612               	rlcf	(___fldiv@b+1)^0,f,c
  7111  002342  3613               	rlcf	(___fldiv@b+2)^0,f,c
  7112  002344  3614               	rlcf	(___fldiv@b+3)^0,f,c
  7113  002346  BE27               	btfsc	(___fldiv@grs+3)^0,7,c
  7114  002348  8011               	bsf	___fldiv@b^0,0,c
  7115  00234A  90D8               	bcf	status,0,c
  7116  00234C  3624               	rlcf	___fldiv@grs^0,f,c
  7117  00234E  3625               	rlcf	(___fldiv@grs+1)^0,f,c
  7118  002350  3626               	rlcf	(___fldiv@grs+2)^0,f,c
  7119  002352  3627               	rlcf	(___fldiv@grs+3)^0,f,c
  7120  002354  0622               	decf	___fldiv@new_exp^0,f,c
  7121  002356  A0D8               	btfss	status,0,c
  7122  002358  0623               	decf	(___fldiv@new_exp+1)^0,f,c
  7123  00235A                     l3720:
  7124  00235A  AE13               	btfss	(___fldiv@b+2)^0,7,c
  7125  00235C  D7EF               	goto	l3714
  7126  00235E  0E00               	movlw	0
  7127  002360  6E29               	movwf	___fldiv@aexp^0,c
  7128  002362  AE27               	btfss	(___fldiv@grs+3)^0,7,c
  7129  002364  D017               	goto	l1274
  7130  002366  0EFF               	movlw	255
  7131  002368  1424               	andwf	___fldiv@grs^0,w,c
  7132  00236A  6E19               	movwf	??___fldiv^0,c
  7133  00236C  0EFF               	movlw	255
  7134  00236E  1425               	andwf	(___fldiv@grs+1)^0,w,c
  7135  002370  6E1A               	movwf	(??___fldiv+1)^0,c
  7136  002372  0EFF               	movlw	255
  7137  002374  1426               	andwf	(___fldiv@grs+2)^0,w,c
  7138  002376  6E1B               	movwf	(??___fldiv+2)^0,c
  7139  002378  0E7F               	movlw	127
  7140  00237A  1427               	andwf	(___fldiv@grs+3)^0,w,c
  7141  00237C  6E1C               	movwf	(??___fldiv+3)^0,c
  7142  00237E  5019               	movf	??___fldiv^0,w,c
  7143  002380  101A               	iorwf	(??___fldiv+1)^0,w,c
  7144  002382  101B               	iorwf	(??___fldiv+2)^0,w,c
  7145  002384  101C               	iorwf	(??___fldiv+3)^0,w,c
  7146  002386  B4D8               	btfsc	status,2,c
  7147  002388  D003               	goto	l1275
  7148  00238A                     u3380:
  7149  00238A  0E01               	movlw	1
  7150  00238C  6E29               	movwf	___fldiv@aexp^0,c
  7151  00238E  D002               	goto	l1274
  7152  002390                     l1275:
  7153  002390  B011               	btfsc	___fldiv@b^0,0,c
  7154  002392  D7FB               	goto	u3380
  7155  002394                     l1274:
  7156  002394  5029               	movf	___fldiv@aexp^0,w,c
  7157  002396  B4D8               	btfsc	status,2,c
  7158  002398  D01F               	goto	l3740
  7159  00239A  0E01               	movlw	1
  7160  00239C  2611               	addwf	___fldiv@b^0,f,c
  7161  00239E  0E00               	movlw	0
  7162  0023A0  2212               	addwfc	(___fldiv@b+1)^0,f,c
  7163  0023A2  2213               	addwfc	(___fldiv@b+2)^0,f,c
  7164  0023A4  2214               	addwfc	(___fldiv@b+3)^0,f,c
  7165  0023A6  A014               	btfss	(___fldiv@b+3)^0,0,c
  7166  0023A8  D017               	goto	l3740
  7167  0023AA  C011  F019         	movff	___fldiv@b,??___fldiv
  7168  0023AE  C012  F01A         	movff	___fldiv@b+1,??___fldiv+1
  7169  0023B2  C013  F01B         	movff	___fldiv@b+2,??___fldiv+2
  7170  0023B6  C014  F01C         	movff	___fldiv@b+3,??___fldiv+3
  7171  0023BA  341C               	rlcf	(??___fldiv+3)^0,w,c
  7172  0023BC  321C               	rrcf	(??___fldiv+3)^0,f,c
  7173  0023BE  321B               	rrcf	(??___fldiv+2)^0,f,c
  7174  0023C0  321A               	rrcf	(??___fldiv+1)^0,f,c
  7175  0023C2  3219               	rrcf	??___fldiv^0,f,c
  7176  0023C4  C019  F011         	movff	??___fldiv,___fldiv@b
  7177  0023C8  C01A  F012         	movff	??___fldiv+1,___fldiv@b+1
  7178  0023CC  C01B  F013         	movff	??___fldiv+2,___fldiv@b+2
  7179  0023D0  C01C  F014         	movff	??___fldiv+3,___fldiv@b+3
  7180  0023D4  4A22               	infsnz	___fldiv@new_exp^0,f,c
  7181  0023D6  2A23               	incf	(___fldiv@new_exp+1)^0,f,c
  7182  0023D8                     l3740:
  7183  0023D8  BE23               	btfsc	(___fldiv@new_exp+1)^0,7,c
  7184  0023DA  D010               	goto	l3744
  7185  0023DC  5023               	movf	(___fldiv@new_exp+1)^0,w,c
  7186  0023DE  E103               	bnz	u3420
  7187  0023E0  2822               	incf	___fldiv@new_exp^0,w,c
  7188  0023E2  A0D8               	btfss	status,0,c
  7189  0023E4  D00B               	goto	l3744
  7190  0023E6                     u3420:
  7191  0023E6  0E00               	movlw	0
  7192  0023E8  6E23               	movwf	(___fldiv@new_exp+1)^0,c
  7193  0023EA  6822               	setf	___fldiv@new_exp^0,c
  7194  0023EC  0E00               	movlw	0
  7195  0023EE  6E11               	movwf	___fldiv@b^0,c
  7196  0023F0  0E00               	movlw	0
  7197  0023F2  6E12               	movwf	(___fldiv@b+1)^0,c
  7198  0023F4  0E00               	movlw	0
  7199  0023F6  6E13               	movwf	(___fldiv@b+2)^0,c
  7200  0023F8  0E00               	movlw	0
  7201  0023FA  6E14               	movwf	(___fldiv@b+3)^0,c
  7202  0023FC                     l3744:
  7203  0023FC  BE23               	btfsc	(___fldiv@new_exp+1)^0,7,c
  7204  0023FE  D005               	goto	u3430
  7205  002400  5023               	movf	(___fldiv@new_exp+1)^0,w,c
  7206  002402  E111               	bnz	l3748
  7207  002404  0422               	decf	___fldiv@new_exp^0,w,c
  7208  002406  B0D8               	btfsc	status,0,c
  7209  002408  D00E               	goto	l3748
  7210  00240A                     u3430:
  7211  00240A  0E00               	movlw	0
  7212  00240C  6E23               	movwf	(___fldiv@new_exp+1)^0,c
  7213  00240E  0E00               	movlw	0
  7214  002410  6E22               	movwf	___fldiv@new_exp^0,c
  7215  002412  0E00               	movlw	0
  7216  002414  6E11               	movwf	___fldiv@b^0,c
  7217  002416  0E00               	movlw	0
  7218  002418  6E12               	movwf	(___fldiv@b+1)^0,c
  7219  00241A  0E00               	movlw	0
  7220  00241C  6E13               	movwf	(___fldiv@b+2)^0,c
  7221  00241E  0E00               	movlw	0
  7222  002420  6E14               	movwf	(___fldiv@b+3)^0,c
  7223  002422  0E00               	movlw	0
  7224  002424  6E21               	movwf	___fldiv@sign^0,c
  7225  002426                     l3748:
  7226  002426  C022  F028         	movff	___fldiv@new_exp,___fldiv@bexp
  7227  00242A  A028               	btfss	___fldiv@bexp^0,0,c
  7228  00242C  D002               	goto	l3754
  7229  00242E  8E13               	bsf	(___fldiv@b+2)^0,7,c
  7230  002430  D001               	goto	l3756
  7231  002432                     l3754:
  7232  002432  9E13               	bcf	(___fldiv@b+2)^0,7,c
  7233  002434                     l3756:
  7234  002434  90D8               	bcf	status,0,c
  7235  002436  3028               	rrcf	___fldiv@bexp^0,w,c
  7236  002438  6E14               	movwf	(___fldiv@b+3)^0,c
  7237  00243A  D70E               	goto	l3670
  7238  00243C                     __end_of___fldiv:
  7239                           	opt callstack 0
  7240                           
  7241 ;; *************** function _CylonBounce *****************
  7242 ;; Defined at:
  7243 ;;		line 264 in file "Patterns.c"
  7244 ;; Parameters:    Size  Location     Type
  7245 ;;  EyeSize         2   26[COMRAM] int 
  7246 ;; Auto vars:     Size  Location     Type
  7247 ;;  j               1   35[COMRAM] unsigned char 
  7248 ;;  j               1   34[COMRAM] unsigned char 
  7249 ;;  i               1   36[COMRAM] unsigned char 
  7250 ;;  i               1   33[COMRAM] unsigned char 
  7251 ;; Return value:  Size  Location     Type
  7252 ;;                  1    wreg      void 
  7253 ;; Registers used:
  7254 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+1, btemp+2, b
      +temp+3, btemp+4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+12, btemp+13, btemp+14, btemp+15
      +, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, btemp+24, btemp+25, btemp+26, btemp+27
      +, btemp+28, btemp+29, btemp+30, btemp+31, tosl, structret, tblptrl, tblptrh, tblptru, prodl, prodh, bsr, cstack
  7255 ;; Tracked objects:
  7256 ;;		On entry : 0/0
  7257 ;;		On exit  : 0/0
  7258 ;;		Unchanged: 0/0
  7259 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7260 ;;      Params:         2       0       0       0       0       0       0       0       0
  7261 ;;      Locals:         4       0       0       0       0       0       0       0       0
  7262 ;;      Temps:          5       0       0       0       0       0       0       0       0
  7263 ;;      Totals:        11       0       0       0       0       0       0       0       0
  7264 ;;Total ram usage:       11 bytes
  7265 ;; Hardware stack levels used:    1
  7266 ;; Hardware stack levels required when called:    5
  7267 ;; This function calls:
  7268 ;;		_Delay_ms
  7269 ;;		_Show
  7270 ;;		_Time_Check
  7271 ;;		_setAll
  7272 ;;		_setPixel
  7273 ;; This function is called by:
  7274 ;;		_main
  7275 ;; This function uses a non-reentrant model
  7276 ;;
  7277                           
  7278                           	psect	text24
  7279  00311A                     __ptext24:
  7280                           	opt callstack 0
  7281  00311A                     _CylonBounce:
  7282                           	opt callstack 25
  7283                           
  7284                           ;Patterns.c: 265:     Time_Check(5);
  7285                           
  7286                           ;incstack = 0
  7287  00311A  0E00               	movlw	0
  7288  00311C  6E04               	movwf	(Time_Check@Time+1)^0,c
  7289  00311E  0E05               	movlw	5
  7290  003120  6E03               	movwf	Time_Check@Time^0,c
  7291  003122  ECFC  F01D         	call	_Time_Check	;wreg free
  7292                           
  7293                           ;Patterns.c: 266:     for(unsigned char i = 0; i < NeoNum-EyeSize-2; i++) {
  7294  003126  0E00               	movlw	0
  7295  003128  6E22               	movwf	CylonBounce@i^0,c
  7296  00312A  D033               	goto	l4872
  7297  00312C                     l4852:
  7298                           
  7299                           ;Patterns.c: 267:       setAll(0,0,0);
  7300  00312C  0E00               	movlw	0
  7301  00312E  6E16               	movwf	setAll@Green^0,c
  7302  003130  0E00               	movlw	0
  7303  003132  6E17               	movwf	setAll@Blue^0,c
  7304  003134  0E00               	movlw	0
  7305  003136  EC73  F01D         	call	_setAll
  7306                           
  7307                           ;Patterns.c: 269:       for(unsigned char j = 1; j <= EyeSize; j++) {
  7308  00313A  0E01               	movlw	1
  7309  00313C  6E23               	movwf	CylonBounce@j^0,c
  7310  00313E  D00E               	goto	l4860
  7311  003140                     l4856:
  7312                           
  7313                           ;Patterns.c: 270:         setPixel(i+j, BT_RGB[0], BT_RGB[1], BT_RGB[2]);
  7314  003140  5022               	movf	CylonBounce@i^0,w,c
  7315  003142  2423               	addwf	CylonBounce@j^0,w,c
  7316  003144  6E0D               	movwf	setPixel@n^0,c
  7317  003146  6A0E               	clrf	(setPixel@n+1)^0,c
  7318  003148  360E               	rlcf	(setPixel@n+1)^0,f,c
  7319  00314A  C057  F00F         	movff	_BT_RGB,setPixel@red	;volatile
  7320  00314E  C058  F010         	movff	_BT_RGB+1,setPixel@green	;volatile
  7321  003152  C059  F011         	movff	_BT_RGB+2,setPixel@blue	;volatile
  7322  003156  EC44  F01C         	call	_setPixel	;wreg free
  7323                           
  7324                           ;Patterns.c: 271:       }
  7325  00315A  2A23               	incf	CylonBounce@j^0,f,c
  7326  00315C                     l4860:
  7327  00315C  5023               	movf	CylonBounce@j^0,w,c
  7328  00315E  6E1D               	movwf	??_CylonBounce^0,c
  7329  003160  6A1E               	clrf	(??_CylonBounce+1)^0,c
  7330  003162  501D               	movf	??_CylonBounce^0,w,c
  7331  003164  5C1B               	subwf	CylonBounce@EyeSize^0,w,c
  7332  003166  501C               	movf	(CylonBounce@EyeSize+1)^0,w,c
  7333  003168  0A80               	xorlw	128
  7334  00316A  6E1F               	movwf	(??_CylonBounce+2)^0,c
  7335  00316C  501E               	movf	(??_CylonBounce+1)^0,w,c
  7336  00316E  0A80               	xorlw	128
  7337  003170  581F               	subwfb	(??_CylonBounce+2)^0,w,c
  7338  003172  B0D8               	btfsc	status,0,c
  7339  003174  D7E5               	goto	l4856
  7340                           
  7341                           ;Patterns.c: 273:       if(BT_Patron != 4|| BT_rainbow != 0)return;
  7342  003176  0E04               	movlw	4
  7343  003178  185B               	xorwf	_BT_Patron^0,w,c	;volatile
  7344  00317A  A4D8               	btfss	status,2,c
  7345  00317C  0012               	return	
  7346  00317E  B05C               	btfsc	(_BT_rainbow/(0+8))^0,_BT_rainbow& (0+7),c	;volatile
  7347  003180  0012               	return	
  7348                           
  7349                           ;Patterns.c: 274:       Show();
  7350  003182  ECBD  F01C         	call	_Show	;wreg free
  7351                           
  7352                           ;Patterns.c: 275:       Delay_ms(BT_Tiempo);
  7353  003186  C05A  F003         	movff	_BT_Tiempo,Delay_ms@time	;volatile
  7354  00318A  6A04               	clrf	(Delay_ms@time+1)^0,c
  7355  00318C  EC51  F01D         	call	_Delay_ms	;wreg free
  7356                           
  7357                           ;Patterns.c: 276:     }
  7358  003190  2A22               	incf	CylonBounce@i^0,f,c
  7359  003192                     l4872:
  7360  003192  0ED0               	movlw	208
  7361  003194  6E1D               	movwf	??_CylonBounce^0,c
  7362  003196  0E00               	movlw	0
  7363  003198  6E1E               	movwf	(??_CylonBounce+1)^0,c
  7364  00319A  501B               	movf	CylonBounce@EyeSize^0,w,c
  7365  00319C  5E1D               	subwf	??_CylonBounce^0,f,c
  7366  00319E  501C               	movf	(CylonBounce@EyeSize+1)^0,w,c
  7367  0031A0  5A1E               	subwfb	(??_CylonBounce+1)^0,f,c
  7368  0031A2  5022               	movf	CylonBounce@i^0,w,c
  7369  0031A4  6E1F               	movwf	(??_CylonBounce+2)^0,c
  7370  0031A6  6A20               	clrf	(??_CylonBounce+3)^0,c
  7371  0031A8  501D               	movf	??_CylonBounce^0,w,c
  7372  0031AA  5C1F               	subwf	(??_CylonBounce+2)^0,w,c
  7373  0031AC  5020               	movf	(??_CylonBounce+3)^0,w,c
  7374  0031AE  0A80               	xorlw	128
  7375  0031B0  6E21               	movwf	(??_CylonBounce+4)^0,c
  7376  0031B2  501E               	movf	(??_CylonBounce+1)^0,w,c
  7377  0031B4  0A80               	xorlw	128
  7378  0031B6  5821               	subwfb	(??_CylonBounce+4)^0,w,c
  7379  0031B8  A0D8               	btfss	status,0,c
  7380  0031BA  D7B8               	goto	l4852
  7381  0031BC  501B               	movf	CylonBounce@EyeSize^0,w,c
  7382  0031BE  08D0               	sublw	208
  7383  0031C0  6E25               	movwf	CylonBounce@i_288^0,c
  7384  0031C2                     l4876:
  7385  0031C2  5025               	movf	CylonBounce@i_288^0,w,c
  7386  0031C4  B4D8               	btfsc	status,2,c
  7387  0031C6  0012               	return	
  7388                           
  7389                           ;Patterns.c: 278:       setAll(0,0,0);
  7390  0031C8  0E00               	movlw	0
  7391  0031CA  6E16               	movwf	setAll@Green^0,c
  7392  0031CC  0E00               	movlw	0
  7393  0031CE  6E17               	movwf	setAll@Blue^0,c
  7394  0031D0  0E00               	movlw	0
  7395  0031D2  EC73  F01D         	call	_setAll
  7396                           
  7397                           ;Patterns.c: 280:       for(unsigned char j = 1; j <= EyeSize; j++) {
  7398  0031D6  0E01               	movlw	1
  7399  0031D8  6E24               	movwf	CylonBounce@j_289^0,c
  7400  0031DA  D00E               	goto	l4888
  7401  0031DC                     l4884:
  7402                           
  7403                           ;Patterns.c: 281:         setPixel(i+j, BT_RGB[0], BT_RGB[1], BT_RGB[2]);
  7404  0031DC  5025               	movf	CylonBounce@i_288^0,w,c
  7405  0031DE  2424               	addwf	CylonBounce@j_289^0,w,c
  7406  0031E0  6E0D               	movwf	setPixel@n^0,c
  7407  0031E2  6A0E               	clrf	(setPixel@n+1)^0,c
  7408  0031E4  360E               	rlcf	(setPixel@n+1)^0,f,c
  7409  0031E6  C057  F00F         	movff	_BT_RGB,setPixel@red	;volatile
  7410  0031EA  C058  F010         	movff	_BT_RGB+1,setPixel@green	;volatile
  7411  0031EE  C059  F011         	movff	_BT_RGB+2,setPixel@blue	;volatile
  7412  0031F2  EC44  F01C         	call	_setPixel	;wreg free
  7413                           
  7414                           ;Patterns.c: 282:       }
  7415  0031F6  2A24               	incf	CylonBounce@j_289^0,f,c
  7416  0031F8                     l4888:
  7417  0031F8  5024               	movf	CylonBounce@j_289^0,w,c
  7418  0031FA  6E1D               	movwf	??_CylonBounce^0,c
  7419  0031FC  6A1E               	clrf	(??_CylonBounce+1)^0,c
  7420  0031FE  501D               	movf	??_CylonBounce^0,w,c
  7421  003200  5C1B               	subwf	CylonBounce@EyeSize^0,w,c
  7422  003202  501C               	movf	(CylonBounce@EyeSize+1)^0,w,c
  7423  003204  0A80               	xorlw	128
  7424  003206  6E1F               	movwf	(??_CylonBounce+2)^0,c
  7425  003208  501E               	movf	(??_CylonBounce+1)^0,w,c
  7426  00320A  0A80               	xorlw	128
  7427  00320C  581F               	subwfb	(??_CylonBounce+2)^0,w,c
  7428  00320E  B0D8               	btfsc	status,0,c
  7429  003210  D7E5               	goto	l4884
  7430                           
  7431                           ;Patterns.c: 284:       if(BT_Patron != 4|| BT_rainbow != 0)return;
  7432  003212  0E04               	movlw	4
  7433  003214  185B               	xorwf	_BT_Patron^0,w,c	;volatile
  7434  003216  A4D8               	btfss	status,2,c
  7435  003218  0012               	return	
  7436  00321A  B05C               	btfsc	(_BT_rainbow/(0+8))^0,_BT_rainbow& (0+7),c	;volatile
  7437  00321C  0012               	return	
  7438                           
  7439                           ;Patterns.c: 285:       Show();
  7440  00321E  ECBD  F01C         	call	_Show	;wreg free
  7441                           
  7442                           ;Patterns.c: 286:       Delay_ms(BT_Tiempo);
  7443  003222  C05A  F003         	movff	_BT_Tiempo,Delay_ms@time	;volatile
  7444  003226  6A04               	clrf	(Delay_ms@time+1)^0,c
  7445  003228  EC51  F01D         	call	_Delay_ms	;wreg free
  7446                           
  7447                           ;Patterns.c: 287:     }
  7448  00322C  0625               	decf	CylonBounce@i_288^0,f,c
  7449  00322E  D7C9               	goto	l4876
  7450  003230                     __end_of_CylonBounce:
  7451                           	opt callstack 0
  7452                           
  7453 ;; *************** function _CycloneBounceRainbow *****************
  7454 ;; Defined at:
  7455 ;;		line 289 in file "Patterns.c"
  7456 ;; Parameters:    Size  Location     Type
  7457 ;;  EyeSize         2   26[COMRAM] int 
  7458 ;; Auto vars:     Size  Location     Type
  7459 ;;  j               1   34[COMRAM] unsigned char 
  7460 ;;  j               1   33[COMRAM] unsigned char 
  7461 ;;  i               1   38[COMRAM] unsigned char 
  7462 ;;  i               1   37[COMRAM] unsigned char 
  7463 ;;  j               2   35[COMRAM] int 
  7464 ;;  c               1   39[COMRAM] PTR unsigned char 
  7465 ;;		 -> Wheel@c(3), 
  7466 ;; Return value:  Size  Location     Type
  7467 ;;                  1    wreg      void 
  7468 ;; Registers used:
  7469 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+1, btemp+2, b
      +temp+3, btemp+4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+12, btemp+13, btemp+14, btemp+15
      +, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, btemp+24, btemp+25, btemp+26, btemp+27
      +, btemp+28, btemp+29, btemp+30, btemp+31, tosl, structret, tblptrl, tblptrh, tblptru, prodl, prodh, bsr, cstack
  7470 ;; Tracked objects:
  7471 ;;		On entry : 0/0
  7472 ;;		On exit  : 0/0
  7473 ;;		Unchanged: 0/0
  7474 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7475 ;;      Params:         2       0       0       0       0       0       0       0       0
  7476 ;;      Locals:         7       0       0       0       0       0       0       0       0
  7477 ;;      Temps:          5       0       0       0       0       0       0       0       0
  7478 ;;      Totals:        14       0       0       0       0       0       0       0       0
  7479 ;;Total ram usage:       14 bytes
  7480 ;; Hardware stack levels used:    1
  7481 ;; Hardware stack levels required when called:    5
  7482 ;; This function calls:
  7483 ;;		_Delay_ms
  7484 ;;		_Show
  7485 ;;		_Time_Check
  7486 ;;		_Wheel
  7487 ;;		___awdiv
  7488 ;;		___lbdiv
  7489 ;;		_setAll
  7490 ;;		_setPixel
  7491 ;; This function is called by:
  7492 ;;		_main
  7493 ;; This function uses a non-reentrant model
  7494 ;;
  7495                           
  7496                           	psect	text25
  7497  001C2E                     __ptext25:
  7498                           	opt callstack 0
  7499  001C2E                     _CycloneBounceRainbow:
  7500                           	opt callstack 25
  7501                           
  7502                           ;Patterns.c: 290:     unsigned char *c;;Patterns.c: 292:     Time_Check(5);
  7503                           
  7504                           ;incstack = 0
  7505  001C2E  0E00               	movlw	0
  7506  001C30  6E04               	movwf	(Time_Check@Time+1)^0,c
  7507  001C32  0E05               	movlw	5
  7508  001C34  6E03               	movwf	Time_Check@Time^0,c
  7509  001C36  ECFC  F01D         	call	_Time_Check	;wreg free
  7510                           
  7511                           ;Patterns.c: 293:     for(int j=0; j<256;j++){
  7512  001C3A  0E00               	movlw	0
  7513  001C3C  6E25               	movwf	(CycloneBounceRainbow@j+1)^0,c
  7514  001C3E  0E00               	movlw	0
  7515  001C40  6E24               	movwf	CycloneBounceRainbow@j^0,c
  7516  001C42                     l4782:
  7517                           
  7518                           ;Patterns.c: 294:         for(unsigned char i = 0; i < NeoNum-EyeSize-2; i++) {
  7519  001C42  0E00               	movlw	0
  7520  001C44  6E26               	movwf	CycloneBounceRainbow@i^0,c
  7521  001C46  D09D               	goto	l4808
  7522  001C48                     l4784:
  7523  001C48  5026               	movf	CycloneBounceRainbow@i^0,w,c
  7524  001C4A  6E0A               	movwf	(___awdiv@dividend+1)^0,c
  7525  001C4C  6A09               	clrf	___awdiv@dividend^0,c
  7526  001C4E  0E00               	movlw	0
  7527  001C50  6E0C               	movwf	(___awdiv@divisor+1)^0,c
  7528  001C52  0ED2               	movlw	210
  7529  001C54  6E0B               	movwf	___awdiv@divisor^0,c
  7530  001C56  EC02  F01C         	call	___awdiv	;wreg free
  7531  001C5A  5024               	movf	CycloneBounceRainbow@j^0,w,c
  7532  001C5C  2609               	addwf	?___awdiv^0,f,c
  7533  001C5E  5025               	movf	(CycloneBounceRainbow@j+1)^0,w,c
  7534  001C60  220A               	addwfc	(?___awdiv+1)^0,f,c
  7535  001C62  5009               	movf	?___awdiv^0,w,c
  7536  001C64  6E11               	movwf	Wheel@WheelPos^0,c
  7537  001C66  6A12               	clrf	(Wheel@WheelPos+1)^0,c
  7538  001C68  EC15  F01A         	call	_Wheel	;wreg free
  7539  001C6C  6E28               	movwf	CycloneBounceRainbow@c^0,c
  7540                           
  7541                           ; BSR set to: 0
  7542                           ;Patterns.c: 296:             setPixel(i, *c/20, *(c+1)/20, *(c+2)/20);
  7543  001C6E  C026  F00D         	movff	CycloneBounceRainbow@i,setPixel@n
  7544  001C72  6A0E               	clrf	(setPixel@n+1)^0,c
  7545  001C74  0E14               	movlw	20
  7546  001C76  6E03               	movwf	___lbdiv@divisor^0,c
  7547  001C78  5028               	movf	CycloneBounceRainbow@c^0,w,c
  7548  001C7A  6ED9               	movwf	fsr2l,c
  7549  001C7C  6ADA               	clrf	fsr2h,c
  7550  001C7E  50DF               	movf	indf2,w,c
  7551  001C80  ECCC  F01D         	call	___lbdiv
  7552  001C84  6E0F               	movwf	setPixel@red^0,c
  7553  001C86  0E14               	movlw	20
  7554  001C88  6E03               	movwf	___lbdiv@divisor^0,c
  7555  001C8A  5028               	movf	CycloneBounceRainbow@c^0,w,c
  7556  001C8C  6ED9               	movwf	fsr2l,c
  7557  001C8E  6ADA               	clrf	fsr2h,c
  7558  001C90  0E01               	movlw	1
  7559  001C92  26D9               	addwf	fsr2l,f,c
  7560  001C94  50DF               	movf	indf2,w,c
  7561  001C96  ECCC  F01D         	call	___lbdiv
  7562  001C9A  6E10               	movwf	setPixel@green^0,c
  7563  001C9C  0E14               	movlw	20
  7564  001C9E  6E03               	movwf	___lbdiv@divisor^0,c
  7565  001CA0  5028               	movf	CycloneBounceRainbow@c^0,w,c
  7566  001CA2  6ED9               	movwf	fsr2l,c
  7567  001CA4  6ADA               	clrf	fsr2h,c
  7568  001CA6  0E02               	movlw	2
  7569  001CA8  26D9               	addwf	fsr2l,f,c
  7570  001CAA  50DF               	movf	indf2,w,c
  7571  001CAC  ECCC  F01D         	call	___lbdiv
  7572  001CB0  6E11               	movwf	setPixel@blue^0,c
  7573  001CB2  EC44  F01C         	call	_setPixel	;wreg free
  7574                           
  7575                           ;Patterns.c: 297:             for(unsigned char j = 1; j <= EyeSize; j++){
  7576  001CB6  0E01               	movlw	1
  7577  001CB8  6E22               	movwf	CycloneBounceRainbow@j_295^0,c
  7578  001CBA  D01B               	goto	l4794
  7579  001CBC                     l4790:
  7580                           
  7581                           ;Patterns.c: 298:                 setPixel(i+j, *c, *(c+1), *(c+2));
  7582  001CBC  5026               	movf	CycloneBounceRainbow@i^0,w,c
  7583  001CBE  2422               	addwf	CycloneBounceRainbow@j_295^0,w,c
  7584  001CC0  6E0D               	movwf	setPixel@n^0,c
  7585  001CC2  6A0E               	clrf	(setPixel@n+1)^0,c
  7586  001CC4  360E               	rlcf	(setPixel@n+1)^0,f,c
  7587  001CC6  5028               	movf	CycloneBounceRainbow@c^0,w,c
  7588  001CC8  6ED9               	movwf	fsr2l,c
  7589  001CCA  6ADA               	clrf	fsr2h,c
  7590  001CCC  50DF               	movf	indf2,w,c
  7591  001CCE  6E0F               	movwf	setPixel@red^0,c
  7592  001CD0  5028               	movf	CycloneBounceRainbow@c^0,w,c
  7593  001CD2  6ED9               	movwf	fsr2l,c
  7594  001CD4  6ADA               	clrf	fsr2h,c
  7595  001CD6  0E01               	movlw	1
  7596  001CD8  26D9               	addwf	fsr2l,f,c
  7597  001CDA  50DF               	movf	indf2,w,c
  7598  001CDC  6E10               	movwf	setPixel@green^0,c
  7599  001CDE  5028               	movf	CycloneBounceRainbow@c^0,w,c
  7600  001CE0  6ED9               	movwf	fsr2l,c
  7601  001CE2  6ADA               	clrf	fsr2h,c
  7602  001CE4  0E02               	movlw	2
  7603  001CE6  26D9               	addwf	fsr2l,f,c
  7604  001CE8  50DF               	movf	indf2,w,c
  7605  001CEA  6E11               	movwf	setPixel@blue^0,c
  7606  001CEC  EC44  F01C         	call	_setPixel	;wreg free
  7607                           
  7608                           ;Patterns.c: 299:             }
  7609  001CF0  2A22               	incf	CycloneBounceRainbow@j_295^0,f,c
  7610  001CF2                     l4794:
  7611  001CF2  5022               	movf	CycloneBounceRainbow@j_295^0,w,c
  7612  001CF4  6E1D               	movwf	??_CycloneBounceRainbow^0,c
  7613  001CF6  6A1E               	clrf	(??_CycloneBounceRainbow+1)^0,c
  7614  001CF8  501D               	movf	??_CycloneBounceRainbow^0,w,c
  7615  001CFA  5C1B               	subwf	CycloneBounceRainbow@EyeSize^0,w,c
  7616  001CFC  501C               	movf	(CycloneBounceRainbow@EyeSize+1)^0,w,c
  7617  001CFE  0A80               	xorlw	128
  7618  001D00  6E1F               	movwf	(??_CycloneBounceRainbow+2)^0,c
  7619  001D02  501E               	movf	(??_CycloneBounceRainbow+1)^0,w,c
  7620  001D04  0A80               	xorlw	128
  7621  001D06  581F               	subwfb	(??_CycloneBounceRainbow+2)^0,w,c
  7622  001D08  B0D8               	btfsc	status,0,c
  7623  001D0A  D7D8               	goto	l4790
  7624                           
  7625                           ;Patterns.c: 300:             setPixel(i+EyeSize+1, *c/20, *(c+1)/20, *(c+2)/20);
  7626  001D0C  5026               	movf	CycloneBounceRainbow@i^0,w,c
  7627  001D0E  241B               	addwf	CycloneBounceRainbow@EyeSize^0,w,c
  7628  001D10  6E1D               	movwf	??_CycloneBounceRainbow^0,c
  7629  001D12  0E00               	movlw	0
  7630  001D14  201C               	addwfc	(CycloneBounceRainbow@EyeSize+1)^0,w,c
  7631  001D16  6E1E               	movwf	(??_CycloneBounceRainbow+1)^0,c
  7632  001D18  0E01               	movlw	1
  7633  001D1A  241D               	addwf	??_CycloneBounceRainbow^0,w,c
  7634  001D1C  6E0D               	movwf	setPixel@n^0,c
  7635  001D1E  0E00               	movlw	0
  7636  001D20  201E               	addwfc	(??_CycloneBounceRainbow+1)^0,w,c
  7637  001D22  6E0E               	movwf	(setPixel@n+1)^0,c
  7638  001D24  0E14               	movlw	20
  7639  001D26  6E03               	movwf	___lbdiv@divisor^0,c
  7640  001D28  5028               	movf	CycloneBounceRainbow@c^0,w,c
  7641  001D2A  6ED9               	movwf	fsr2l,c
  7642  001D2C  6ADA               	clrf	fsr2h,c
  7643  001D2E  50DF               	movf	indf2,w,c
  7644  001D30  ECCC  F01D         	call	___lbdiv
  7645  001D34  6E0F               	movwf	setPixel@red^0,c
  7646  001D36  0E14               	movlw	20
  7647  001D38  6E03               	movwf	___lbdiv@divisor^0,c
  7648  001D3A  5028               	movf	CycloneBounceRainbow@c^0,w,c
  7649  001D3C  6ED9               	movwf	fsr2l,c
  7650  001D3E  6ADA               	clrf	fsr2h,c
  7651  001D40  0E01               	movlw	1
  7652  001D42  26D9               	addwf	fsr2l,f,c
  7653  001D44  50DF               	movf	indf2,w,c
  7654  001D46  ECCC  F01D         	call	___lbdiv
  7655  001D4A  6E10               	movwf	setPixel@green^0,c
  7656  001D4C  0E14               	movlw	20
  7657  001D4E  6E03               	movwf	___lbdiv@divisor^0,c
  7658  001D50  5028               	movf	CycloneBounceRainbow@c^0,w,c
  7659  001D52  6ED9               	movwf	fsr2l,c
  7660  001D54  6ADA               	clrf	fsr2h,c
  7661  001D56  0E02               	movlw	2
  7662  001D58  26D9               	addwf	fsr2l,f,c
  7663  001D5A  50DF               	movf	indf2,w,c
  7664  001D5C  ECCC  F01D         	call	___lbdiv
  7665  001D60  6E11               	movwf	setPixel@blue^0,c
  7666  001D62  EC44  F01C         	call	_setPixel	;wreg free
  7667                           
  7668                           ;Patterns.c: 301:             if( BT_Patron!= 4 || BT_rainbow != 1)return;
  7669  001D66  0E04               	movlw	4
  7670  001D68  185B               	xorwf	_BT_Patron^0,w,c	;volatile
  7671  001D6A  A4D8               	btfss	status,2,c
  7672  001D6C  0012               	return	
  7673  001D6E  A05C               	btfss	(_BT_rainbow/(0+8))^0,_BT_rainbow& (0+7),c	;volatile
  7674  001D70  0012               	return	
  7675                           
  7676                           ;Patterns.c: 302:             Show();
  7677  001D72  ECBD  F01C         	call	_Show	;wreg free
  7678                           
  7679                           ;Patterns.c: 303:             Delay_ms(BT_Tiempo);
  7680  001D76  C05A  F003         	movff	_BT_Tiempo,Delay_ms@time	;volatile
  7681  001D7A  6A04               	clrf	(Delay_ms@time+1)^0,c
  7682  001D7C  EC51  F01D         	call	_Delay_ms	;wreg free
  7683                           
  7684                           ;Patterns.c: 304:             }
  7685  001D80  2A26               	incf	CycloneBounceRainbow@i^0,f,c
  7686  001D82                     l4808:
  7687  001D82  0ED0               	movlw	208
  7688  001D84  6E1D               	movwf	??_CycloneBounceRainbow^0,c
  7689  001D86  0E00               	movlw	0
  7690  001D88  6E1E               	movwf	(??_CycloneBounceRainbow+1)^0,c
  7691  001D8A  501B               	movf	CycloneBounceRainbow@EyeSize^0,w,c
  7692  001D8C  5E1D               	subwf	??_CycloneBounceRainbow^0,f,c
  7693  001D8E  501C               	movf	(CycloneBounceRainbow@EyeSize+1)^0,w,c
  7694  001D90  5A1E               	subwfb	(??_CycloneBounceRainbow+1)^0,f,c
  7695  001D92  5026               	movf	CycloneBounceRainbow@i^0,w,c
  7696  001D94  6E1F               	movwf	(??_CycloneBounceRainbow+2)^0,c
  7697  001D96  6A20               	clrf	(??_CycloneBounceRainbow+3)^0,c
  7698  001D98  501D               	movf	??_CycloneBounceRainbow^0,w,c
  7699  001D9A  5C1F               	subwf	(??_CycloneBounceRainbow+2)^0,w,c
  7700  001D9C  5020               	movf	(??_CycloneBounceRainbow+3)^0,w,c
  7701  001D9E  0A80               	xorlw	128
  7702  001DA0  6E21               	movwf	(??_CycloneBounceRainbow+4)^0,c
  7703  001DA2  501E               	movf	(??_CycloneBounceRainbow+1)^0,w,c
  7704  001DA4  0A80               	xorlw	128
  7705  001DA6  5821               	subwfb	(??_CycloneBounceRainbow+4)^0,w,c
  7706  001DA8  A0D8               	btfss	status,0,c
  7707  001DAA  D74E               	goto	l4784
  7708                           
  7709                           ;Patterns.c: 305:             setAll(0,0,0);
  7710  001DAC  0E00               	movlw	0
  7711  001DAE  6E16               	movwf	setAll@Green^0,c
  7712  001DB0  0E00               	movlw	0
  7713  001DB2  6E17               	movwf	setAll@Blue^0,c
  7714  001DB4  0E00               	movlw	0
  7715  001DB6  EC73  F01D         	call	_setAll
  7716  001DBA  501B               	movf	CycloneBounceRainbow@EyeSize^0,w,c
  7717  001DBC  08D0               	sublw	208
  7718  001DBE  6E27               	movwf	CycloneBounceRainbow@i_296^0,c
  7719  001DC0                     l4814:
  7720  001DC0  5027               	movf	CycloneBounceRainbow@i_296^0,w,c
  7721  001DC2  B4D8               	btfsc	status,2,c
  7722  001DC4  D09E               	goto	l4844
  7723  001DC6  5027               	movf	CycloneBounceRainbow@i_296^0,w,c
  7724  001DC8  6E0A               	movwf	(___awdiv@dividend+1)^0,c
  7725  001DCA  6A09               	clrf	___awdiv@dividend^0,c
  7726  001DCC  0E00               	movlw	0
  7727  001DCE  6E0C               	movwf	(___awdiv@divisor+1)^0,c
  7728  001DD0  0ED2               	movlw	210
  7729  001DD2  6E0B               	movwf	___awdiv@divisor^0,c
  7730  001DD4  EC02  F01C         	call	___awdiv	;wreg free
  7731  001DD8  5024               	movf	CycloneBounceRainbow@j^0,w,c
  7732  001DDA  2609               	addwf	?___awdiv^0,f,c
  7733  001DDC  5025               	movf	(CycloneBounceRainbow@j+1)^0,w,c
  7734  001DDE  220A               	addwfc	(?___awdiv+1)^0,f,c
  7735  001DE0  5009               	movf	?___awdiv^0,w,c
  7736  001DE2  6E11               	movwf	Wheel@WheelPos^0,c
  7737  001DE4  6A12               	clrf	(Wheel@WheelPos+1)^0,c
  7738  001DE6  EC15  F01A         	call	_Wheel	;wreg free
  7739  001DEA  6E28               	movwf	CycloneBounceRainbow@c^0,c
  7740                           
  7741                           ; BSR set to: 0
  7742                           ;Patterns.c: 308:             setPixel(i, *c/20, *(c+1)/20, *(c+2)/20);
  7743  001DEC  C027  F00D         	movff	CycloneBounceRainbow@i_296,setPixel@n
  7744  001DF0  6A0E               	clrf	(setPixel@n+1)^0,c
  7745  001DF2  0E14               	movlw	20
  7746  001DF4  6E03               	movwf	___lbdiv@divisor^0,c
  7747  001DF6  5028               	movf	CycloneBounceRainbow@c^0,w,c
  7748  001DF8  6ED9               	movwf	fsr2l,c
  7749  001DFA  6ADA               	clrf	fsr2h,c
  7750  001DFC  50DF               	movf	indf2,w,c
  7751  001DFE  ECCC  F01D         	call	___lbdiv
  7752  001E02  6E0F               	movwf	setPixel@red^0,c
  7753  001E04  0E14               	movlw	20
  7754  001E06  6E03               	movwf	___lbdiv@divisor^0,c
  7755  001E08  5028               	movf	CycloneBounceRainbow@c^0,w,c
  7756  001E0A  6ED9               	movwf	fsr2l,c
  7757  001E0C  6ADA               	clrf	fsr2h,c
  7758  001E0E  0E01               	movlw	1
  7759  001E10  26D9               	addwf	fsr2l,f,c
  7760  001E12  50DF               	movf	indf2,w,c
  7761  001E14  ECCC  F01D         	call	___lbdiv
  7762  001E18  6E10               	movwf	setPixel@green^0,c
  7763  001E1A  0E14               	movlw	20
  7764  001E1C  6E03               	movwf	___lbdiv@divisor^0,c
  7765  001E1E  5028               	movf	CycloneBounceRainbow@c^0,w,c
  7766  001E20  6ED9               	movwf	fsr2l,c
  7767  001E22  6ADA               	clrf	fsr2h,c
  7768  001E24  0E02               	movlw	2
  7769  001E26  26D9               	addwf	fsr2l,f,c
  7770  001E28  50DF               	movf	indf2,w,c
  7771  001E2A  ECCC  F01D         	call	___lbdiv
  7772  001E2E  6E11               	movwf	setPixel@blue^0,c
  7773  001E30  EC44  F01C         	call	_setPixel	;wreg free
  7774                           
  7775                           ;Patterns.c: 309:             for(unsigned char j = 1; j <= EyeSize; j++){
  7776  001E34  0E01               	movlw	1
  7777  001E36  6E23               	movwf	CycloneBounceRainbow@j_297^0,c
  7778  001E38  D01B               	goto	l4828
  7779  001E3A                     l4824:
  7780                           
  7781                           ;Patterns.c: 310:                 setPixel(i+j, *c, *(c+1), *(c+2));
  7782  001E3A  5027               	movf	CycloneBounceRainbow@i_296^0,w,c
  7783  001E3C  2423               	addwf	CycloneBounceRainbow@j_297^0,w,c
  7784  001E3E  6E0D               	movwf	setPixel@n^0,c
  7785  001E40  6A0E               	clrf	(setPixel@n+1)^0,c
  7786  001E42  360E               	rlcf	(setPixel@n+1)^0,f,c
  7787  001E44  5028               	movf	CycloneBounceRainbow@c^0,w,c
  7788  001E46  6ED9               	movwf	fsr2l,c
  7789  001E48  6ADA               	clrf	fsr2h,c
  7790  001E4A  50DF               	movf	indf2,w,c
  7791  001E4C  6E0F               	movwf	setPixel@red^0,c
  7792  001E4E  5028               	movf	CycloneBounceRainbow@c^0,w,c
  7793  001E50  6ED9               	movwf	fsr2l,c
  7794  001E52  6ADA               	clrf	fsr2h,c
  7795  001E54  0E01               	movlw	1
  7796  001E56  26D9               	addwf	fsr2l,f,c
  7797  001E58  50DF               	movf	indf2,w,c
  7798  001E5A  6E10               	movwf	setPixel@green^0,c
  7799  001E5C  5028               	movf	CycloneBounceRainbow@c^0,w,c
  7800  001E5E  6ED9               	movwf	fsr2l,c
  7801  001E60  6ADA               	clrf	fsr2h,c
  7802  001E62  0E02               	movlw	2
  7803  001E64  26D9               	addwf	fsr2l,f,c
  7804  001E66  50DF               	movf	indf2,w,c
  7805  001E68  6E11               	movwf	setPixel@blue^0,c
  7806  001E6A  EC44  F01C         	call	_setPixel	;wreg free
  7807                           
  7808                           ;Patterns.c: 311:             }
  7809  001E6E  2A23               	incf	CycloneBounceRainbow@j_297^0,f,c
  7810  001E70                     l4828:
  7811  001E70  5023               	movf	CycloneBounceRainbow@j_297^0,w,c
  7812  001E72  6E1D               	movwf	??_CycloneBounceRainbow^0,c
  7813  001E74  6A1E               	clrf	(??_CycloneBounceRainbow+1)^0,c
  7814  001E76  501D               	movf	??_CycloneBounceRainbow^0,w,c
  7815  001E78  5C1B               	subwf	CycloneBounceRainbow@EyeSize^0,w,c
  7816  001E7A  501C               	movf	(CycloneBounceRainbow@EyeSize+1)^0,w,c
  7817  001E7C  0A80               	xorlw	128
  7818  001E7E  6E1F               	movwf	(??_CycloneBounceRainbow+2)^0,c
  7819  001E80  501E               	movf	(??_CycloneBounceRainbow+1)^0,w,c
  7820  001E82  0A80               	xorlw	128
  7821  001E84  581F               	subwfb	(??_CycloneBounceRainbow+2)^0,w,c
  7822  001E86  B0D8               	btfsc	status,0,c
  7823  001E88  D7D8               	goto	l4824
  7824                           
  7825                           ;Patterns.c: 312:             setPixel(i+EyeSize+1, *c/20, *(c+1)/20, *(c+2)/20);
  7826  001E8A  5027               	movf	CycloneBounceRainbow@i_296^0,w,c
  7827  001E8C  241B               	addwf	CycloneBounceRainbow@EyeSize^0,w,c
  7828  001E8E  6E1D               	movwf	??_CycloneBounceRainbow^0,c
  7829  001E90  0E00               	movlw	0
  7830  001E92  201C               	addwfc	(CycloneBounceRainbow@EyeSize+1)^0,w,c
  7831  001E94  6E1E               	movwf	(??_CycloneBounceRainbow+1)^0,c
  7832  001E96  0E01               	movlw	1
  7833  001E98  241D               	addwf	??_CycloneBounceRainbow^0,w,c
  7834  001E9A  6E0D               	movwf	setPixel@n^0,c
  7835  001E9C  0E00               	movlw	0
  7836  001E9E  201E               	addwfc	(??_CycloneBounceRainbow+1)^0,w,c
  7837  001EA0  6E0E               	movwf	(setPixel@n+1)^0,c
  7838  001EA2  0E14               	movlw	20
  7839  001EA4  6E03               	movwf	___lbdiv@divisor^0,c
  7840  001EA6  5028               	movf	CycloneBounceRainbow@c^0,w,c
  7841  001EA8  6ED9               	movwf	fsr2l,c
  7842  001EAA  6ADA               	clrf	fsr2h,c
  7843  001EAC  50DF               	movf	indf2,w,c
  7844  001EAE  ECCC  F01D         	call	___lbdiv
  7845  001EB2  6E0F               	movwf	setPixel@red^0,c
  7846  001EB4  0E14               	movlw	20
  7847  001EB6  6E03               	movwf	___lbdiv@divisor^0,c
  7848  001EB8  5028               	movf	CycloneBounceRainbow@c^0,w,c
  7849  001EBA  6ED9               	movwf	fsr2l,c
  7850  001EBC  6ADA               	clrf	fsr2h,c
  7851  001EBE  0E01               	movlw	1
  7852  001EC0  26D9               	addwf	fsr2l,f,c
  7853  001EC2  50DF               	movf	indf2,w,c
  7854  001EC4  ECCC  F01D         	call	___lbdiv
  7855  001EC8  6E10               	movwf	setPixel@green^0,c
  7856  001ECA  0E14               	movlw	20
  7857  001ECC  6E03               	movwf	___lbdiv@divisor^0,c
  7858  001ECE  5028               	movf	CycloneBounceRainbow@c^0,w,c
  7859  001ED0  6ED9               	movwf	fsr2l,c
  7860  001ED2  6ADA               	clrf	fsr2h,c
  7861  001ED4  0E02               	movlw	2
  7862  001ED6  26D9               	addwf	fsr2l,f,c
  7863  001ED8  50DF               	movf	indf2,w,c
  7864  001EDA  ECCC  F01D         	call	___lbdiv
  7865  001EDE  6E11               	movwf	setPixel@blue^0,c
  7866  001EE0  EC44  F01C         	call	_setPixel	;wreg free
  7867                           
  7868                           ;Patterns.c: 313:             if( BT_Patron!= 4 || BT_rainbow != 1)return;
  7869  001EE4  0E04               	movlw	4
  7870  001EE6  185B               	xorwf	_BT_Patron^0,w,c	;volatile
  7871  001EE8  A4D8               	btfss	status,2,c
  7872  001EEA  0012               	return	
  7873  001EEC  A05C               	btfss	(_BT_rainbow/(0+8))^0,_BT_rainbow& (0+7),c	;volatile
  7874  001EEE  0012               	return	
  7875                           
  7876                           ;Patterns.c: 314:             Show();
  7877  001EF0  ECBD  F01C         	call	_Show	;wreg free
  7878                           
  7879                           ;Patterns.c: 315:             Delay_ms(BT_Tiempo);
  7880  001EF4  C05A  F003         	movff	_BT_Tiempo,Delay_ms@time	;volatile
  7881  001EF8  6A04               	clrf	(Delay_ms@time+1)^0,c
  7882  001EFA  EC51  F01D         	call	_Delay_ms	;wreg free
  7883                           
  7884                           ;Patterns.c: 316:         }
  7885  001EFE  0627               	decf	CycloneBounceRainbow@i_296^0,f,c
  7886  001F00  D75F               	goto	l4814
  7887  001F02                     l4844:
  7888                           
  7889                           ;Patterns.c: 317:     }
  7890  001F02  4A24               	infsnz	CycloneBounceRainbow@j^0,f,c
  7891  001F04  2A25               	incf	(CycloneBounceRainbow@j+1)^0,f,c
  7892  001F06  BE25               	btfsc	(CycloneBounceRainbow@j+1)^0,7,c
  7893  001F08  D69C               	goto	l4782
  7894  001F0A  0425               	decf	(CycloneBounceRainbow@j+1)^0,w,c
  7895  001F0C  B0D8               	btfsc	status,0,c
  7896  001F0E  0012               	return	
  7897  001F10  D698               	goto	l4782
  7898  001F12                     __end_of_CycloneBounceRainbow:
  7899                           	opt callstack 0
  7900                           
  7901 ;; *************** function _setAll *****************
  7902 ;; Defined at:
  7903 ;;		line 17 in file "NeoFunctions.c"
  7904 ;; Parameters:    Size  Location     Type
  7905 ;;  Red             1    wreg     unsigned char 
  7906 ;;  Green           1   21[COMRAM] unsigned char 
  7907 ;;  Blue            1   22[COMRAM] unsigned char 
  7908 ;; Auto vars:     Size  Location     Type
  7909 ;;  Red             1   23[COMRAM] unsigned char 
  7910 ;;  i               2   24[COMRAM] int 
  7911 ;; Return value:  Size  Location     Type
  7912 ;;                  1    wreg      void 
  7913 ;; Registers used:
  7914 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+1, btemp+2, b
      +temp+3, btemp+4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+12, btemp+13, btemp+14, btemp+15
      +, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, btemp+24, btemp+25, btemp+26, btemp+27
      +, btemp+28, btemp+29, btemp+30, btemp+31, tosl, structret, tblptrl, tblptrh, tblptru, prodl, prodh, bsr, cstack
  7915 ;; Tracked objects:
  7916 ;;		On entry : 0/0
  7917 ;;		On exit  : 0/0
  7918 ;;		Unchanged: 0/0
  7919 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7920 ;;      Params:         2       0       0       0       0       0       0       0       0
  7921 ;;      Locals:         3       0       0       0       0       0       0       0       0
  7922 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7923 ;;      Totals:         5       0       0       0       0       0       0       0       0
  7924 ;;Total ram usage:        5 bytes
  7925 ;; Hardware stack levels used:    1
  7926 ;; Hardware stack levels required when called:    4
  7927 ;; This function calls:
  7928 ;;		_Show
  7929 ;;		_setPixel
  7930 ;; This function is called by:
  7931 ;;		_turnOff
  7932 ;;		_RGBLoop
  7933 ;;		_FadeInOut
  7934 ;;		_CylonBounce
  7935 ;;		_CycloneBounceRainbow
  7936 ;;		_SetAllColor
  7937 ;;		_Strobe
  7938 ;;		_strobeallColors
  7939 ;;		_FadeAllcolors
  7940 ;;		_SetAllcolors
  7941 ;; This function uses a non-reentrant model
  7942 ;;
  7943                           
  7944                           	psect	text26
  7945  003AE6                     __ptext26:
  7946                           	opt callstack 0
  7947  003AE6                     _setAll:
  7948                           	opt callstack 25
  7949                           
  7950                           ;incstack = 0
  7951                           ;setAll@Red stored from wreg
  7952  003AE6  6E18               	movwf	setAll@Red^0,c
  7953                           
  7954                           ;NeoFunctions.c: 20:     for(int i = 0; i < NeoNum; i++) {
  7955  003AE8  0E00               	movlw	0
  7956  003AEA  6E1A               	movwf	(setAll@i+1)^0,c
  7957  003AEC  0E00               	movlw	0
  7958  003AEE  6E19               	movwf	setAll@i^0,c
  7959  003AF0                     l3414:
  7960                           
  7961                           ;NeoFunctions.c: 21:         setPixel(i, Red, Green, Blue);
  7962  003AF0  C019  F00D         	movff	setAll@i,setPixel@n
  7963  003AF4  C01A  F00E         	movff	setAll@i+1,setPixel@n+1
  7964  003AF8  C018  F00F         	movff	setAll@Red,setPixel@red
  7965  003AFC  C016  F010         	movff	setAll@Green,setPixel@green
  7966  003B00  C017  F011         	movff	setAll@Blue,setPixel@blue
  7967  003B04  EC44  F01C         	call	_setPixel	;wreg free
  7968                           
  7969                           ;NeoFunctions.c: 22:     }
  7970  003B08  4A19               	infsnz	setAll@i^0,f,c
  7971  003B0A  2A1A               	incf	(setAll@i+1)^0,f,c
  7972  003B0C  BE1A               	btfsc	(setAll@i+1)^0,7,c
  7973  003B0E  D7F0               	goto	l3414
  7974  003B10  501A               	movf	(setAll@i+1)^0,w,c
  7975  003B12  E104               	bnz	u2960
  7976  003B14  0ED2               	movlw	210
  7977  003B16  5C19               	subwf	setAll@i^0,w,c
  7978  003B18  A0D8               	btfss	status,0,c
  7979  003B1A  D7EA               	goto	l3414
  7980  003B1C                     u2960:
  7981                           
  7982                           ;NeoFunctions.c: 23:     Show();
  7983  003B1C  ECBD  F01C         	call	_Show	;wreg free
  7984  003B20  0012               	return		;funcret
  7985  003B22                     __end_of_setAll:
  7986                           	opt callstack 0
  7987                           
  7988 ;; *************** function _setPixel *****************
  7989 ;; Defined at:
  7990 ;;		line 26 in file "NeoFunctions.c"
  7991 ;; Parameters:    Size  Location     Type
  7992 ;;  n               2   12[COMRAM] int 
  7993 ;;  red             1   14[COMRAM] unsigned char 
  7994 ;;  green           1   15[COMRAM] unsigned char 
  7995 ;;  blue            1   16[COMRAM] unsigned char 
  7996 ;; Auto vars:     Size  Location     Type
  7997 ;;  ptr             2   19[COMRAM] PTR int 
  7998 ;;		 -> NumofBytes(1260), 
  7999 ;; Return value:  Size  Location     Type
  8000 ;;                  1    wreg      void 
  8001 ;; Registers used:
  8002 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8003 ;; Tracked objects:
  8004 ;;		On entry : 0/0
  8005 ;;		On exit  : 0/0
  8006 ;;		Unchanged: 0/0
  8007 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8008 ;;      Params:         5       0       0       0       0       0       0       0       0
  8009 ;;      Locals:         2       0       0       0       0       0       0       0       0
  8010 ;;      Temps:          2       0       0       0       0       0       0       0       0
  8011 ;;      Totals:         9       0       0       0       0       0       0       0       0
  8012 ;;Total ram usage:        9 bytes
  8013 ;; Hardware stack levels used:    1
  8014 ;; Hardware stack levels required when called:    3
  8015 ;; This function calls:
  8016 ;;		___wmul
  8017 ;; This function is called by:
  8018 ;;		_colorWipe
  8019 ;;		_colorWipeRainbow
  8020 ;;		_fadeInOutRainbow
  8021 ;;		_theaterChase
  8022 ;;		_theaterChaseRainbow
  8023 ;;		_CylonBounce
  8024 ;;		_CycloneBounceRainbow
  8025 ;;		_rainbowCycle
  8026 ;;		_SetAllColor
  8027 ;;		_SetAllcolors
  8028 ;;		_RunningLights
  8029 ;;		_RunningLightsRainbow
  8030 ;;		_setAll
  8031 ;; This function uses a non-reentrant model
  8032 ;;
  8033                           
  8034                           	psect	text27
  8035  003888                     __ptext27:
  8036                           	opt callstack 0
  8037  003888                     _setPixel:
  8038                           	opt callstack 25
  8039                           
  8040                           ;incstack = 0
  8041  003888  BE0E               	btfsc	(setPixel@n+1)^0,7,c
  8042  00388A  D006               	goto	u2940
  8043  00388C  500E               	movf	(setPixel@n+1)^0,w,c
  8044  00388E  E13C               	bnz	l676
  8045  003890  0ED2               	movlw	210
  8046  003892  5C0D               	subwf	setPixel@n^0,w,c
  8047  003894  B0D8               	btfsc	status,0,c
  8048  003896  0012               	return	
  8049  003898                     u2940:
  8050                           
  8051                           ;NeoFunctions.c: 32:         ptr = &NumofBytes[n*3];
  8052  003898  C00D  F003         	movff	setPixel@n,___wmul@multiplier
  8053  00389C  C00E  F004         	movff	setPixel@n+1,___wmul@multiplier+1
  8054  0038A0  0E00               	movlw	0
  8055  0038A2  6E06               	movwf	(___wmul@multiplicand+1)^0,c
  8056  0038A4  0E03               	movlw	3
  8057  0038A6  6E05               	movwf	___wmul@multiplicand^0,c
  8058  0038A8  ECE9  F01D         	call	___wmul	;wreg free
  8059  0038AC  90D8               	bcf	status,0,c
  8060  0038AE  3603               	rlcf	?___wmul^0,f,c
  8061  0038B0  3604               	rlcf	(?___wmul+1)^0,f,c
  8062  0038B2  0E6E               	movlw	low _NumofBytes
  8063  0038B4  2403               	addwf	?___wmul^0,w,c
  8064  0038B6  6E14               	movwf	setPixel@ptr^0,c
  8065  0038B8  0E00               	movlw	high _NumofBytes
  8066  0038BA  2004               	addwfc	(?___wmul+1)^0,w,c
  8067  0038BC  6E15               	movwf	(setPixel@ptr+1)^0,c
  8068  0038BE  500F               	movf	setPixel@red^0,w,c
  8069  0038C0  6E12               	movwf	??_setPixel^0,c
  8070  0038C2  6A13               	clrf	(??_setPixel+1)^0,c
  8071  0038C4  C014  FFD9         	movff	setPixel@ptr,fsr2l
  8072  0038C8  C015  FFDA         	movff	setPixel@ptr+1,fsr2h
  8073  0038CC  C012  FFDE         	movff	??_setPixel,postinc2
  8074  0038D0  C013  FFDD         	movff	??_setPixel+1,postdec2
  8075  0038D4  5010               	movf	setPixel@green^0,w,c
  8076  0038D6  6E12               	movwf	??_setPixel^0,c
  8077  0038D8  6A13               	clrf	(??_setPixel+1)^0,c
  8078  0038DA  EE20 F002          	lfsr	2,2
  8079  0038DE  5014               	movf	setPixel@ptr^0,w,c
  8080  0038E0  26D9               	addwf	fsr2l,f,c
  8081  0038E2  5015               	movf	(setPixel@ptr+1)^0,w,c
  8082  0038E4  22DA               	addwfc	fsr2h,f,c
  8083  0038E6  C012  FFDE         	movff	??_setPixel,postinc2
  8084  0038EA  C013  FFDD         	movff	??_setPixel+1,postdec2
  8085  0038EE  5011               	movf	setPixel@blue^0,w,c
  8086  0038F0  6E12               	movwf	??_setPixel^0,c
  8087  0038F2  6A13               	clrf	(??_setPixel+1)^0,c
  8088  0038F4  EE20 F004          	lfsr	2,4
  8089  0038F8  5014               	movf	setPixel@ptr^0,w,c
  8090  0038FA  26D9               	addwf	fsr2l,f,c
  8091  0038FC  5015               	movf	(setPixel@ptr+1)^0,w,c
  8092  0038FE  22DA               	addwfc	fsr2h,f,c
  8093  003900  C012  FFDE         	movff	??_setPixel,postinc2
  8094  003904  C013  FFDD         	movff	??_setPixel+1,postdec2
  8095  003908                     l676:
  8096  003908  0012               	return		;funcret
  8097  00390A                     __end_of_setPixel:
  8098                           	opt callstack 0
  8099                           
  8100 ;; *************** function ___wmul *****************
  8101 ;; Defined at:
  8102 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\Umul16.c"
  8103 ;; Parameters:    Size  Location     Type
  8104 ;;  multiplier      2    2[COMRAM] unsigned int 
  8105 ;;  multiplicand    2    4[COMRAM] unsigned int 
  8106 ;; Auto vars:     Size  Location     Type
  8107 ;;  product         2    6[COMRAM] unsigned int 
  8108 ;; Return value:  Size  Location     Type
  8109 ;;                  2    2[COMRAM] unsigned int 
  8110 ;; Registers used:
  8111 ;;		wreg, status,2, status,0, prodl, prodh
  8112 ;; Tracked objects:
  8113 ;;		On entry : 0/0
  8114 ;;		On exit  : 0/0
  8115 ;;		Unchanged: 0/0
  8116 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8117 ;;      Params:         4       0       0       0       0       0       0       0       0
  8118 ;;      Locals:         2       0       0       0       0       0       0       0       0
  8119 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8120 ;;      Totals:         6       0       0       0       0       0       0       0       0
  8121 ;;Total ram usage:        6 bytes
  8122 ;; Hardware stack levels used:    1
  8123 ;; Hardware stack levels required when called:    2
  8124 ;; This function calls:
  8125 ;;		Nothing
  8126 ;; This function is called by:
  8127 ;;		_rainbowCycle
  8128 ;;		_setPixel
  8129 ;; This function uses a non-reentrant model
  8130 ;;
  8131                           
  8132                           	psect	text28
  8133  003BD2                     __ptext28:
  8134                           	opt callstack 0
  8135  003BD2                     ___wmul:
  8136                           	opt callstack 25
  8137                           
  8138                           ;incstack = 0
  8139  003BD2  5003               	movf	___wmul@multiplier^0,w,c
  8140  003BD4  0205               	mulwf	___wmul@multiplicand^0,c
  8141  003BD6  CFF3 F007          	movff	prodl,___wmul@product
  8142  003BDA  CFF4 F008          	movff	prodh,___wmul@product+1
  8143  003BDE  5003               	movf	___wmul@multiplier^0,w,c
  8144  003BE0  0206               	mulwf	(___wmul@multiplicand+1)^0,c
  8145  003BE2  50F3               	movf	243,w,c
  8146  003BE4  2608               	addwf	(___wmul@product+1)^0,f,c
  8147  003BE6  5004               	movf	(___wmul@multiplier+1)^0,w,c
  8148  003BE8  0205               	mulwf	___wmul@multiplicand^0,c
  8149  003BEA  50F3               	movf	243,w,c
  8150  003BEC  2608               	addwf	(___wmul@product+1)^0,f,c
  8151  003BEE  C007  F003         	movff	___wmul@product,?___wmul
  8152  003BF2  C008  F004         	movff	___wmul@product+1,?___wmul+1
  8153  003BF6  0012               	return		;funcret
  8154  003BF8                     __end_of___wmul:
  8155                           	opt callstack 0
  8156                           
  8157 ;; *************** function _Show *****************
  8158 ;; Defined at:
  8159 ;;		line 5 in file "NeoFunctions.c"
  8160 ;; Parameters:    Size  Location     Type
  8161 ;;		None
  8162 ;; Auto vars:     Size  Location     Type
  8163 ;;  i               2    3[COMRAM] int 
  8164 ;;  ptrInicial      2    5[COMRAM] PTR int 
  8165 ;;		 -> NumofBytes(1260), 
  8166 ;; Return value:  Size  Location     Type
  8167 ;;                  1    wreg      void 
  8168 ;; Registers used:
  8169 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+1, btemp+2, b
      +temp+3, btemp+4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+12, btemp+13, btemp+14, btemp+15
      +, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, btemp+24, btemp+25, btemp+26, btemp+27
      +, btemp+28, btemp+29, btemp+30, btemp+31, tosl, structret, tblptrl, tblptrh, tblptru, prodl, prodh, bsr, cstack
  8170 ;; Tracked objects:
  8171 ;;		On entry : 0/0
  8172 ;;		On exit  : 0/0
  8173 ;;		Unchanged: 0/0
  8174 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8175 ;;      Params:         0       0       0       0       0       0       0       0       0
  8176 ;;      Locals:         4       0       0       0       0       0       0       0       0
  8177 ;;      Temps:          1       0       0       0       0       0       0       0       0
  8178 ;;      Totals:         5       0       0       0       0       0       0       0       0
  8179 ;;Total ram usage:        5 bytes
  8180 ;; Hardware stack levels used:    1
  8181 ;; Hardware stack levels required when called:    3
  8182 ;; This function calls:
  8183 ;;		_Enviar_Bits
  8184 ;; This function is called by:
  8185 ;;		_colorWipe
  8186 ;;		_colorWipeRainbow
  8187 ;;		_FadeInOut
  8188 ;;		_fadeInOutRainbow
  8189 ;;		_theaterChase
  8190 ;;		_theaterChaseRainbow
  8191 ;;		_CylonBounce
  8192 ;;		_CycloneBounceRainbow
  8193 ;;		_rainbowCycle
  8194 ;;		_SetAllColor
  8195 ;;		_Strobe
  8196 ;;		_strobeallColors
  8197 ;;		_SetAllcolors
  8198 ;;		_RunningLights
  8199 ;;		_RunningLightsRainbow
  8200 ;;		_setAll
  8201 ;; This function uses a non-reentrant model
  8202 ;;
  8203                           
  8204                           	psect	text29
  8205  00397A                     __ptext29:
  8206                           	opt callstack 0
  8207  00397A                     _Show:
  8208                           	opt callstack 25
  8209                           
  8210                           ;NeoFunctions.c: 6:     int *ptrInicial = &NumofBytes[0];
  8211                           
  8212                           ;incstack = 0
  8213  00397A  0E6E               	movlw	low _NumofBytes
  8214  00397C  6E06               	movwf	Show@ptrInicial^0,c
  8215  00397E  0E00               	movlw	high _NumofBytes
  8216  003980  6E07               	movwf	(Show@ptrInicial+1)^0,c
  8217                           
  8218                           ;NeoFunctions.c: 8:     for(int i=0;i<NeoNum;i++){
  8219  003982  0E00               	movlw	0
  8220  003984  6E05               	movwf	(Show@i+1)^0,c
  8221  003986  0E00               	movlw	0
  8222  003988  6E04               	movwf	Show@i^0,c
  8223  00398A                     l3392:
  8224  00398A  C006  FFD9         	movff	Show@ptrInicial,fsr2l
  8225  00398E  C007  FFDA         	movff	Show@ptrInicial+1,fsr2h
  8226  003992  50DF               	movf	indf2,w,c
  8227  003994  0100               	movlb	0	; () banked
  8228  003996  6F68               	movwf	_ByteR& (0+255),b
  8229                           
  8230                           ; BSR set to: 0
  8231  003998  EE20 F002          	lfsr	2,2
  8232  00399C  5006               	movf	Show@ptrInicial^0,w,c
  8233  00399E  26D9               	addwf	fsr2l,f,c
  8234  0039A0  5007               	movf	(Show@ptrInicial+1)^0,w,c
  8235  0039A2  22DA               	addwfc	fsr2h,f,c
  8236  0039A4  50DF               	movf	indf2,w,c
  8237  0039A6  6F67               	movwf	_ByteG& (0+255),b
  8238                           
  8239                           ; BSR set to: 0
  8240  0039A8  EE20 F004          	lfsr	2,4
  8241  0039AC  5006               	movf	Show@ptrInicial^0,w,c
  8242  0039AE  26D9               	addwf	fsr2l,f,c
  8243  0039B0  5007               	movf	(Show@ptrInicial+1)^0,w,c
  8244  0039B2  22DA               	addwfc	fsr2h,f,c
  8245  0039B4  50DF               	movf	indf2,w,c
  8246  0039B6  6F66               	movwf	_ByteB& (0+255),b
  8247                           
  8248                           ; BSR set to: 0
  8249                           ;NeoFunctions.c: 12:         ptrInicial+=3;
  8250  0039B8  0E06               	movlw	6
  8251  0039BA  2606               	addwf	Show@ptrInicial^0,f,c
  8252  0039BC  0E00               	movlw	0
  8253  0039BE  2207               	addwfc	(Show@ptrInicial+1)^0,f,c
  8254                           
  8255                           ; BSR set to: 0
  8256                           ;NeoFunctions.c: 13:         Enviar_Bits();
  8257  0039C0  ECD7  F014         	call	_Enviar_Bits	;wreg free
  8258                           
  8259                           ;NeoFunctions.c: 14:     }
  8260  0039C4  4A04               	infsnz	Show@i^0,f,c
  8261  0039C6  2A05               	incf	(Show@i+1)^0,f,c
  8262  0039C8  BE05               	btfsc	(Show@i+1)^0,7,c
  8263  0039CA  D7DF               	goto	l3392
  8264  0039CC  5005               	movf	(Show@i+1)^0,w,c
  8265  0039CE  E104               	bnz	u2950
  8266  0039D0  0ED2               	movlw	210
  8267  0039D2  5C04               	subwf	Show@i^0,w,c
  8268  0039D4  A0D8               	btfss	status,0,c
  8269  0039D6  D7D9               	goto	l3392
  8270  0039D8                     u2950:
  8271                           
  8272                           ;NeoFunctions.c: 15:     _delay((unsigned long)((150)*(48000000/4000000.0)));
  8273  0039D8  0E03               	movlw	3
  8274  0039DA  6E03               	movwf	??_Show^0,c
  8275  0039DC  0E55               	movlw	85
  8276  0039DE                     u5957:
  8277  0039DE  2EE8               	decfsz	wreg,f,c
  8278  0039E0  D7FE               	bra	u5957
  8279  0039E2  2E03               	decfsz	??_Show^0,f,c
  8280  0039E4  D7FC               	bra	u5957
  8281  0039E6  F000               	nop	
  8282  0039E8  0012               	return		;funcret
  8283  0039EA                     __end_of_Show:
  8284                           	opt callstack 0
  8285                           
  8286 ;; *************** function ___lbdiv *****************
  8287 ;; Defined at:
  8288 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\lbdiv.c"
  8289 ;; Parameters:    Size  Location     Type
  8290 ;;  dividend        1    wreg     unsigned char 
  8291 ;;  divisor         1    2[COMRAM] unsigned char 
  8292 ;; Auto vars:     Size  Location     Type
  8293 ;;  dividend        1    3[COMRAM] unsigned char 
  8294 ;;  quotient        1    5[COMRAM] unsigned char 
  8295 ;;  counter         1    4[COMRAM] unsigned char 
  8296 ;; Return value:  Size  Location     Type
  8297 ;;                  1    wreg      unsigned char 
  8298 ;; Registers used:
  8299 ;;		wreg, status,2, status,0
  8300 ;; Tracked objects:
  8301 ;;		On entry : 0/0
  8302 ;;		On exit  : 0/0
  8303 ;;		Unchanged: 0/0
  8304 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8305 ;;      Params:         1       0       0       0       0       0       0       0       0
  8306 ;;      Locals:         3       0       0       0       0       0       0       0       0
  8307 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8308 ;;      Totals:         4       0       0       0       0       0       0       0       0
  8309 ;;Total ram usage:        4 bytes
  8310 ;; Hardware stack levels used:    1
  8311 ;; Hardware stack levels required when called:    2
  8312 ;; This function calls:
  8313 ;;		Nothing
  8314 ;; This function is called by:
  8315 ;;		_CycloneBounceRainbow
  8316 ;; This function uses a non-reentrant model
  8317 ;;
  8318                           
  8319                           	psect	text30
  8320  003B98                     __ptext30:
  8321                           	opt callstack 0
  8322  003B98                     ___lbdiv:
  8323                           	opt callstack 27
  8324                           
  8325                           ;incstack = 0
  8326                           ;___lbdiv@dividend stored from wreg
  8327  003B98  6E04               	movwf	___lbdiv@dividend^0,c
  8328  003B9A  0E00               	movlw	0
  8329  003B9C  6E06               	movwf	___lbdiv@quotient^0,c
  8330  003B9E  5003               	movf	___lbdiv@divisor^0,w,c
  8331  003BA0  B4D8               	btfsc	status,2,c
  8332  003BA2  D015               	goto	l4040
  8333  003BA4  0E01               	movlw	1
  8334  003BA6  6E05               	movwf	___lbdiv@counter^0,c
  8335  003BA8  D003               	goto	l4028
  8336  003BAA                     l4024:
  8337  003BAA  90D8               	bcf	status,0,c
  8338  003BAC  3603               	rlcf	___lbdiv@divisor^0,f,c
  8339  003BAE  2A05               	incf	___lbdiv@counter^0,f,c
  8340  003BB0                     l4028:
  8341  003BB0  AE03               	btfss	___lbdiv@divisor^0,7,c
  8342  003BB2  D7FB               	goto	l4024
  8343  003BB4                     u3830:
  8344  003BB4  90D8               	bcf	status,0,c
  8345  003BB6  3606               	rlcf	___lbdiv@quotient^0,f,c
  8346  003BB8  5003               	movf	___lbdiv@divisor^0,w,c
  8347  003BBA  5C04               	subwf	___lbdiv@dividend^0,w,c
  8348  003BBC  A0D8               	btfss	status,0,c
  8349  003BBE  D003               	goto	l4036
  8350  003BC0  5003               	movf	___lbdiv@divisor^0,w,c
  8351  003BC2  5E04               	subwf	___lbdiv@dividend^0,f,c
  8352  003BC4  8006               	bsf	___lbdiv@quotient^0,0,c
  8353  003BC6                     l4036:
  8354  003BC6  90D8               	bcf	status,0,c
  8355  003BC8  3203               	rrcf	___lbdiv@divisor^0,f,c
  8356  003BCA  2E05               	decfsz	___lbdiv@counter^0,f,c
  8357  003BCC  D7F3               	goto	u3830
  8358  003BCE                     l4040:
  8359  003BCE  5006               	movf	___lbdiv@quotient^0,w,c
  8360  003BD0  0012               	return		;funcret
  8361  003BD2                     __end_of___lbdiv:
  8362                           	opt callstack 0
  8363                           
  8364 ;; *************** function ___awdiv *****************
  8365 ;; Defined at:
  8366 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\awdiv.c"
  8367 ;; Parameters:    Size  Location     Type
  8368 ;;  dividend        2    8[COMRAM] int 
  8369 ;;  divisor         2   10[COMRAM] int 
  8370 ;; Auto vars:     Size  Location     Type
  8371 ;;  quotient        2   14[COMRAM] int 
  8372 ;;  sign            1   13[COMRAM] unsigned char 
  8373 ;;  counter         1   12[COMRAM] unsigned char 
  8374 ;; Return value:  Size  Location     Type
  8375 ;;                  2    8[COMRAM] int 
  8376 ;; Registers used:
  8377 ;;		wreg, status,2, status,0
  8378 ;; Tracked objects:
  8379 ;;		On entry : 0/0
  8380 ;;		On exit  : 0/0
  8381 ;;		Unchanged: 0/0
  8382 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8383 ;;      Params:         4       0       0       0       0       0       0       0       0
  8384 ;;      Locals:         4       0       0       0       0       0       0       0       0
  8385 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8386 ;;      Totals:         8       0       0       0       0       0       0       0       0
  8387 ;;Total ram usage:        8 bytes
  8388 ;; Hardware stack levels used:    1
  8389 ;; Hardware stack levels required when called:    2
  8390 ;; This function calls:
  8391 ;;		Nothing
  8392 ;; This function is called by:
  8393 ;;		_colorWipeRainbow
  8394 ;;		_fadeInOutRainbow
  8395 ;;		_CycloneBounceRainbow
  8396 ;;		_rainbowCycle
  8397 ;; This function uses a non-reentrant model
  8398 ;;
  8399                           
  8400                           	psect	text31
  8401  003804                     __ptext31:
  8402                           	opt callstack 0
  8403  003804                     ___awdiv:
  8404                           	opt callstack 27
  8405                           
  8406                           ;incstack = 0
  8407  003804  0E00               	movlw	0
  8408  003806  6E0E               	movwf	___awdiv@sign^0,c
  8409  003808  AE0C               	btfss	(___awdiv@divisor+1)^0,7,c
  8410  00380A  D006               	goto	l3902
  8411  00380C  6C0B               	negf	___awdiv@divisor^0,c
  8412  00380E  1E0C               	comf	(___awdiv@divisor+1)^0,f,c
  8413  003810  B0D8               	btfsc	status,0,c
  8414  003812  2A0C               	incf	(___awdiv@divisor+1)^0,f,c
  8415  003814  0E01               	movlw	1
  8416  003816  6E0E               	movwf	___awdiv@sign^0,c
  8417  003818                     l3902:
  8418  003818  AE0A               	btfss	(___awdiv@dividend+1)^0,7,c
  8419  00381A  D006               	goto	l3908
  8420  00381C  6C09               	negf	___awdiv@dividend^0,c
  8421  00381E  1E0A               	comf	(___awdiv@dividend+1)^0,f,c
  8422  003820  B0D8               	btfsc	status,0,c
  8423  003822  2A0A               	incf	(___awdiv@dividend+1)^0,f,c
  8424  003824  0E01               	movlw	1
  8425  003826  1A0E               	xorwf	___awdiv@sign^0,f,c
  8426  003828                     l3908:
  8427  003828  0E00               	movlw	0
  8428  00382A  6E10               	movwf	(___awdiv@quotient+1)^0,c
  8429  00382C  0E00               	movlw	0
  8430  00382E  6E0F               	movwf	___awdiv@quotient^0,c
  8431  003830  500B               	movf	___awdiv@divisor^0,w,c
  8432  003832  100C               	iorwf	(___awdiv@divisor+1)^0,w,c
  8433  003834  B4D8               	btfsc	status,2,c
  8434  003836  D01C               	goto	l3930
  8435  003838  0E01               	movlw	1
  8436  00383A  6E0D               	movwf	___awdiv@counter^0,c
  8437  00383C  D004               	goto	l3916
  8438  00383E                     l3914:
  8439  00383E  90D8               	bcf	status,0,c
  8440  003840  360B               	rlcf	___awdiv@divisor^0,f,c
  8441  003842  360C               	rlcf	(___awdiv@divisor+1)^0,f,c
  8442  003844  2A0D               	incf	___awdiv@counter^0,f,c
  8443  003846                     l3916:
  8444  003846  AE0C               	btfss	(___awdiv@divisor+1)^0,7,c
  8445  003848  D7FA               	goto	l3914
  8446  00384A                     u3660:
  8447  00384A  90D8               	bcf	status,0,c
  8448  00384C  360F               	rlcf	___awdiv@quotient^0,f,c
  8449  00384E  3610               	rlcf	(___awdiv@quotient+1)^0,f,c
  8450  003850  500B               	movf	___awdiv@divisor^0,w,c
  8451  003852  5C09               	subwf	___awdiv@dividend^0,w,c
  8452  003854  500C               	movf	(___awdiv@divisor+1)^0,w,c
  8453  003856  580A               	subwfb	(___awdiv@dividend+1)^0,w,c
  8454  003858  A0D8               	btfss	status,0,c
  8455  00385A  D005               	goto	l3926
  8456  00385C  500B               	movf	___awdiv@divisor^0,w,c
  8457  00385E  5E09               	subwf	___awdiv@dividend^0,f,c
  8458  003860  500C               	movf	(___awdiv@divisor+1)^0,w,c
  8459  003862  5A0A               	subwfb	(___awdiv@dividend+1)^0,f,c
  8460  003864  800F               	bsf	___awdiv@quotient^0,0,c
  8461  003866                     l3926:
  8462  003866  90D8               	bcf	status,0,c
  8463  003868  320C               	rrcf	(___awdiv@divisor+1)^0,f,c
  8464  00386A  320B               	rrcf	___awdiv@divisor^0,f,c
  8465  00386C  2E0D               	decfsz	___awdiv@counter^0,f,c
  8466  00386E  D7ED               	goto	u3660
  8467  003870                     l3930:
  8468  003870  500E               	movf	___awdiv@sign^0,w,c
  8469  003872  B4D8               	btfsc	status,2,c
  8470  003874  D004               	goto	l3934
  8471  003876  6C0F               	negf	___awdiv@quotient^0,c
  8472  003878  1E10               	comf	(___awdiv@quotient+1)^0,f,c
  8473  00387A  B0D8               	btfsc	status,0,c
  8474  00387C  2A10               	incf	(___awdiv@quotient+1)^0,f,c
  8475  00387E                     l3934:
  8476  00387E  C00F  F009         	movff	___awdiv@quotient,?___awdiv
  8477  003882  C010  F00A         	movff	___awdiv@quotient+1,?___awdiv+1
  8478  003886  0012               	return		;funcret
  8479  003888                     __end_of___awdiv:
  8480                           	opt callstack 0
  8481                           
  8482 ;; *************** function _Wheel *****************
  8483 ;; Defined at:
  8484 ;;		line 549 in file "Patterns.c"
  8485 ;; Parameters:    Size  Location     Type
  8486 ;;  WheelPos        2   16[COMRAM] int 
  8487 ;; Auto vars:     Size  Location     Type
  8488 ;;		None
  8489 ;; Return value:  Size  Location     Type
  8490 ;;                  1    wreg      PTR unsigned char 
  8491 ;; Registers used:
  8492 ;;		wreg, status,2, status,0, prodl, prodh
  8493 ;; Tracked objects:
  8494 ;;		On entry : 0/0
  8495 ;;		On exit  : 3F/0
  8496 ;;		Unchanged: 0/0
  8497 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8498 ;;      Params:         2       0       0       0       0       0       0       0       0
  8499 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8500 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8501 ;;      Totals:         2       0       0       0       0       0       0       0       0
  8502 ;;Total ram usage:        2 bytes
  8503 ;; Hardware stack levels used:    1
  8504 ;; Hardware stack levels required when called:    2
  8505 ;; This function calls:
  8506 ;;		Nothing
  8507 ;; This function is called by:
  8508 ;;		_colorWipeRainbow
  8509 ;;		_fadeInOutRainbow
  8510 ;;		_theaterChaseRainbow
  8511 ;;		_CycloneBounceRainbow
  8512 ;;		_rainbowCycle
  8513 ;;		_strobeallColors
  8514 ;;		_FadeAllcolors
  8515 ;;		_SetAllcolors
  8516 ;;		_RunningLightsRainbow
  8517 ;; This function uses a non-reentrant model
  8518 ;;
  8519                           
  8520                           	psect	text32
  8521  00342A                     __ptext32:
  8522                           	opt callstack 0
  8523  00342A                     _Wheel:
  8524                           	opt callstack 27
  8525                           
  8526                           ;Patterns.c: 550:     static unsigned char c[3];;Patterns.c: 552:     if(WheelPos < 43) 
      +                          {
  8527                           
  8528                           ;incstack = 0
  8529  00342A  BE12               	btfsc	(Wheel@WheelPos+1)^0,7,c
  8530  00342C  D006               	goto	u3050
  8531  00342E  5012               	movf	(Wheel@WheelPos+1)^0,w,c
  8532  003430  E10D               	bnz	l3518
  8533  003432  0E2B               	movlw	43
  8534  003434  5C11               	subwf	Wheel@WheelPos^0,w,c
  8535  003436  B0D8               	btfsc	status,0,c
  8536  003438  D009               	goto	l3518
  8537  00343A                     u3050:
  8538                           
  8539                           ;Patterns.c: 554:         c[0]=255;
  8540  00343A  0100               	movlb	0	; () banked
  8541  00343C  6969               	setf	Wheel@c& (0+255),b
  8542                           
  8543                           ; BSR set to: 0
  8544                           ;Patterns.c: 555:         c[1]=0;
  8545  00343E  0E00               	movlw	0
  8546  003440  6F6A               	movwf	(Wheel@c+1)& (0+255),b
  8547                           
  8548                           ; BSR set to: 0
  8549                           ;Patterns.c: 556:         c[2]=WheelPos*6;
  8550  003442  5011               	movf	Wheel@WheelPos^0,w,c
  8551  003444  0D06               	mullw	6
  8552  003446  CFF3 F06B          	movff	prodl,Wheel@c+2
  8553                           
  8554                           ;Patterns.c: 557:     } else if(WheelPos < 86) {
  8555  00344A  D05D               	goto	l3566
  8556  00344C                     l3518:
  8557  00344C  BE12               	btfsc	(Wheel@WheelPos+1)^0,7,c
  8558  00344E  D006               	goto	u3060
  8559  003450  5012               	movf	(Wheel@WheelPos+1)^0,w,c
  8560  003452  E111               	bnz	l3528
  8561  003454  0E56               	movlw	86
  8562  003456  5C11               	subwf	Wheel@WheelPos^0,w,c
  8563  003458  B0D8               	btfsc	status,0,c
  8564  00345A  D00D               	goto	l3528
  8565  00345C                     u3060:
  8566                           
  8567                           ;Patterns.c: 558:      WheelPos -= 43;
  8568  00345C  0ED5               	movlw	213
  8569  00345E  2611               	addwf	Wheel@WheelPos^0,f,c
  8570  003460  0EFF               	movlw	255
  8571  003462  2212               	addwfc	(Wheel@WheelPos+1)^0,f,c
  8572                           
  8573                           ;Patterns.c: 559:         c[0]=255-(WheelPos*6);
  8574  003464  5011               	movf	Wheel@WheelPos^0,w,c
  8575  003466  0DFA               	mullw	250
  8576  003468  04F3               	decf	243,w,c
  8577  00346A  0100               	movlb	0	; () banked
  8578  00346C  6F69               	movwf	Wheel@c& (0+255),b
  8579                           
  8580                           ; BSR set to: 0
  8581                           ;Patterns.c: 560:         c[1]=0;
  8582  00346E  0E00               	movlw	0
  8583  003470  6F6A               	movwf	(Wheel@c+1)& (0+255),b
  8584  003472                     l3526:
  8585                           
  8586                           ; BSR set to: 0
  8587                           ;Patterns.c: 561:         c[2]=255 ;
  8588  003472  696B               	setf	(Wheel@c+2)& (0+255),b
  8589                           
  8590                           ;Patterns.c: 562:     } else if(WheelPos < 129){
  8591  003474  D048               	goto	l3566
  8592  003476                     l3528:
  8593  003476  BE12               	btfsc	(Wheel@WheelPos+1)^0,7,c
  8594  003478  D006               	goto	u3070
  8595  00347A  5012               	movf	(Wheel@WheelPos+1)^0,w,c
  8596  00347C  E110               	bnz	l3538
  8597  00347E  0E81               	movlw	129
  8598  003480  5C11               	subwf	Wheel@WheelPos^0,w,c
  8599  003482  B0D8               	btfsc	status,0,c
  8600  003484  D00C               	goto	l3538
  8601  003486                     u3070:
  8602                           
  8603                           ;Patterns.c: 563:         WheelPos -= 86;
  8604  003486  0EAA               	movlw	170
  8605  003488  2611               	addwf	Wheel@WheelPos^0,f,c
  8606  00348A  0EFF               	movlw	255
  8607  00348C  2212               	addwfc	(Wheel@WheelPos+1)^0,f,c
  8608                           
  8609                           ;Patterns.c: 564:         c[0]=0;
  8610  00348E  0E00               	movlw	0
  8611  003490  0100               	movlb	0	; () banked
  8612  003492  6F69               	movwf	Wheel@c& (0+255),b
  8613                           
  8614                           ; BSR set to: 0
  8615                           ;Patterns.c: 565:         c[1]=WheelPos *6;
  8616  003494  5011               	movf	Wheel@WheelPos^0,w,c
  8617  003496  0D06               	mullw	6
  8618  003498  CFF3 F06A          	movff	prodl,Wheel@c+1
  8619  00349C  D7EA               	goto	l3526
  8620  00349E                     l3538:
  8621  00349E  BE12               	btfsc	(Wheel@WheelPos+1)^0,7,c
  8622  0034A0  D006               	goto	u3080
  8623  0034A2  5012               	movf	(Wheel@WheelPos+1)^0,w,c
  8624  0034A4  E110               	bnz	l3548
  8625  0034A6  0EAB               	movlw	171
  8626  0034A8  5C11               	subwf	Wheel@WheelPos^0,w,c
  8627  0034AA  B0D8               	btfsc	status,0,c
  8628  0034AC  D00C               	goto	l3548
  8629  0034AE                     u3080:
  8630                           
  8631                           ;Patterns.c: 568:         WheelPos -= 129;
  8632  0034AE  0E7F               	movlw	127
  8633  0034B0  2611               	addwf	Wheel@WheelPos^0,f,c
  8634  0034B2  0EFF               	movlw	255
  8635  0034B4  2212               	addwfc	(Wheel@WheelPos+1)^0,f,c
  8636                           
  8637                           ;Patterns.c: 569:         c[0]=0;
  8638  0034B6  0E00               	movlw	0
  8639  0034B8  0100               	movlb	0	; () banked
  8640  0034BA  6F69               	movwf	Wheel@c& (0+255),b
  8641                           
  8642                           ; BSR set to: 0
  8643                           ;Patterns.c: 570:         c[1]=255;
  8644  0034BC  696A               	setf	(Wheel@c+1)& (0+255),b
  8645                           
  8646                           ; BSR set to: 0
  8647                           ;Patterns.c: 571:         c[2]=255 - (WheelPos*6);
  8648  0034BE  5011               	movf	Wheel@WheelPos^0,w,c
  8649  0034C0  0DFA               	mullw	250
  8650  0034C2  04F3               	decf	243,w,c
  8651  0034C4  D013               	goto	L8
  8652  0034C6                     l3548:
  8653  0034C6  BE12               	btfsc	(Wheel@WheelPos+1)^0,7,c
  8654  0034C8  D006               	goto	u3090
  8655  0034CA  5012               	movf	(Wheel@WheelPos+1)^0,w,c
  8656  0034CC  E111               	bnz	l3558
  8657  0034CE  0ED5               	movlw	213
  8658  0034D0  5C11               	subwf	Wheel@WheelPos^0,w,c
  8659  0034D2  B0D8               	btfsc	status,0,c
  8660  0034D4  D00D               	goto	l3558
  8661  0034D6                     u3090:
  8662                           
  8663                           ;Patterns.c: 573:         WheelPos -= 171;
  8664  0034D6  0E55               	movlw	85
  8665  0034D8  2611               	addwf	Wheel@WheelPos^0,f,c
  8666  0034DA  0EFF               	movlw	255
  8667  0034DC  2212               	addwfc	(Wheel@WheelPos+1)^0,f,c
  8668                           
  8669                           ;Patterns.c: 574:         c[0]=WheelPos*6;
  8670  0034DE  5011               	movf	Wheel@WheelPos^0,w,c
  8671  0034E0  0D06               	mullw	6
  8672  0034E2  CFF3 F069          	movff	prodl,Wheel@c
  8673                           
  8674                           ;Patterns.c: 575:         c[1]=255;
  8675  0034E6  0100               	movlb	0	; () banked
  8676  0034E8  696A               	setf	(Wheel@c+1)& (0+255),b
  8677  0034EA                     l3556:
  8678                           
  8679                           ; BSR set to: 0
  8680                           ;Patterns.c: 576:         c[2]=0;
  8681  0034EA  0E00               	movlw	0
  8682  0034EC                     L8:
  8683  0034EC  6F6B               	movwf	(Wheel@c+2)& (0+255),b
  8684                           
  8685                           ;Patterns.c: 577:     }else{
  8686  0034EE  D00B               	goto	l3566
  8687  0034F0                     l3558:
  8688                           
  8689                           ;Patterns.c: 578:         WheelPos -= 213;
  8690  0034F0  0E2B               	movlw	43
  8691  0034F2  2611               	addwf	Wheel@WheelPos^0,f,c
  8692  0034F4  0EFF               	movlw	255
  8693  0034F6  2212               	addwfc	(Wheel@WheelPos+1)^0,f,c
  8694                           
  8695                           ;Patterns.c: 579:         c[0]=255;
  8696  0034F8  0100               	movlb	0	; () banked
  8697  0034FA  6969               	setf	Wheel@c& (0+255),b
  8698                           
  8699                           ; BSR set to: 0
  8700                           ;Patterns.c: 580:          c[1]=255-(WheelPos *6);
  8701  0034FC  5011               	movf	Wheel@WheelPos^0,w,c
  8702  0034FE  0DFA               	mullw	250
  8703  003500  04F3               	decf	243,w,c
  8704  003502  6F6A               	movwf	(Wheel@c+1)& (0+255),b
  8705  003504  D7F2               	goto	l3556
  8706  003506                     l3566:
  8707                           
  8708                           ; BSR set to: 0
  8709                           ;Patterns.c: 584:     return c;
  8710  003506  0E69               	movlw	Wheel@c& (0+255)
  8711                           
  8712                           ; BSR set to: 0
  8713  003508  0012               	return		;funcret
  8714  00350A                     __end_of_Wheel:
  8715                           	opt callstack 0
  8716                           
  8717 ;; *************** function _Time_Check *****************
  8718 ;; Defined at:
  8719 ;;		line 586 in file "Patterns.c"
  8720 ;; Parameters:    Size  Location     Type
  8721 ;;  Time            2    2[COMRAM] int 
  8722 ;; Auto vars:     Size  Location     Type
  8723 ;;		None
  8724 ;; Return value:  Size  Location     Type
  8725 ;;                  1    wreg      void 
  8726 ;; Registers used:
  8727 ;;		wreg, status,2, status,0
  8728 ;; Tracked objects:
  8729 ;;		On entry : 0/0
  8730 ;;		On exit  : 0/0
  8731 ;;		Unchanged: 0/0
  8732 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8733 ;;      Params:         2       0       0       0       0       0       0       0       0
  8734 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8735 ;;      Temps:          3       0       0       0       0       0       0       0       0
  8736 ;;      Totals:         5       0       0       0       0       0       0       0       0
  8737 ;;Total ram usage:        5 bytes
  8738 ;; Hardware stack levels used:    1
  8739 ;; Hardware stack levels required when called:    2
  8740 ;; This function calls:
  8741 ;;		Nothing
  8742 ;; This function is called by:
  8743 ;;		_RGBLoop
  8744 ;;		_colorWipe
  8745 ;;		_colorWipeRainbow
  8746 ;;		_FadeInOut
  8747 ;;		_theaterChase
  8748 ;;		_theaterChaseRainbow
  8749 ;;		_CylonBounce
  8750 ;;		_CycloneBounceRainbow
  8751 ;;		_rainbowCycle
  8752 ;;		_SetAllColor
  8753 ;;		_Strobe
  8754 ;;		_strobeallColors
  8755 ;;		_FadeAllcolors
  8756 ;;		_SetAllcolors
  8757 ;;		_RunningLights
  8758 ;;		_RunningLightsRainbow
  8759 ;; This function uses a non-reentrant model
  8760 ;;
  8761                           
  8762                           	psect	text33
  8763  003BF8                     __ptext33:
  8764                           	opt callstack 0
  8765  003BF8                     _Time_Check:
  8766                           	opt callstack 27
  8767                           
  8768                           ;Patterns.c: 587:     if(BT_Tiempo < Time){
  8769                           
  8770                           ; BSR set to: 0
  8771                           ;incstack = 0
  8772  003BF8  505A               	movf	_BT_Tiempo^0,w,c	;volatile
  8773  003BFA  6E05               	movwf	??_Time_Check^0,c
  8774  003BFC  6A06               	clrf	(??_Time_Check+1)^0,c
  8775  003BFE  5003               	movf	Time_Check@Time^0,w,c
  8776  003C00  5C05               	subwf	??_Time_Check^0,w,c
  8777  003C02  5006               	movf	(??_Time_Check+1)^0,w,c
  8778  003C04  0A80               	xorlw	128
  8779  003C06  6E07               	movwf	(??_Time_Check+2)^0,c
  8780  003C08  5004               	movf	(Time_Check@Time+1)^0,w,c
  8781  003C0A  0A80               	xorlw	128
  8782  003C0C  5807               	subwfb	(??_Time_Check+2)^0,w,c
  8783  003C0E  B0D8               	btfsc	status,0,c
  8784  003C10  0012               	return	
  8785                           
  8786                           ;Patterns.c: 588:         BT_Tiempo = Time;
  8787  003C12  C003  F05A         	movff	Time_Check@Time,_BT_Tiempo	;volatile
  8788  003C16  0012               	return		;funcret
  8789  003C18                     __end_of_Time_Check:
  8790                           	opt callstack 0
  8791                           
  8792 ;; *************** function _Delay_ms *****************
  8793 ;; Defined at:
  8794 ;;		line 592 in file "Patterns.c"
  8795 ;; Parameters:    Size  Location     Type
  8796 ;;  time            2    2[COMRAM] int 
  8797 ;; Auto vars:     Size  Location     Type
  8798 ;;  l               2    5[COMRAM] int 
  8799 ;; Return value:  Size  Location     Type
  8800 ;;                  1    wreg      void 
  8801 ;; Registers used:
  8802 ;;		wreg, status,2, status,0
  8803 ;; Tracked objects:
  8804 ;;		On entry : 0/0
  8805 ;;		On exit  : 0/0
  8806 ;;		Unchanged: 0/0
  8807 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8808 ;;      Params:         2       0       0       0       0       0       0       0       0
  8809 ;;      Locals:         2       0       0       0       0       0       0       0       0
  8810 ;;      Temps:          1       0       0       0       0       0       0       0       0
  8811 ;;      Totals:         5       0       0       0       0       0       0       0       0
  8812 ;;Total ram usage:        5 bytes
  8813 ;; Hardware stack levels used:    1
  8814 ;; Hardware stack levels required when called:    2
  8815 ;; This function calls:
  8816 ;;		Nothing
  8817 ;; This function is called by:
  8818 ;;		_main
  8819 ;;		_RGBLoop
  8820 ;;		_colorWipe
  8821 ;;		_colorWipeRainbow
  8822 ;;		_FadeInOut
  8823 ;;		_fadeInOutRainbow
  8824 ;;		_theaterChase
  8825 ;;		_theaterChaseRainbow
  8826 ;;		_CylonBounce
  8827 ;;		_CycloneBounceRainbow
  8828 ;;		_rainbowCycle
  8829 ;;		_SetAllColor
  8830 ;;		_Strobe
  8831 ;;		_strobeallColors
  8832 ;;		_FadeAllcolors
  8833 ;;		_SetAllcolors
  8834 ;;		_RunningLights
  8835 ;;		_RunningLightsRainbow
  8836 ;; This function uses a non-reentrant model
  8837 ;;
  8838                           
  8839                           	psect	text34
  8840  003AA2                     __ptext34:
  8841                           	opt callstack 0
  8842  003AA2                     _Delay_ms:
  8843                           	opt callstack 27
  8844                           
  8845                           ;Patterns.c: 593:     int l;;Patterns.c: 594:     if(time == 0){
  8846                           
  8847                           ;incstack = 0
  8848  003AA2  5003               	movf	Delay_ms@time^0,w,c
  8849  003AA4  1004               	iorwf	(Delay_ms@time+1)^0,w,c
  8850  003AA6  A4D8               	btfss	status,2,c
  8851  003AA8  D004               	goto	l544
  8852                           
  8853                           ;Patterns.c: 595:         time = 1;
  8854  003AAA  0E00               	movlw	0
  8855  003AAC  6E04               	movwf	(Delay_ms@time+1)^0,c
  8856  003AAE  0E01               	movlw	1
  8857  003AB0  6E03               	movwf	Delay_ms@time^0,c
  8858  003AB2                     l544:
  8859                           
  8860                           ;Patterns.c: 597:     for(l=0;l<time;l++){
  8861  003AB2  0E00               	movlw	0
  8862  003AB4  6E07               	movwf	(Delay_ms@l+1)^0,c
  8863  003AB6  0E00               	movlw	0
  8864  003AB8  6E06               	movwf	Delay_ms@l^0,c
  8865  003ABA  D00A               	goto	l545
  8866  003ABC                     l3426:
  8867                           
  8868                           ;Patterns.c: 598:         _delay((unsigned long)((1)*(48000000/4000.0)));
  8869  003ABC  0E10               	movlw	16
  8870  003ABE  6E05               	movwf	??_Delay_ms^0,c
  8871  003AC0  0E94               	movlw	148
  8872  003AC2                     u5967:
  8873  003AC2  2EE8               	decfsz	wreg,f,c
  8874  003AC4  D7FE               	bra	u5967
  8875  003AC6  2E05               	decfsz	??_Delay_ms^0,f,c
  8876  003AC8  D7FC               	bra	u5967
  8877  003ACA  D000               	nop2	
  8878                           
  8879                           ;Patterns.c: 599:     }
  8880  003ACC  4A06               	infsnz	Delay_ms@l^0,f,c
  8881  003ACE  2A07               	incf	(Delay_ms@l+1)^0,f,c
  8882  003AD0                     l545:
  8883  003AD0  5003               	movf	Delay_ms@time^0,w,c
  8884  003AD2  5C06               	subwf	Delay_ms@l^0,w,c
  8885  003AD4  5007               	movf	(Delay_ms@l+1)^0,w,c
  8886  003AD6  0A80               	xorlw	128
  8887  003AD8  6E05               	movwf	??_Delay_ms^0,c
  8888  003ADA  5004               	movf	(Delay_ms@time+1)^0,w,c
  8889  003ADC  0A80               	xorlw	128
  8890  003ADE  5805               	subwfb	??_Delay_ms^0,w,c
  8891  003AE0  B0D8               	btfsc	status,0,c
  8892  003AE2  0012               	return	
  8893  003AE4  D7EB               	goto	l3426
  8894  003AE6                     __end_of_Delay_ms:
  8895                           	opt callstack 0
  8896                           
  8897 ;; *************** function _Config4550 *****************
  8898 ;; Defined at:
  8899 ;;		line 14 in file "Settings.c"
  8900 ;; Parameters:    Size  Location     Type
  8901 ;;		None
  8902 ;; Auto vars:     Size  Location     Type
  8903 ;;		None
  8904 ;; Return value:  Size  Location     Type
  8905 ;;                  1    wreg      void 
  8906 ;; Registers used:
  8907 ;;		wreg, status,2
  8908 ;; Tracked objects:
  8909 ;;		On entry : 0/0
  8910 ;;		On exit  : 0/0
  8911 ;;		Unchanged: 0/0
  8912 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8913 ;;      Params:         0       0       0       0       0       0       0       0       0
  8914 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8915 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8916 ;;      Totals:         0       0       0       0       0       0       0       0       0
  8917 ;;Total ram usage:        0 bytes
  8918 ;; Hardware stack levels used:    1
  8919 ;; Hardware stack levels required when called:    2
  8920 ;; This function calls:
  8921 ;;		Nothing
  8922 ;; This function is called by:
  8923 ;;		_main
  8924 ;; This function uses a non-reentrant model
  8925 ;;
  8926                           
  8927                           	psect	text35
  8928  003A46                     __ptext35:
  8929                           	opt callstack 0
  8930  003A46                     _Config4550:
  8931                           	opt callstack 28
  8932                           
  8933                           ;Settings.c: 15:     while(!OSCCONbits.OSTS);
  8934                           
  8935                           ;incstack = 0
  8936  003A46  A6D3               	btfss	211,3,c	;volatile
  8937  003A48  D7FE               	goto	_Config4550
  8938                           
  8939                           ;Settings.c: 17:     OSCCONbits.IDLEN = 1;
  8940  003A4A  8ED3               	bsf	211,7,c	;volatile
  8941                           
  8942                           ;Settings.c: 19:     TRISA = 0;
  8943  003A4C  0E00               	movlw	0
  8944  003A4E  6E92               	movwf	146,c	;volatile
  8945                           
  8946                           ;Settings.c: 20:     TRISB = 0;
  8947  003A50  0E00               	movlw	0
  8948  003A52  6E93               	movwf	147,c	;volatile
  8949                           
  8950                           ;Settings.c: 21:     TRISC = 0;
  8951  003A54  0E00               	movlw	0
  8952  003A56  6E94               	movwf	148,c	;volatile
  8953                           
  8954                           ;Settings.c: 22:     TRISD = 0;
  8955  003A58  0E00               	movlw	0
  8956  003A5A  6E95               	movwf	149,c	;volatile
  8957                           
  8958                           ;Settings.c: 23:     TRISE = 0;
  8959  003A5C  0E00               	movlw	0
  8960  003A5E  6E96               	movwf	150,c	;volatile
  8961                           
  8962                           ;Settings.c: 25:     PORTA = 0;
  8963  003A60  0E00               	movlw	0
  8964  003A62  6E80               	movwf	128,c	;volatile
  8965                           
  8966                           ;Settings.c: 26:     PORTB = 0;
  8967  003A64  0E00               	movlw	0
  8968  003A66  6E81               	movwf	129,c	;volatile
  8969                           
  8970                           ;Settings.c: 27:     PORTC = 0;
  8971  003A68  0E00               	movlw	0
  8972  003A6A  6E82               	movwf	130,c	;volatile
  8973                           
  8974                           ;Settings.c: 28:     PORTD = 0;
  8975  003A6C  0E00               	movlw	0
  8976  003A6E  6E83               	movwf	131,c	;volatile
  8977                           
  8978                           ;Settings.c: 29:     PORTE = 0;
  8979  003A70  0E00               	movlw	0
  8980  003A72  6E84               	movwf	132,c	;volatile
  8981                           
  8982                           ;Settings.c: 31:     TMR1H = 0xE8;
  8983  003A74  0EE8               	movlw	232
  8984  003A76  6ECF               	movwf	207,c	;volatile
  8985                           
  8986                           ;Settings.c: 32:     TMR1L = 0xEE;
  8987  003A78  0EEE               	movlw	238
  8988  003A7A  6ECE               	movwf	206,c	;volatile
  8989                           
  8990                           ;Settings.c: 33:     T1CON = 0x91;
  8991  003A7C  0E91               	movlw	145
  8992  003A7E  6ECD               	movwf	205,c	;volatile
  8993                           
  8994                           ;Settings.c: 37:     TRISCbits.TRISC6 = 1;
  8995  003A80  8C94               	bsf	148,6,c	;volatile
  8996                           
  8997                           ;Settings.c: 38:     TRISCbits.TRISC7 = 1;
  8998  003A82  8E94               	bsf	148,7,c	;volatile
  8999                           
  9000                           ;Settings.c: 40:     SPBRG = 0xE1;
  9001  003A84  0EE1               	movlw	225
  9002  003A86  6EAF               	movwf	175,c	;volatile
  9003                           
  9004                           ;Settings.c: 41:     SPBRGH = 0x04;
  9005  003A88  0E04               	movlw	4
  9006  003A8A  6EB0               	movwf	176,c	;volatile
  9007                           
  9008                           ;Settings.c: 42:     TXSTA = 0x24;
  9009  003A8C  0E24               	movlw	36
  9010  003A8E  6EAC               	movwf	172,c	;volatile
  9011                           
  9012                           ;Settings.c: 43:     RCSTA = 0x90;
  9013  003A90  0E90               	movlw	144
  9014  003A92  6EAB               	movwf	171,c	;volatile
  9015                           
  9016                           ;Settings.c: 44:     BAUDCON = 0x08;
  9017  003A94  0E08               	movlw	8
  9018  003A96  6EB8               	movwf	184,c	;volatile
  9019                           
  9020                           ;Settings.c: 47:     PIE1bits.RCIE = 1;
  9021  003A98  8A9D               	bsf	157,5,c	;volatile
  9022                           
  9023                           ;Settings.c: 48:     RCONbits.IPEN = 0;
  9024  003A9A  9ED0               	bcf	208,7,c	;volatile
  9025                           
  9026                           ;Settings.c: 49:     INTCONbits.PEIE = 1;
  9027  003A9C  8CF2               	bsf	242,6,c	;volatile
  9028                           
  9029                           ;Settings.c: 50:     INTCONbits.GIE=1;
  9030  003A9E  8EF2               	bsf	242,7,c	;volatile
  9031  003AA0  0012               	return		;funcret
  9032  003AA2                     __end_of_Config4550:
  9033                           	opt callstack 0
  9034                           
  9035 ;; *************** function _ISR *****************
  9036 ;; Defined at:
  9037 ;;		line 13 in file "Main.c"
  9038 ;; Parameters:    Size  Location     Type
  9039 ;;		None
  9040 ;; Auto vars:     Size  Location     Type
  9041 ;;		None
  9042 ;; Return value:  Size  Location     Type
  9043 ;;                  1    wreg      void 
  9044 ;; Registers used:
  9045 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  9046 ;; Tracked objects:
  9047 ;;		On entry : 0/0
  9048 ;;		On exit  : 0/0
  9049 ;;		Unchanged: 0/0
  9050 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9051 ;;      Params:         0       0       0       0       0       0       0       0       0
  9052 ;;      Locals:         0       0       0       0       0       0       0       0       0
  9053 ;;      Temps:          2       0       0       0       0       0       0       0       0
  9054 ;;      Totals:         2       0       0       0       0       0       0       0       0
  9055 ;;Total ram usage:        2 bytes
  9056 ;; Hardware stack levels used:    1
  9057 ;; Hardware stack levels required when called:    1
  9058 ;; This function calls:
  9059 ;;		_checkBuff
  9060 ;; This function is called by:
  9061 ;;		Interrupt level 2
  9062 ;; This function uses a non-reentrant model
  9063 ;;
  9064                           
  9065                           	psect	intcode
  9066  000008                     __pintcode:
  9067                           	opt callstack 0
  9068  000008                     _ISR:
  9069                           	opt callstack 24
  9070                           
  9071                           ;incstack = 0
  9072  000008  825D               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  9073  00000A  ED91  F01D         	call	int_func,f	;refresh shadow registers
  9074                           
  9075                           	psect	intcode_body
  9076  003B22                     __pintcode_body:
  9077                           	opt callstack 24
  9078  003B22                     int_func:
  9079                           	opt callstack 24
  9080  003B22  0006               	pop		; remove dummy address from shadow register refresh
  9081  003B24  CFD9 F001          	movff	fsr2l,??_ISR
  9082  003B28  CFDA F002          	movff	fsr2h,??_ISR+1
  9083                           
  9084                           ;Main.c: 14:     if(PIR1bits.RCIF){
  9085  003B2C  AA9E               	btfss	158,5,c	;volatile
  9086  003B2E  D011               	goto	i2l83
  9087                           
  9088                           ;Main.c: 15:         BT_RC[BT_Buff] = RCREG;
  9089  003B30  0100               	movlb	0	; () banked
  9090  003B32  5165               	movf	_BT_Buff& (0+255),w,b
  9091  003B34  0F60               	addlw	low _BT_RC
  9092  003B36  6ED9               	movwf	fsr2l,c
  9093  003B38  6ADA               	clrf	fsr2h,c
  9094  003B3A  CFAE FFDF          	movff	4014,indf2	;volatile
  9095                           
  9096                           ; BSR set to: 0
  9097                           ;Main.c: 16:         BT_Buff++;
  9098  003B3E  2B65               	incf	_BT_Buff& (0+255),f,b	;volatile
  9099                           
  9100                           ; BSR set to: 0
  9101                           ;Main.c: 17:         checkBuff();
  9102  003B40  EC19  F014         	call	_checkBuff	;wreg free
  9103                           
  9104                           ; BSR set to: 0
  9105                           ;Main.c: 18:         if (BT_Buff == 5)
  9106  003B44  0E05               	movlw	5
  9107  003B46  1965               	xorwf	_BT_Buff& (0+255),w,b	;volatile
  9108  003B48  A4D8               	btfss	status,2,c
  9109  003B4A  D002               	goto	i2l5304
  9110                           
  9111                           ; BSR set to: 0
  9112                           ;Main.c: 19:         {;Main.c: 20:             BT_Buff = 0;
  9113  003B4C  0E00               	movlw	0
  9114  003B4E  6F65               	movwf	_BT_Buff& (0+255),b	;volatile
  9115  003B50                     i2l5304:
  9116                           
  9117                           ; BSR set to: 0
  9118                           ;Main.c: 22:         PIR1bits.RCIF = 0;
  9119  003B50  9A9E               	bcf	158,5,c	;volatile
  9120  003B52                     i2l83:
  9121  003B52  C002  FFDA         	movff	??_ISR+1,fsr2h
  9122  003B56  C001  FFD9         	movff	??_ISR,fsr2l
  9123  003B5A  925D               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  9124  003B5C  0011               	retfie		f
  9125  003B5E                     __end_of_ISR:
  9126                           	opt callstack 0
  9127                           
  9128 ;; *************** function _checkBuff *****************
  9129 ;; Defined at:
  9130 ;;		line 26 in file "Main.c"
  9131 ;; Parameters:    Size  Location     Type
  9132 ;;		None
  9133 ;; Auto vars:     Size  Location     Type
  9134 ;;		None
  9135 ;; Return value:  Size  Location     Type
  9136 ;;                  1    wreg      void 
  9137 ;; Registers used:
  9138 ;;		wreg, status,2, status,0
  9139 ;; Tracked objects:
  9140 ;;		On entry : 3F/0
  9141 ;;		On exit  : 3F/0
  9142 ;;		Unchanged: 0/0
  9143 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9144 ;;      Params:         0       0       0       0       0       0       0       0       0
  9145 ;;      Locals:         0       0       0       0       0       0       0       0       0
  9146 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9147 ;;      Totals:         0       0       0       0       0       0       0       0       0
  9148 ;;Total ram usage:        0 bytes
  9149 ;; Hardware stack levels used:    1
  9150 ;; This function calls:
  9151 ;;		Nothing
  9152 ;; This function is called by:
  9153 ;;		_ISR
  9154 ;; This function uses a non-reentrant model
  9155 ;;
  9156                           
  9157                           	psect	text37
  9158  002832                     __ptext37:
  9159                           	opt callstack 0
  9160  002832                     _checkBuff:
  9161                           	opt callstack 24
  9162                           
  9163                           ; BSR set to: 0
  9164                           ;Main.c: 27:     if(BT_RC[0] == 0x38 && BT_RC[4] == 0x30){
  9165                           
  9166                           ;incstack = 0
  9167  002832  0E38               	movlw	56
  9168  002834  1960               	xorwf	_BT_RC& (0+255),w,b	;volatile
  9169  002836  A4D8               	btfss	status,2,c
  9170  002838  D07F               	goto	i2l4166
  9171                           
  9172                           ; BSR set to: 0
  9173  00283A  0E30               	movlw	48
  9174  00283C  1964               	xorwf	(_BT_RC+4)& (0+255),w,b	;volatile
  9175  00283E  A4D8               	btfss	status,2,c
  9176  002840  D07B               	goto	i2l4166
  9177                           
  9178                           ; BSR set to: 0
  9179                           ;Main.c: 28:         if(BT_RC[1] == 0x42 && BT_RC[2] == 0x43 && BT_RC[3] == 0x44){
  9180  002842  0E42               	movlw	66
  9181  002844  1961               	xorwf	(_BT_RC+1)& (0+255),w,b	;volatile
  9182  002846  A4D8               	btfss	status,2,c
  9183  002848  D00A               	goto	i2l4102
  9184                           
  9185                           ; BSR set to: 0
  9186  00284A  0E43               	movlw	67
  9187  00284C  1962               	xorwf	(_BT_RC+2)& (0+255),w,b	;volatile
  9188  00284E  A4D8               	btfss	status,2,c
  9189  002850  D006               	goto	i2l4102
  9190                           
  9191                           ; BSR set to: 0
  9192  002852  0E44               	movlw	68
  9193  002854  1963               	xorwf	(_BT_RC+3)& (0+255),w,b	;volatile
  9194  002856  A4D8               	btfss	status,2,c
  9195  002858  D002               	goto	i2l4102
  9196                           
  9197                           ; BSR set to: 0
  9198                           ;Main.c: 29:             BT_Patron = 1;
  9199  00285A  0E01               	movlw	1
  9200  00285C  6E5B               	movwf	_BT_Patron^0,c	;volatile
  9201  00285E                     i2l4102:
  9202                           
  9203                           ; BSR set to: 0
  9204                           ;Main.c: 31:         if(BT_RC[1] == 0x45 && BT_RC[2] == 0x46 && BT_RC[3] == 0x47){
  9205  00285E  0E45               	movlw	69
  9206  002860  1961               	xorwf	(_BT_RC+1)& (0+255),w,b	;volatile
  9207  002862  A4D8               	btfss	status,2,c
  9208  002864  D00A               	goto	i2l4110
  9209                           
  9210                           ; BSR set to: 0
  9211  002866  0E46               	movlw	70
  9212  002868  1962               	xorwf	(_BT_RC+2)& (0+255),w,b	;volatile
  9213  00286A  A4D8               	btfss	status,2,c
  9214  00286C  D006               	goto	i2l4110
  9215                           
  9216                           ; BSR set to: 0
  9217  00286E  0E47               	movlw	71
  9218  002870  1963               	xorwf	(_BT_RC+3)& (0+255),w,b	;volatile
  9219  002872  A4D8               	btfss	status,2,c
  9220  002874  D002               	goto	i2l4110
  9221                           
  9222                           ; BSR set to: 0
  9223                           ;Main.c: 32:             BT_Patron = 2;
  9224  002876  0E02               	movlw	2
  9225  002878  6E5B               	movwf	_BT_Patron^0,c	;volatile
  9226  00287A                     i2l4110:
  9227                           
  9228                           ; BSR set to: 0
  9229                           ;Main.c: 34:         if(BT_RC[1] == 0x48 && BT_RC[2] == 0x49 && BT_RC[3] == 0x50){
  9230  00287A  0E48               	movlw	72
  9231  00287C  1961               	xorwf	(_BT_RC+1)& (0+255),w,b	;volatile
  9232  00287E  A4D8               	btfss	status,2,c
  9233  002880  D00A               	goto	i2l4118
  9234                           
  9235                           ; BSR set to: 0
  9236  002882  0E49               	movlw	73
  9237  002884  1962               	xorwf	(_BT_RC+2)& (0+255),w,b	;volatile
  9238  002886  A4D8               	btfss	status,2,c
  9239  002888  D006               	goto	i2l4118
  9240                           
  9241                           ; BSR set to: 0
  9242  00288A  0E50               	movlw	80
  9243  00288C  1963               	xorwf	(_BT_RC+3)& (0+255),w,b	;volatile
  9244  00288E  A4D8               	btfss	status,2,c
  9245  002890  D002               	goto	i2l4118
  9246                           
  9247                           ; BSR set to: 0
  9248                           ;Main.c: 35:             BT_Patron = 3;
  9249  002892  0E03               	movlw	3
  9250  002894  6E5B               	movwf	_BT_Patron^0,c	;volatile
  9251  002896                     i2l4118:
  9252                           
  9253                           ; BSR set to: 0
  9254                           ;Main.c: 37:         if(BT_RC[1] == 0x51 && BT_RC[2] == 0x52 && BT_RC[3] == 0x53){
  9255  002896  0E51               	movlw	81
  9256  002898  1961               	xorwf	(_BT_RC+1)& (0+255),w,b	;volatile
  9257  00289A  A4D8               	btfss	status,2,c
  9258  00289C  D00A               	goto	i2l4126
  9259                           
  9260                           ; BSR set to: 0
  9261  00289E  0E52               	movlw	82
  9262  0028A0  1962               	xorwf	(_BT_RC+2)& (0+255),w,b	;volatile
  9263  0028A2  A4D8               	btfss	status,2,c
  9264  0028A4  D006               	goto	i2l4126
  9265                           
  9266                           ; BSR set to: 0
  9267  0028A6  0E53               	movlw	83
  9268  0028A8  1963               	xorwf	(_BT_RC+3)& (0+255),w,b	;volatile
  9269  0028AA  A4D8               	btfss	status,2,c
  9270  0028AC  D002               	goto	i2l4126
  9271                           
  9272                           ; BSR set to: 0
  9273                           ;Main.c: 38:             BT_Patron = 4;
  9274  0028AE  0E04               	movlw	4
  9275  0028B0  6E5B               	movwf	_BT_Patron^0,c	;volatile
  9276  0028B2                     i2l4126:
  9277                           
  9278                           ; BSR set to: 0
  9279                           ;Main.c: 40:         if(BT_RC[1] == 0x54 && BT_RC[2] == 0x55 && BT_RC[3] == 0x56){
  9280  0028B2  0E54               	movlw	84
  9281  0028B4  1961               	xorwf	(_BT_RC+1)& (0+255),w,b	;volatile
  9282  0028B6  A4D8               	btfss	status,2,c
  9283  0028B8  D00A               	goto	i2l4134
  9284                           
  9285                           ; BSR set to: 0
  9286  0028BA  0E55               	movlw	85
  9287  0028BC  1962               	xorwf	(_BT_RC+2)& (0+255),w,b	;volatile
  9288  0028BE  A4D8               	btfss	status,2,c
  9289  0028C0  D006               	goto	i2l4134
  9290                           
  9291                           ; BSR set to: 0
  9292  0028C2  0E56               	movlw	86
  9293  0028C4  1963               	xorwf	(_BT_RC+3)& (0+255),w,b	;volatile
  9294  0028C6  A4D8               	btfss	status,2,c
  9295  0028C8  D002               	goto	i2l4134
  9296                           
  9297                           ; BSR set to: 0
  9298                           ;Main.c: 41:             BT_Patron = 5;
  9299  0028CA  0E05               	movlw	5
  9300  0028CC  6E5B               	movwf	_BT_Patron^0,c	;volatile
  9301  0028CE                     i2l4134:
  9302                           
  9303                           ; BSR set to: 0
  9304                           ;Main.c: 43:         if(BT_RC[1] == 0x57 && BT_RC[2] == 0x58 && BT_RC[3] == 0x59){
  9305  0028CE  0E57               	movlw	87
  9306  0028D0  1961               	xorwf	(_BT_RC+1)& (0+255),w,b	;volatile
  9307  0028D2  A4D8               	btfss	status,2,c
  9308  0028D4  D00A               	goto	i2l4142
  9309                           
  9310                           ; BSR set to: 0
  9311  0028D6  0E58               	movlw	88
  9312  0028D8  1962               	xorwf	(_BT_RC+2)& (0+255),w,b	;volatile
  9313  0028DA  A4D8               	btfss	status,2,c
  9314  0028DC  D006               	goto	i2l4142
  9315                           
  9316                           ; BSR set to: 0
  9317  0028DE  0E59               	movlw	89
  9318  0028E0  1963               	xorwf	(_BT_RC+3)& (0+255),w,b	;volatile
  9319  0028E2  A4D8               	btfss	status,2,c
  9320  0028E4  D002               	goto	i2l4142
  9321                           
  9322                           ; BSR set to: 0
  9323                           ;Main.c: 44:             BT_Patron = 6;
  9324  0028E6  0E06               	movlw	6
  9325  0028E8  6E5B               	movwf	_BT_Patron^0,c	;volatile
  9326  0028EA                     i2l4142:
  9327                           
  9328                           ; BSR set to: 0
  9329                           ;Main.c: 46:         if(BT_RC[1] == 0xFF && BT_RC[2] == 0xFF && BT_RC[3] == 0xFF){
  9330  0028EA  2961               	incf	(_BT_RC+1)& (0+255),w,b	;volatile
  9331  0028EC  A4D8               	btfss	status,2,c
  9332  0028EE  D008               	goto	i2l4150
  9333                           
  9334                           ; BSR set to: 0
  9335  0028F0  2962               	incf	(_BT_RC+2)& (0+255),w,b	;volatile
  9336  0028F2  A4D8               	btfss	status,2,c
  9337  0028F4  D005               	goto	i2l4150
  9338                           
  9339                           ; BSR set to: 0
  9340  0028F6  2963               	incf	(_BT_RC+3)& (0+255),w,b	;volatile
  9341  0028F8  A4D8               	btfss	status,2,c
  9342  0028FA  D002               	goto	i2l4150
  9343                           
  9344                           ; BSR set to: 0
  9345                           ;Main.c: 47:             BT_Patron = 7;
  9346  0028FC  0E07               	movlw	7
  9347  0028FE  6E5B               	movwf	_BT_Patron^0,c	;volatile
  9348  002900                     i2l4150:
  9349                           
  9350                           ; BSR set to: 0
  9351                           ;Main.c: 49:         if(BT_RC[1] == 0x60 && BT_RC[2] == 0x61 && BT_RC[3] == 0x62){
  9352  002900  0E60               	movlw	96
  9353  002902  1961               	xorwf	(_BT_RC+1)& (0+255),w,b	;volatile
  9354  002904  A4D8               	btfss	status,2,c
  9355  002906  D00A               	goto	i2l4158
  9356                           
  9357                           ; BSR set to: 0
  9358  002908  0E61               	movlw	97
  9359  00290A  1962               	xorwf	(_BT_RC+2)& (0+255),w,b	;volatile
  9360  00290C  A4D8               	btfss	status,2,c
  9361  00290E  D006               	goto	i2l4158
  9362                           
  9363                           ; BSR set to: 0
  9364  002910  0E62               	movlw	98
  9365  002912  1963               	xorwf	(_BT_RC+3)& (0+255),w,b	;volatile
  9366  002914  A4D8               	btfss	status,2,c
  9367  002916  D002               	goto	i2l4158
  9368                           
  9369                           ; BSR set to: 0
  9370                           ;Main.c: 50:             BT_Patron = 8;
  9371  002918  0E08               	movlw	8
  9372  00291A  6E5B               	movwf	_BT_Patron^0,c	;volatile
  9373  00291C                     i2l4158:
  9374                           
  9375                           ; BSR set to: 0
  9376                           ;Main.c: 52:         if(BT_RC[1] == 0x63 && BT_RC[2] == 0x64 && BT_RC[3] == 0x65){
  9377  00291C  0E63               	movlw	99
  9378  00291E  1961               	xorwf	(_BT_RC+1)& (0+255),w,b	;volatile
  9379  002920  A4D8               	btfss	status,2,c
  9380  002922  D00A               	goto	i2l4166
  9381                           
  9382                           ; BSR set to: 0
  9383  002924  0E64               	movlw	100
  9384  002926  1962               	xorwf	(_BT_RC+2)& (0+255),w,b	;volatile
  9385  002928  A4D8               	btfss	status,2,c
  9386  00292A  D006               	goto	i2l4166
  9387                           
  9388                           ; BSR set to: 0
  9389  00292C  0E65               	movlw	101
  9390  00292E  1963               	xorwf	(_BT_RC+3)& (0+255),w,b	;volatile
  9391  002930  A4D8               	btfss	status,2,c
  9392  002932  D002               	goto	i2l4166
  9393                           
  9394                           ; BSR set to: 0
  9395                           ;Main.c: 53:             BT_Patron = 9;
  9396  002934  0E09               	movlw	9
  9397  002936  6E5B               	movwf	_BT_Patron^0,c	;volatile
  9398  002938                     i2l4166:
  9399                           
  9400                           ; BSR set to: 0
  9401                           ;Main.c: 56:     if(BT_RC[0] == 0x40 && BT_RC[4] == 0x32){
  9402  002938  0E40               	movlw	64
  9403  00293A  1960               	xorwf	_BT_RC& (0+255),w,b	;volatile
  9404  00293C  A4D8               	btfss	status,2,c
  9405  00293E  D005               	goto	i2l4172
  9406                           
  9407                           ; BSR set to: 0
  9408  002940  0E32               	movlw	50
  9409  002942  1964               	xorwf	(_BT_RC+4)& (0+255),w,b	;volatile
  9410  002944  B4D8               	btfsc	status,2,c
  9411                           
  9412                           ; BSR set to: 0
  9413                           ;Main.c: 57:         BT_Tiempo = BT_RC[2];
  9414  002946  C062  F05A         	movff	_BT_RC+2,_BT_Tiempo	;volatile
  9415  00294A                     i2l4172:
  9416                           
  9417                           ; BSR set to: 0
  9418                           ;Main.c: 59:     if(BT_RC[0] == 0x39 && BT_RC[4] == 0x31){
  9419  00294A  0E39               	movlw	57
  9420  00294C  1960               	xorwf	_BT_RC& (0+255),w,b	;volatile
  9421  00294E  A4D8               	btfss	status,2,c
  9422  002950  D00A               	goto	i2l4178
  9423                           
  9424                           ; BSR set to: 0
  9425  002952  0E31               	movlw	49
  9426  002954  1964               	xorwf	(_BT_RC+4)& (0+255),w,b	;volatile
  9427  002956  A4D8               	btfss	status,2,c
  9428  002958  D006               	goto	i2l4178
  9429                           
  9430                           ; BSR set to: 0
  9431                           ;Main.c: 60:         BT_RGB[0] = BT_RC[1];
  9432  00295A  C061  F057         	movff	_BT_RC+1,_BT_RGB	;volatile
  9433                           
  9434                           ;Main.c: 61:         BT_RGB[1] = BT_RC[2];
  9435  00295E  C062  F058         	movff	_BT_RC+2,_BT_RGB+1	;volatile
  9436                           
  9437                           ;Main.c: 62:         BT_RGB[2] = BT_RC[3];
  9438  002962  C063  F059         	movff	_BT_RC+3,_BT_RGB+2	;volatile
  9439  002966                     i2l4178:
  9440                           
  9441                           ; BSR set to: 0
  9442                           ;Main.c: 64:     if(BT_RC[0] == 0x41 && BT_RC[4] == 0x42){
  9443  002966  0E41               	movlw	65
  9444  002968  1960               	xorwf	_BT_RC& (0+255),w,b	;volatile
  9445  00296A  A4D8               	btfss	status,2,c
  9446  00296C  0012               	return	
  9447                           
  9448                           ; BSR set to: 0
  9449  00296E  0E42               	movlw	66
  9450  002970  1964               	xorwf	(_BT_RC+4)& (0+255),w,b	;volatile
  9451  002972  A4D8               	btfss	status,2,c
  9452  002974  0012               	return	
  9453                           
  9454                           ; BSR set to: 0
  9455                           ;Main.c: 65:         if(BT_RC[1] == 0xAA && BT_RC[2] == 0xAA && BT_RC[3] == 0xAB){
  9456  002976  0EAA               	movlw	170
  9457  002978  1961               	xorwf	(_BT_RC+1)& (0+255),w,b	;volatile
  9458  00297A  A4D8               	btfss	status,2,c
  9459  00297C  D00A               	goto	i2l4190
  9460                           
  9461                           ; BSR set to: 0
  9462  00297E  0EAA               	movlw	170
  9463  002980  1962               	xorwf	(_BT_RC+2)& (0+255),w,b	;volatile
  9464  002982  A4D8               	btfss	status,2,c
  9465  002984  D006               	goto	i2l4190
  9466                           
  9467                           ; BSR set to: 0
  9468  002986  0EAB               	movlw	171
  9469  002988  1963               	xorwf	(_BT_RC+3)& (0+255),w,b	;volatile
  9470  00298A  A4D8               	btfss	status,2,c
  9471  00298C  D002               	goto	i2l4190
  9472                           
  9473                           ; BSR set to: 0
  9474                           ;Main.c: 66:             BT_rainbow = 1;
  9475  00298E  805C               	bsf	(_BT_rainbow/(0+8))^0,_BT_rainbow& (0+7),c	;volatile
  9476                           
  9477                           ;Main.c: 67:         }else if(BT_RC[1] == 0xAB && BT_RC[2] == 0xAA && BT_RC[3] == 0xAA){
  9478  002990  0012               	return	
  9479  002992                     i2l4190:
  9480                           
  9481                           ; BSR set to: 0
  9482  002992  0EAB               	movlw	171
  9483  002994  1961               	xorwf	(_BT_RC+1)& (0+255),w,b	;volatile
  9484  002996  A4D8               	btfss	status,2,c
  9485  002998  0012               	return	
  9486                           
  9487                           ; BSR set to: 0
  9488  00299A  0EAA               	movlw	170
  9489  00299C  1962               	xorwf	(_BT_RC+2)& (0+255),w,b	;volatile
  9490  00299E  A4D8               	btfss	status,2,c
  9491  0029A0  0012               	return	
  9492                           
  9493                           ; BSR set to: 0
  9494  0029A2  0EAA               	movlw	170
  9495  0029A4  1963               	xorwf	(_BT_RC+3)& (0+255),w,b	;volatile
  9496  0029A6  A4D8               	btfss	status,2,c
  9497  0029A8  0012               	return	
  9498                           
  9499                           ; BSR set to: 0
  9500                           ;Main.c: 68:             BT_rainbow = 0;
  9501  0029AA  905C               	bcf	(_BT_rainbow/(0+8))^0,_BT_rainbow& (0+7),c	;volatile
  9502                           
  9503                           ; BSR set to: 0
  9504  0029AC  0012               	return		;funcret
  9505  0029AE                     __end_of_checkBuff:
  9506                           	opt callstack 0
  9507                           
  9508                           	psect	rparam
  9509  0000                     
  9510                           	psect	temp
  9511  00005D                     btemp:
  9512                           	opt callstack 0
  9513  00005D                     	ds	1
  9514  0000                     int$flags	set	btemp
  9515  0000                     wtemp8	set	btemp+1
  9516  0000                     ttemp5	set	btemp+1
  9517  0000                     ttemp6	set	btemp+4
  9518  0000                     ttemp7	set	btemp+8
  9519                           tosu	equ	0xFFF
  9520                           tosh	equ	0xFFE
  9521                           tosl	equ	0xFFD
  9522                           stkptr	equ	0xFFC
  9523                           pclatu	equ	0xFFB
  9524                           pclath	equ	0xFFA
  9525                           pcl	equ	0xFF9
  9526                           tblptru	equ	0xFF8
  9527                           tblptrh	equ	0xFF7
  9528                           tblptrl	equ	0xFF6
  9529                           tablat	equ	0xFF5
  9530                           prodh	equ	0xFF4
  9531                           prodl	equ	0xFF3
  9532                           indf0	equ	0xFEF
  9533                           postinc0	equ	0xFEE
  9534                           postdec0	equ	0xFED
  9535                           preinc0	equ	0xFEC
  9536                           plusw0	equ	0xFEB
  9537                           fsr0h	equ	0xFEA
  9538                           fsr0l	equ	0xFE9
  9539                           wreg	equ	0xFE8
  9540                           indf1	equ	0xFE7
  9541                           postinc1	equ	0xFE6
  9542                           postdec1	equ	0xFE5
  9543                           preinc1	equ	0xFE4
  9544                           plusw1	equ	0xFE3
  9545                           fsr1h	equ	0xFE2
  9546                           fsr1l	equ	0xFE1
  9547                           bsr	equ	0xFE0
  9548                           indf2	equ	0xFDF
  9549                           postinc2	equ	0xFDE
  9550                           postdec2	equ	0xFDD
  9551                           preinc2	equ	0xFDC
  9552                           plusw2	equ	0xFDB
  9553                           fsr2h	equ	0xFDA
  9554                           fsr2l	equ	0xFD9
  9555                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    8
    Data        0
    BSS         1277
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     86      92
    BANK0           160      2      14
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    setPixel@ptr	PTR int  size(2) Largest target is 1260
		 -> NumofBytes(BIGRAM[1260]), 

    Show@ptrInicial	PTR int  size(2) Largest target is 1260
		 -> NumofBytes(BIGRAM[1260]), 

    RunningLightsRainbow@c	PTR unsigned char  size(1) Largest target is 3
		 -> Wheel@c(BANK0[3]), 

    SetAllcolors@c	PTR unsigned char  size(1) Largest target is 3
		 -> Wheel@c(BANK0[3]), 

    FadeAllcolors@c	PTR unsigned char  size(1) Largest target is 3
		 -> Wheel@c(BANK0[3]), 

    strobeallColors@c	PTR unsigned char  size(1) Largest target is 3
		 -> Wheel@c(BANK0[3]), 

    sp__staticWheel	PTR unsigned char  size(1) Largest target is 3
		 -> staticWheel@temp(COMRAM[3]), 

    SetAllColor@newBT	PTR unsigned char  size(1) Largest target is 3
		 -> staticWheel@temp(COMRAM[3]), 

    rainbowCycle@c	PTR unsigned char  size(1) Largest target is 3
		 -> Wheel@c(BANK0[3]), 

    CycloneBounceRainbow@c	PTR unsigned char  size(1) Largest target is 3
		 -> Wheel@c(BANK0[3]), 

    theaterChaseRainbow@c	PTR unsigned char  size(1) Largest target is 3
		 -> Wheel@c(BANK0[3]), 

    fadeInOutRainbow@c	PTR unsigned char  size(1) Largest target is 3
		 -> Wheel@c(BANK0[3]), 

    sp__Wheel	PTR unsigned char  size(1) Largest target is 3
		 -> Wheel@c(BANK0[3]), 

    colorWipeRainbow@c	PTR unsigned char  size(1) Largest target is 3
		 -> Wheel@c(BANK0[3]), 


Critical Paths under _main in COMRAM

    _main->_FadeAllcolors
    _turnOff->_setAll
    _theaterChaseRainbow->_setPixel
    _theaterChase->_setPixel
    _strobeallColors->_setAll
    _rainbowCycle->_setPixel
    _initiateLeds->_RGBLoop
    _RGBLoop->_setAll
    _fadeInOutRainbow->___flmul
    _colorWipeRainbow->_setPixel
    _colorWipe->_setPixel
    _Strobe->_setAll
    _SetAllcolors->_setAll
    _SetAllColor->_setAll
    _RunningLightsRainbow->_setPixel
    _RunningLights->_setPixel
    _FadeInOut->___flmul
    _FadeAllcolors->___flmul
    ___flmul->___fldiv
    ___fldiv->___xxtofl
    _CylonBounce->_setAll
    _CycloneBounceRainbow->_setAll
    _setAll->_setPixel
    _setPixel->___fltol
    ___awdiv->___wmul
    _Wheel->___awdiv

Critical Paths under _ISR in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _ISR in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0  585983
                                              0 BANK0      2     2      0
                         _Config4550
               _CycloneBounceRainbow
                        _CylonBounce
                           _Delay_ms
                      _FadeAllcolors
                          _FadeInOut
                      _RunningLights
               _RunningLightsRainbow
                        _SetAllColor
                       _SetAllcolors
                             _Strobe
                          _colorWipe
                   _colorWipeRainbow
                   _fadeInOutRainbow
                       _initiateLeds
                       _rainbowCycle
                    _strobeallColors
                       _theaterChase
                _theaterChaseRainbow
                            _turnOff
 ---------------------------------------------------------------------------------
 (1) _turnOff                                              0     0      0   21560
                             _setAll
 ---------------------------------------------------------------------------------
 (1) _theaterChaseRainbow                                  9     9      0   25313
                                             21 COMRAM     9     9      0
                           _Delay_ms
                               _Show
                         _Time_Check
                              _Wheel
                            ___awmod
                           _setPixel
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              6     2      4     448
                                              2 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) _theaterChase                                         7     7      0   23265
                                             21 COMRAM     7     7      0
                           _Delay_ms
                               _Show
                         _Time_Check
                           _setPixel
 ---------------------------------------------------------------------------------
 (1) _strobeallColors                                      3     3      0   27967
                                             26 COMRAM     3     3      0
                           _Delay_ms
                               _Show
                         _Time_Check
                              _Wheel
                             _setAll
 ---------------------------------------------------------------------------------
 (1) _rainbowCycle                                         5     5      0   26662
                                             21 COMRAM     5     5      0
                           _Delay_ms
                               _Show
                         _Time_Check
                              _Wheel
                            ___awdiv
                             ___wmul
                           _setPixel
 ---------------------------------------------------------------------------------
 (1) _initiateLeds                                         0     0      0   26699
                            _RGBLoop
 ---------------------------------------------------------------------------------
 (2) _RGBLoop                                              7     7      0   26699
                                             26 COMRAM     7     7      0
                           _Delay_ms
                         _Time_Check
                             _setAll
 ---------------------------------------------------------------------------------
 (1) _fadeInOutRainbow                                    18    18      0   38313
                                             66 COMRAM    18    18      0
                           _Delay_ms
                               _Show
                              _Wheel
                            ___awdiv
                            ___fldiv
                            ___flmul
                            ___fltol
                           ___xxtofl
                           _setPixel
 ---------------------------------------------------------------------------------
 (1) _colorWipeRainbow                                    17    17      0   27094
                                             21 COMRAM    17    17      0
                           _Delay_ms
                               _Show
                         _Time_Check
                              _Wheel
                            ___awdiv
                           _setPixel
 ---------------------------------------------------------------------------------
 (1) _colorWipe                                           14    14      0   23539
                                             21 COMRAM    14    14      0
                           _Delay_ms
                               _Show
                         _Time_Check
                           _setPixel
 ---------------------------------------------------------------------------------
 (1) _Strobe                                               0     0      0   26499
                           _Delay_ms
                               _Show
                         _Time_Check
                             _setAll
 ---------------------------------------------------------------------------------
 (1) _SetAllcolors                                         7     7      0   46048
                                             26 COMRAM     7     7      0
                           _Delay_ms
                               _Show
                         _Time_Check
                              _Wheel
                             _setAll
                           _setPixel
 ---------------------------------------------------------------------------------
 (1) _SetAllColor                                         15    15      0   45947
                                             26 COMRAM    15    15      0
                           _Delay_ms
                               _Show
                         _Time_Check
                             _setAll
                           _setPixel
                        _staticWheel
 ---------------------------------------------------------------------------------
 (2) _staticWheel                                         10     8      2     868
                                              2 COMRAM    10     8      2
 ---------------------------------------------------------------------------------
 (1) _RunningLightsRainbow                                14    14      0   24734
                                             21 COMRAM    14    14      0
                           _Delay_ms
                               _Show
                         _Time_Check
                              _Wheel
                           _setPixel
 ---------------------------------------------------------------------------------
 (1) _RunningLights                                       12    12      0   23223
                                             21 COMRAM    12    12      0
                           _Delay_ms
                               _Show
                         _Time_Check
                           _setPixel
 ---------------------------------------------------------------------------------
 (1) _FadeInOut                                           16    16      0   39872
                                             66 COMRAM    16    16      0
                           _Delay_ms
                               _Show
                         _Time_Check
                            ___fldiv
                            ___flmul
                            ___fltol
                           ___xxtofl
                             _setAll
 ---------------------------------------------------------------------------------
 (1) _FadeAllcolors                                       20    20      0   41292
                                             66 COMRAM    20    20      0
                           _Delay_ms
                         _Time_Check
                              _Wheel
                            ___fldiv
                            ___flmul
                            ___fltol
                           ___xxtofl
                             _setAll
 ---------------------------------------------------------------------------------
 (2) ___xxtofl                                            14    10      4    3058
                                              2 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (2) ___fltol                                             10     6      4    1597
                                              2 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 (2) ___flmul                                             25    17      8    4329
                                             41 COMRAM    25    17      8
                            ___fldiv (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) ___fldiv                                             25    17      8    3983
                                             16 COMRAM    25    17      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (1) _CylonBounce                                         11     9      2   44837
                                             26 COMRAM    11     9      2
                           _Delay_ms
                               _Show
                         _Time_Check
                             _setAll
                           _setPixel
 ---------------------------------------------------------------------------------
 (1) _CycloneBounceRainbow                                14    12      2   49554
                                             26 COMRAM    14    12      2
                           _Delay_ms
                               _Show
                         _Time_Check
                              _Wheel
                            ___awdiv
                            ___lbdiv
                             _setAll
                           _setPixel
 ---------------------------------------------------------------------------------
 (2) _setAll                                               5     3      2   21560
                                             21 COMRAM     5     3      2
                               _Show
                            ___fltol (ARG)
                           _setPixel
 ---------------------------------------------------------------------------------
 (3) _setPixel                                             9     4      5   17968
                                             12 COMRAM     9     4      5
                            ___fltol (ARG)
                            ___lbdiv (ARG)
                             ___wmul
 ---------------------------------------------------------------------------------
 (4) ___wmul                                               6     2      4     463
                                              2 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (3) _Show                                                 5     5      0     114
                                              2 COMRAM     5     5      0
                        _Enviar_Bits
 ---------------------------------------------------------------------------------
 (4) _Enviar_Bits                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (2) ___lbdiv                                              4     3      1    1074
                                              2 COMRAM     4     3      1
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              8     4      4    1668
                                              8 COMRAM     8     4      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (2) _Wheel                                                2     0      2    1311
                                             16 COMRAM     2     0      2
                            ___awdiv (ARG)
                            ___awmod (ARG)
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (2) _Time_Check                                           5     3      2    1260
                                              2 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (2) _Delay_ms                                             5     3      2    3565
                                              2 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (1) _Config4550                                           0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _ISR                                                  2     2      0       0
                                              0 COMRAM     2     2      0
                          _checkBuff
 ---------------------------------------------------------------------------------
 (7) _checkBuff                                            0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Config4550
   _CycloneBounceRainbow
     _Delay_ms
     _Show
       _Enviar_Bits
     _Time_Check
     _Wheel
       ___awdiv (ARG)
         ___wmul (ARG)
       ___awmod (ARG)
       ___wmul (ARG)
     ___awdiv
       ___wmul (ARG)
     ___lbdiv
     _setAll
       _Show
         _Enviar_Bits
       ___fltol (ARG)
       _setPixel (ARG)
         ___fltol (ARG)
         ___lbdiv (ARG)
         ___wmul (ARG)
     _setPixel
       ___fltol (ARG)
       ___lbdiv (ARG)
       ___wmul (ARG)
   _CylonBounce
     _Delay_ms
     _Show
       _Enviar_Bits
     _Time_Check
     _setAll
       _Show
         _Enviar_Bits
       ___fltol (ARG)
       _setPixel (ARG)
         ___fltol (ARG)
         ___lbdiv (ARG)
         ___wmul (ARG)
     _setPixel
       ___fltol (ARG)
       ___lbdiv (ARG)
       ___wmul (ARG)
   _Delay_ms
   _FadeAllcolors
     _Delay_ms
     _Time_Check
     _Wheel
       ___awdiv (ARG)
         ___wmul (ARG)
       ___awmod (ARG)
       ___wmul (ARG)
     ___fldiv
       ___xxtofl (ARG)
     ___flmul
       ___fldiv (ARG)
         ___xxtofl (ARG)
       ___xxtofl (ARG)
     ___fltol
     ___xxtofl
     _setAll
       _Show
         _Enviar_Bits
       ___fltol (ARG)
       _setPixel (ARG)
         ___fltol (ARG)
         ___lbdiv (ARG)
         ___wmul (ARG)
   _FadeInOut
     _Delay_ms
     _Show
       _Enviar_Bits
     _Time_Check
     ___fldiv
       ___xxtofl (ARG)
     ___flmul
       ___fldiv (ARG)
         ___xxtofl (ARG)
       ___xxtofl (ARG)
     ___fltol
     ___xxtofl
     _setAll
       _Show
         _Enviar_Bits
       ___fltol (ARG)
       _setPixel (ARG)
         ___fltol (ARG)
         ___lbdiv (ARG)
         ___wmul (ARG)
   _RunningLights
     _Delay_ms
     _Show
       _Enviar_Bits
     _Time_Check
     _setPixel
       ___fltol (ARG)
       ___lbdiv (ARG)
       ___wmul (ARG)
   _RunningLightsRainbow
     _Delay_ms
     _Show
       _Enviar_Bits
     _Time_Check
     _Wheel
       ___awdiv (ARG)
         ___wmul (ARG)
       ___awmod (ARG)
       ___wmul (ARG)
     _setPixel
       ___fltol (ARG)
       ___lbdiv (ARG)
       ___wmul (ARG)
   _SetAllColor
     _Delay_ms
     _Show
       _Enviar_Bits
     _Time_Check
     _setAll
       _Show
         _Enviar_Bits
       ___fltol (ARG)
       _setPixel (ARG)
         ___fltol (ARG)
         ___lbdiv (ARG)
         ___wmul (ARG)
     _setPixel
       ___fltol (ARG)
       ___lbdiv (ARG)
       ___wmul (ARG)
     _staticWheel
   _SetAllcolors
     _Delay_ms
     _Show
       _Enviar_Bits
     _Time_Check
     _Wheel
       ___awdiv (ARG)
         ___wmul (ARG)
       ___awmod (ARG)
       ___wmul (ARG)
     _setAll
       _Show
         _Enviar_Bits
       ___fltol (ARG)
       _setPixel (ARG)
         ___fltol (ARG)
         ___lbdiv (ARG)
         ___wmul (ARG)
     _setPixel
       ___fltol (ARG)
       ___lbdiv (ARG)
       ___wmul (ARG)
   _Strobe
     _Delay_ms
     _Show
       _Enviar_Bits
     _Time_Check
     _setAll
       _Show
         _Enviar_Bits
       ___fltol (ARG)
       _setPixel (ARG)
         ___fltol (ARG)
         ___lbdiv (ARG)
         ___wmul (ARG)
   _colorWipe
     _Delay_ms
     _Show
       _Enviar_Bits
     _Time_Check
     _setPixel
       ___fltol (ARG)
       ___lbdiv (ARG)
       ___wmul (ARG)
   _colorWipeRainbow
     _Delay_ms
     _Show
       _Enviar_Bits
     _Time_Check
     _Wheel
       ___awdiv (ARG)
         ___wmul (ARG)
       ___awmod (ARG)
       ___wmul (ARG)
     ___awdiv
       ___wmul (ARG)
     _setPixel
       ___fltol (ARG)
       ___lbdiv (ARG)
       ___wmul (ARG)
   _fadeInOutRainbow
     _Delay_ms
     _Show
       _Enviar_Bits
     _Wheel
       ___awdiv (ARG)
         ___wmul (ARG)
       ___awmod (ARG)
       ___wmul (ARG)
     ___awdiv
       ___wmul (ARG)
     ___fldiv
       ___xxtofl (ARG)
     ___flmul
       ___fldiv (ARG)
         ___xxtofl (ARG)
       ___xxtofl (ARG)
     ___fltol
     ___xxtofl
     _setPixel
       ___fltol (ARG)
       ___lbdiv (ARG)
       ___wmul (ARG)
   _initiateLeds
     _RGBLoop
       _Delay_ms
       _Time_Check
       _setAll
         _Show
           _Enviar_Bits
         ___fltol (ARG)
         _setPixel (ARG)
           ___fltol (ARG)
           ___lbdiv (ARG)
           ___wmul (ARG)
   _rainbowCycle
     _Delay_ms
     _Show
       _Enviar_Bits
     _Time_Check
     _Wheel
       ___awdiv (ARG)
         ___wmul (ARG)
       ___awmod (ARG)
       ___wmul (ARG)
     ___awdiv
       ___wmul (ARG)
     ___wmul
     _setPixel
       ___fltol (ARG)
       ___lbdiv (ARG)
       ___wmul (ARG)
   _strobeallColors
     _Delay_ms
     _Show
       _Enviar_Bits
     _Time_Check
     _Wheel
       ___awdiv (ARG)
         ___wmul (ARG)
       ___awmod (ARG)
       ___wmul (ARG)
     _setAll
       _Show
         _Enviar_Bits
       ___fltol (ARG)
       _setPixel (ARG)
         ___fltol (ARG)
         ___lbdiv (ARG)
         ___wmul (ARG)
   _theaterChase
     _Delay_ms
     _Show
       _Enviar_Bits
     _Time_Check
     _setPixel
       ___fltol (ARG)
       ___lbdiv (ARG)
       ___wmul (ARG)
   _theaterChaseRainbow
     _Delay_ms
     _Show
       _Enviar_Bits
     _Time_Check
     _Wheel
       ___awdiv (ARG)
         ___wmul (ARG)
       ___awmod (ARG)
       ___wmul (ARG)
     ___awmod
     _setPixel
       ___fltol (ARG)
       ___lbdiv (ARG)
       ___wmul (ARG)
   _turnOff
     _setAll
       _Show
         _Enviar_Bits
       ___fltol (ARG)
       _setPixel (ARG)
         ___fltol (ARG)
         ___lbdiv (ARG)
         ___wmul (ARG)

 _ISR (ROOT)
   _checkBuff

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0     4EC      21       61.6%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      2       E       5        8.8%
BITCOMRAM           5E      0       1       0        1.1%
COMRAM              5E     56      5C       1       97.9%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      6A      20        0.0%
DATA                 0      0     556       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Fri Apr 17 22:31:27 2020

                 ___fldiv@aexp 0029                   ___fldiv@bexp 0028                   ___fldiv@sign 0021  
       ??_CycloneBounceRainbow 001D                   ___awdiv@sign 000E                    __CFG_BOR$ON 000000  
                  _staticWheel 3002            ___wmul@multiplicand 0005                    __CFG_BORV$2 000000  
                 __CFG_CP0$OFF 000000                   __CFG_CP1$OFF 000000                   __CFG_CP2$OFF 000000  
                 __CFG_CP3$OFF 000000                            l122 336C                            l131 33AC  
                          l115 334C                            l125 337C                            l135 33C2  
                          l119 335C                            l128 339C                            l138 33D2  
                          l445 3102                            l544 3AB2                            l545 3AD0  
                          l676 3908                   __CFG_CPB$OFF 000000                   __CFG_CPD$OFF 000000  
                          _ISR 0008             RunningLights@i_336 0020                   ___awmod@sign 0008  
                          wreg 000FE8                   __CFG_IESO$ON 000000                   ___flmul@aexp 0037  
                 ___flmul@bexp 003C                   ___flmul@sign 0036                   ___flmul@temp 0041  
                 ___flmul@prod 003D                   __CFG_LVP$OFF 000000                           ?_ISR 0001  
                 ___fltol@exp1 000C                   __CFG_WDT$OFF 000000                           l1310 1BFA  
                         l1302 1B74                           l1303 1B70                           l1341 2D28  
                         l1334 2CAA                           l1263 2326                           l4000 3724  
                         l1274 2394                           l1275 2390                           l1293 1982  
                         l4014 3754                           l4006 372C                           l4024 3BAA  
                         l4040 3BCE                           l4008 3738                           l4050 2CBA  
                         l5002 25A2                           l4036 3BC6                           l4028 3BB0  
                         l4060 2CEA                           l5020 261A                           l3414 3AF0  
                         l4070 2D5A                           l4062 2D10                           l5006 25DA  
                         l4056 2CD8                           l3600 308A                           l5032 2642  
                         l4320 1774                           l4232 1534                           l3426 3ABC  
                         l4058 2CDE                           l5114 0834                           l5106 081E  
                         l5202 2B52                           l4410 1F5C                           l4226 1530  
                         l3450 2DD6                           l3442 2DBC                           l4068 2D4E  
                         l3612 30DA                           l4340 17E0                           l3452 2DE6  
                         l3526 3472                           l3518 344C                           l3702 22FE  
                         l4086 2D9A                           l5134 0A5A                           l3606 30B2  
                         l4510 20F6                           l4430 1F9A                           l4254 15B2  
                         l3528 3476                           l3392 398A                           l3720 235A  
                         l5208 2B5A                           l5240 2C42                           l5160 351E  
                         l4360 189C                           l3480 2E74                           l3464 2E30  
                         l3448 2DC6                           l3456 2DF6                           l3538 349E  
                         l3714 233C                           l3642 21E4                           l4530 2158  
                         l4450 1FDC                           l3458 2E18                           l5058 377A  
                         l3556 34EA                           l3548 34C6                           l3740 23D8  
                         l3708 2324                           l3804 19A0                           l5252 35FA  
                         l5228 2BE0                           l4276 164C                           l3492 2EBE  
                         l3476 2E54                           l3484 2E84                           l3558 34F0  
                         l3566 3506                           l3902 3818                           l3670 2258  
                         l3662 2224                           l3638 21E0                           l4470 201E  
                         l4390 1F22                           l4550 0C9C                           l3478 2E64  
                         l3486 2EA6                           l4710 27B4                           l3744 23FC  
                         l3576 300A                           l5168 354E                           l4296 16AE  
                         l5440 33A6                           l5432 3376                           l5424 3356  
                         l3914 383E                           l3930 3870                           l3754 2432  
                         l3658 2220                           l4626 111C                           l5258 3602  
                         l5290 3690                           l3594 3062                           l4490 208A  
                         l4378 18F8                           l5450 33CC                           l3916 3846  
                         l3908 3828                           l3756 2434                           l3748 2426  
                         l3684 2286                           l3676 226E                           l3852 1B3A  
                         l3780 1942                           l3588 303A                           l4556 0CA0  
                         l5444 33B6                           l5436 338E                           l5428 3366  
                         l5460 33E0                           l3934 387E                           l3926 3866  
                         l4814 1DC0                           l3694 22D6                           l3846 1B1C  
                         l5278 3656                           l5198 2B3A                           l4910 3244  
                         l4742 2EFE                           l3950 392A                           l5454 33DC  
                         l5446 33BC                           l4824 1E3A                           l4808 1D82  
                         l3872 1BB8                           l3776 192E                           l4648 1320  
                         l4592 0ED6                           l4736 2EF6                           l4672 269C  
                         l3794 196E                           l3778 1932                           l4586 0ED2  
                         l3970 3970                           l3962 3958                           l3954 3938  
                         l3946 391E                           l4828 1E70                           l4844 1F02  
                         l4860 315C                           l4852 312C                           l3876 1BD6  
                         l3796 1972                           l3980 36CA                           l4916 324C  
                         l4764 2F98                           l3956 3940                           l4684 26A8  
                         l4790 1CBC                           l4782 1C42                           l3966 3962  
                         l4678 26A0                           l4784 1C48                           l4856 3140  
                         l4872 3192                           l3888 1C18                           l4794 1CF2  
                         l4884 31DC                           l4876 31C2                           l3996 3714  
                         l4972 24F0                           l4948 2460                           l4974 2508  
                         l4966 24A2                           l4888 31F8                           l4988 2548  
                         l4998 2574                           u3010 2E4C                           u3100 3032  
                         u3030 2EDC                           u3050 343A                           u3210 3116  
                         u3060 345C                           u3070 3486                           u3080 34AE  
                ??_Enviar_Bits 0001                           u3090 34D6                           u3420 23E6  
                         u3430 240A                           u3600 1BC6                           u3520 198E  
                         u3610 1BE4                           u3380 238A                           u4500 17D8  
                         u3560 1B6A                           u3800 373E                           u3720 3944  
                         u3660 384A                           u2940 3898                           u5420 262E  
                         u5260 3306                           u3830 3BB4                           u2950 39D8  
                         u3750 36B8                           u3910 2D64                           u4470 176C  
                         u2960 3B1C                           u3760 36E8                           u5520 0A54  
                         u5600 35DE                           u4720 2082                           u5610 2BBE  
                         u5450 268A                           u5370 255C                           u5290 3334  
                         u3765 36DE                           u5550 0C7A                           u4750 20EE  
                         u5551 0C78                           u5560 0C96                           u4920 131A  
                         u5640 2C32                           u5570 35B0                           u4951 151E  
                         u5680 2C6A                           i2l83 3B52                           u5947 3C2C  
                         u5957 39DE                           u5967 3AC2                __end_of_RGBLoop 2EE6  
                 __CFG_PWRT$ON 000000                           _Show 397A                           _main 3336  
                _RunningLights 35E0               staticWheel@i_313 000B                           fsr1h 000FE2  
                         fsr2h 000FDA                           indf1 000FE7                           indf2 000FDF  
                         fsr1l 000FE1                           fsr2l 000FD9                           btemp 005D  
                         prodh 000FF4                           prodl 000FF3                           start 000E  
               Show@ptrInicial 0006                ___fldiv@new_exp 0022         __size_of_FadeAllcolors 048E  
                 ___param_bank 000000                          ??_ISR 0001                  ??_CylonBounce 001D  
                __CFG_PLLDIV$2 000000                __end_of_bOffset 0803                     _Config4550 3A46  
                        ?_Show 0001                  ___fltol@sign1 000B                          ?_main 0001  
              __end_of___fldiv 243C                __end_of_gOffset 0805                __end_of___awdiv 3888  
              __end_of___lbdiv 3BD2                __end_of___awmod 397A                __end_of___flmul 1C2E  
     __end_of_colorWipeRainbow 1902                __end_of___fltol 3766                ___awdiv@divisor 000B  
                        _T1CON 000FCD                          _BT_RC 0060                ___awdiv@counter 000D  
                        _RCREG 000FAE                          _RCSTA 000FAB                          _TMR1H 000FCF  
                        _TMR1L 000FCE                          _SPBRG 000FAF                          _PORTA 000F80  
                        _PORTB 000F81                          _PORTC 000F82                          _PORTD 000F83  
                        _PORTE 000F84                  __CFG_USBDIV$1 000000                          _TRISA 000F92  
                        _TRISB 000F93                          _TRISC 000F94                          _TRISD 000F95  
                        _TRISE 000F96                          _TXSTA 000FAC                  __CFG_WRT0$OFF 000000  
                __CFG_WRT1$OFF 000000                  __CFG_WRT2$OFF 000000                          _ByteB 0066  
                __CFG_WRT3$OFF 000000                          _ByteG 0067                          _ByteR 0068  
              __end_of_rOffset 0807                 __CFG_EBTR0$OFF 000000                 __CFG_FCMEN$OFF 000000  
               __CFG_EBTR1$OFF 000000                          Show@i 0004                 __CFG_EBTR2$OFF 000000  
               __CFG_EBTR3$OFF 000000                          _Wheel 342A                  __CFG_WRTB$OFF 000000  
                __CFG_WRTC$OFF 000000                  __CFG_WRTD$OFF 000000                 __CFG_EBTRB$OFF 000000  
               __pbitbssCOMRAM 02E0                 ?_RunningLights 0001                          ttemp5 005E  
                        ttemp6 0061                          ttemp7 0065                          status 000FD8  
                ??_SetAllColor 001B                          wtemp8 005E                __end_of_turnOff 3C34  
              ___lbdiv@divisor 0003                 __CFG_ICPRT$OFF 000000                ___lbdiv@counter 0005  
             __end_of_Delay_ms 3AE6             __size_of_FadeInOut 0418                 __CFG_MCLRE$OFF 000000  
              __initialization 3B5E                   __end_of_Show 39EA                   __end_of_main 342A  
         RunningLights@pixelOn 001B                         ??_Show 0003                         ??_main 006C  
              _strobeallColors 3766                  __activetblptr 000002            __end_of_CylonBounce 3230  
                rainbowCycle@c 001A                  rainbowCycle@i 0018                  rainbowCycle@j 0016  
           FadeAllcolors@k_325 0054                  _FadeAllcolors 080A                __CFG_CCP2MX$OFF 000000  
                       ?_Wheel 0011                      ??_RGBLoop 001B           theaterChaseRainbow@c 001E  
         theaterChaseRainbow@i 001B           theaterChaseRainbow@j 0018           theaterChaseRainbow@q 001D  
             ___awdiv@dividend 0009             SetAllColor@counter 001F                         i2l4110 287A  
                       i2l4102 285E                         i2l4150 2900                         i2l4142 28EA  
                       i2l4134 28CE                         i2l4126 28B2                         i2l4118 2896  
                       i2l4172 294A                         i2l4190 2992                         i2l4158 291C  
                       i2l4166 2938                         i2l5304 3B50                         i2l4178 2966  
                       _BT_RGB 0057                         _SPBRGH 000FB0               __end_of___xxtofl 2DAC  
                 staticWheel@i 0006                  ?_SetAllcolors 0001                         _NeoNum 0807  
                   _Time_Check 3BF8                  ?_initiateLeds 0001                 __CFG_XINST$OFF 000000  
               FadeAllcolors@b 004C                 FadeAllcolors@c 0056                 FadeAllcolors@g 0048  
               FadeAllcolors@j 0050                 FadeAllcolors@k 0052                 FadeAllcolors@r 0044  
                       Wheel@c 0069                         _Strobe 39EA            __end_of_SetAllColor 268C  
                       ___wmul 3BD2                      ??___fldiv 0019                      ??___awdiv 000D  
                    ??___lbdiv 0004                 __CFG_STVREN$ON 000000                      ??___awmod 0007  
                    ??___flmul 0032                      ??___fltol 0007                     _NumofBytes 006E  
                       clear_0 3B66                         clear_1 3B78                         _setAll 3AE6  
             ___awdiv@quotient 000F                ___awmod@divisor 0005                    ?_Config4550 0001  
              ___awmod@counter 0007      CycloneBounceRainbow@i_296 0027      CycloneBounceRainbow@j_295 0022  
    CycloneBounceRainbow@j_297 0023               __end_of_setPixel 390A                 ?_FadeAllcolors 0001  
                 __mediumconst 0000              __end_of_FadeInOut 1520                         tblptru 000FF8  
               FadeInOut@k_264 0051                   CylonBounce@i 0022                   CylonBounce@j 0023  
                    ??_turnOff 001B                ??_RunningLights 0016               ___lbdiv@dividend 0004  
                 ___xxtofl@arg 000D                    _Enviar_Bits 29AE                   ___xxtofl@exp 000C  
                 ___xxtofl@val 0003                     __accesstop 0060        __end_of__initialization 3B8A  
              __CFG_PBADEN$OFF 000000                  ?_rainbowCycle 0001              theaterChase@i_277 001A  
               ??_SetAllcolors 001B                  ___rparam_used 000001                     ___fltol@f1 0003  
               ??_initiateLeds 0022              ?_fadeInOutRainbow 0001                 __pcstackCOMRAM 0001  
      __end_of_strobeallColors 3804                  __end_of_Wheel 350A             ??_fadeInOutRainbow 0043  
           __size_of_checkBuff 017C                    _CylonBounce 311A                   ?_staticWheel 0003  
             ___lbdiv@quotient 0006                    setAll@Green 0016                      ?_Delay_ms 0003  
                      ??_Wheel 0013             __size_of_colorWipe 02A2             CylonBounce@EyeSize 001B  
                   __pbssBANK0 0060    __end_of_theaterChaseRainbow 2832                 ??_rainbowCycle 0016  
          __size_of_Config4550 005C                    _SetAllColor 243C                    ?_Time_Check 0003  
__size_of_RunningLightsRainbow 014E          RunningLightsRainbow@c 0023          RunningLightsRainbow@i 001B  
        RunningLightsRainbow@q 001D                        ?_Strobe 0001                        ?___wmul 0003  
                      _BAUDCON 000FB8                        ?_setAll 0016  __size_of_CycloneBounceRainbow 02E4  
              ??_FadeAllcolors 0043              ?_colorWipeRainbow 0001                      ?___xxtofl 0003  
            fadeInOutRainbow@b 004C              fadeInOutRainbow@c 0052              fadeInOutRainbow@g 0048  
            fadeInOutRainbow@i 0050              fadeInOutRainbow@j 0053              fadeInOutRainbow@r 0044  
                      _BT_Buff 0065                     ??_Delay_ms 0005             ??_colorWipeRainbow 0016  
                      _RGBLoop 2DAC              __end_of_checkBuff 29AE                  ?_theaterChase 0001  
                  setPixel@red 000F                    setPixel@ptr 0014                __CFG_VREGEN$OFF 000000  
                      __Hparam 0000                SetAllColor@flag 0023                      ?_setPixel 000D  
                      __Lparam 0000                        _bOffset 0801               ?_strobeallColors 0001  
              __size_of_Strobe 005C                        ___fldiv 21B4                        _gOffset 0803  
                      ___awdiv 3804                        ___lbdiv 3B98              __end_of_colorWipe 21B4  
                      ___awmod 390A                        ___flmul 1902                        ___fltol 36AC  
              __size_of___wmul 0026                   __psmallconst 0800          CycloneBounceRainbow@c 0028  
        CycloneBounceRainbow@i 0026          CycloneBounceRainbow@j 0024                        __pcinit 3B5E  
                      __ramtop 0800                __size_of_setAll 003C                        _rOffset 0805  
                      __ptext0 3336                        __ptext1 3C18                        __ptext2 268C  
                      __ptext3 390A                        __ptext4 2EE6                        __ptext5 3766  
                      __ptext6 3230                        __ptext7 3C34                        __ptext8 2DAC  
                      __ptext9 0C98                   __size_of_ISR 3B56                   SetAllColor@i 001D  
         __end_of_SetAllcolors 35E0                     ??___xxtofl 0007               ___awmod@dividend 0003  
         __end_of_initiateLeds 3C4E            __size_of_Time_Check 0020                 ??_theaterChase 0016  
                      _turnOff 3C18                 __pintcode_body 3B22           end_of_initialization 3B8A  
                    Delay_ms@l 0006                 colorWipe@i_242 001B                 colorWipe@i_243 0016  
               colorWipe@i_244 0018                 colorWipe@i_245 001C                 colorWipe@i_246 001E  
               colorWipe@i_247 0020                 colorWipe@i_248 0022                  __Lmediumconst 0000  
                      int_func 3B22                        setAll@i 0019                      _BT_Patron 005B  
                    _BT_Tiempo 005A                     ??_setPixel 0012    CycloneBounceRainbow@EyeSize 001B  
                      postdec1 000FE5                        postdec2 000FDD                        postinc0 000FEE  
                      postinc2 000FDE                   ??_Config4550 0003           __end_of_rainbowCycle 3336  
         __size_of_staticWheel 0118                  ___xxtofl@sign 000B                      _TRISCbits 000F94  
                  ___fldiv@grs 0024                    ___fldiv@rem 001D                  setPixel@green 0010  
                    _FadeInOut 1108                   ?_Enviar_Bits 0001                    ___flmul@grs 0038  
           __end_of_Config4550 3AA2                     colorWipe@i 001A                staticWheel@temp 0008  
               __end_of_NeoNum 0809                  Wheel@WheelPos 0011                   ?_CylonBounce 001B  
               __end_of_Strobe 3A46                 __end_of___wmul 3BF8                 __end_of_setAll 3B22  
    __size_of_fadeInOutRainbow 0470            start_initialization 3B5E                    __end_of_ISR 3B5E  
            __size_of_Delay_ms 0044                     ?_FadeInOut 0001          __end_of_RunningLights 36AC  
                 ?_SetAllColor 0001                   ??_Time_Check 0005                       ??_Strobe 001B  
                     ??___wmul 0007           __end_of_theaterChase 3002                   Delay_ms@time 0003  
             __CFG_LPT1OSC$OFF 000000          __size_of_SetAllcolors 00D6                       ??_setAll 0018  
        __size_of_initiateLeds 001A                   RGBLoop@k_239 0020                      ___fldiv@a 0015  
                    ___fldiv@b 0011                    __pbssBIGRAM 006E   __end_of_RunningLightsRainbow 2C6C  
                    ___flmul@a 002E                      ___flmul@b 002A                    __pbssCOMRAM 0057  
                __pcstackBANK0 006C                       ?_RGBLoop 0001             __end_of_Time_Check 3C18  
            __size_of___xxtofl 0140                     setAll@Blue 0017                  theaterChase@i 0018  
                theaterChase@q 001C   __end_of_CycloneBounceRainbow 1F12                      _checkBuff 2832  
    __size_of_colorWipeRainbow 03E2                   _SetAllcolors 350A                       RGBLoop@j 001D  
                     RGBLoop@k 001E                   _initiateLeds 3C34   __size_of_theaterChaseRainbow 01A6  
                    __pintcode 0008              __size_of_setPixel 0082                       ?___fldiv 0011  
                     ?___awdiv 0009                       ?___lbdiv 0003          __size_of_rainbowCycle 0106  
                     ?___awmod 0003                       ?___flmul 002A                       ?___fltol 0003  
                    _colorWipe 1F12                    __smallconst 0800          __end_of_FadeAllcolors 0C98  
               __size_of_Wheel 00E0       theaterChaseRainbow@i_283 0019                       ?_turnOff 0001  
                  ??_FadeInOut 0043                 ___wmul@product 0007                     ?_checkBuff 0001  
                 _rainbowCycle 3230                       _PIE1bits 000F9D                       _PIR1bits 000F9E  
            colorWipeRainbow@c 0026              colorWipeRainbow@i 0020              colorWipeRainbow@j 0025  
                     _RCONbits 000FD0               __CFG_WDTPS$32768 000000          colorWipeRainbow@i_253 0018  
        colorWipeRainbow@i_254 001A          colorWipeRainbow@i_255 0021          colorWipeRainbow@i_256 001C  
        colorWipeRainbow@i_257 0023          colorWipeRainbow@i_258 001E           __size_of_CylonBounce 0116  
               RunningLights@i 001E                 RunningLights@q 001D                     ?_colorWipe 0001  
                 setPixel@blue 0011              ___wmul@multiplier 0003       __size_of_strobeallColors 009E  
             _fadeInOutRainbow 0C98                       _Delay_ms 3AA2               strobeallColors@c 001B  
             strobeallColors@i 001C               __size_of_RGBLoop 013A    RunningLightsRainbow@pixelOn 0019  
             SetAllColor@i_307 0025               SetAllColor@i_308 0027               SetAllColor@i_309 0021  
        fadeInOutRainbow@i_273 0051          fadeInOutRainbow@j_272 0054          __size_of_theaterChase 011C  
             SetAllColor@newBT 0029                       __Hrparam 0000           __size_of_SetAllColor 0250  
         _RunningLightsRainbow 2B1E                       __Lrparam 0000                 Time_Check@Time 0003  
             __size_of___fldiv 0288               __size_of___awdiv 0084                  ??_staticWheel 0005  
             __size_of___lbdiv 003A               __size_of___awmod 0070               __size_of___flmul 032C  
             __size_of___fltol 00BA           _CycloneBounceRainbow 1C2E                      setAll@Red 0018  
             CylonBounce@i_288 0025               CylonBounce@j_289 0024                     FadeInOut@b 004B  
                   FadeInOut@g 0047                     FadeInOut@k 004F                     FadeInOut@r 0043  
                     ___xxtofl 2C6C                       __ptext10 1520                       __ptext11 1F12  
                     __ptext20 2C6C                       __ptext12 39EA                       __ptext21 36AC  
                     __ptext13 350A                       __ptext30 3B98                       __ptext22 1902  
                     __ptext14 243C                       __ptext31 3804                       __ptext23 21B4  
                     __ptext15 3002                       __ptext32 342A                       __ptext24 311A  
                     __ptext16 2B1E                       __ptext33 3BF8                       __ptext25 1C2E  
                     __ptext17 35E0                       __ptext34 3AA2                       __ptext26 3AE6  
                     __ptext18 1108                       __ptext35 3A46                       __ptext27 3888  
                     __ptext19 080A                       __ptext28 3BD2                       __ptext37 2832  
                     __ptext29 397A                   _theaterChase 2EE6                      setPixel@n 000D  
             __size_of_turnOff 001C                  __size_of_Show 0070                    ??_checkBuff 0001  
                __size_of_main 00F4               _colorWipeRainbow 1520          ?_RunningLightsRainbow 0001  
                     _setPixel 3888                       int$flags 005D          ?_CycloneBounceRainbow 001B  
                  ??_colorWipe 0016          __CFG_CPUDIV$OSC1_PLL2 000000      RunningLightsRainbow@i_342 001F  
    RunningLightsRainbow@i_343 0021                     _INTCONbits 000FF2            __end_of_staticWheel 311A  
          _theaterChaseRainbow 268C              ??_strobeallColors 001B                       intlevel2 0000  
                SetAllcolors@c 0021                  SetAllcolors@i 001F                  SetAllcolors@j 001D  
                   _OSCCONbits 000FD3           ?_theaterChaseRainbow 0001                     _BT_rainbow 02E0  
       __size_of_RunningLights 00CC             __CFG_FOSC$HSPLL_HS 000000         ??_RunningLightsRainbow 0016  
     __end_of_fadeInOutRainbow 1108          ??_theaterChaseRainbow 0016  
